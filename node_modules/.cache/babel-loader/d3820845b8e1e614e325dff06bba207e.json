{"ast":null,"code":"import { flipKeysValues } from \"../Components/helpers/flipKeysValues\";\nimport { sampleBoardDicts } from \"../game_logic/testObjects/sampleBoardDicts\";\nimport { shuffle } from \"../Components/helpers/shuffleArray\";\nexport function getMoveSimplest(responseBoard, pieceId, ranges) {\n  /*dummest possible AI for picking a move. Picks a random move from the range of pieceId**/\n  // https://stackoverflow.com/questions/483666/reverse-invert-a-dictionary-mapping\n  var pieceDict = flipKeysValues(responseBoard);\n  ranges[pieceId] = shuffle(ranges[pieceId]);\n  var start = pieceDict[pieceId];\n  var dest = ranges[pieceId][0];\n  return [start, dest];\n}\n/** for node.js\nif (require.main === module) {\n    let ranges = {\n              'BB1': [],\n              'BB2': [],\n              'BK1': [],\n              'BN1': [[1, 6], [3, 6]],\n              'BN2': [[6, 6], [8, 6]],\n              'BP1': [[1, 6], [1, 5]],\n              'BP2': [[2, 6], [2, 5]],\n              'BP3': [[3, 6], [3, 5]],\n              'BP4': [[4, 6], [4, 5]],\n              'BP5': [[5, 6], [5, 5]],\n              'BP6': [[6, 6], [6, 5]],\n              'BP7': [[7, 6], [7, 5]],\n              'BP8': [[8, 6], [8, 5]],\n              'BQ1': [],\n              'BR1': [],\n              'BR2': [] }\n\n    console.log(getMoveSimplest(sampleBoardDicts['singleMove'], 'BP5', ranges))\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/apiHelpers/getMoveSimplest.js"],"names":["flipKeysValues","sampleBoardDicts","shuffle","getMoveSimplest","responseBoard","pieceId","ranges","pieceDict","start","dest"],"mappings":"AAAA,SAASA,cAAT,QAA+B,sCAA/B;AACA,SAAQC,gBAAR,QAA+B,4CAA/B;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AAGA,OAAO,SAASC,eAAT,CAAyBC,aAAzB,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyD;AAC5D;AACA;AACA,MAAIC,SAAS,GAAGP,cAAc,CAACI,aAAD,CAA9B;AACAE,EAAAA,MAAM,CAACD,OAAD,CAAN,GAAkBH,OAAO,CAACI,MAAM,CAACD,OAAD,CAAP,CAAzB;AACA,MAAIG,KAAK,GAAGD,SAAS,CAACF,OAAD,CAArB;AACA,MAAII,IAAI,GAAGH,MAAM,CAACD,OAAD,CAAN,CAAgB,CAAhB,CAAX;AACA,SAAO,CAACG,KAAD,EAAQC,IAAR,CAAP;AACH;AAID","sourcesContent":["import { flipKeysValues } from \"../Components/helpers/flipKeysValues\";\nimport {sampleBoardDicts} from \"../game_logic/testObjects/sampleBoardDicts\";\nimport {shuffle} from \"../Components/helpers/shuffleArray\";\n\n\nexport function getMoveSimplest(responseBoard, pieceId, ranges) {\n    /*dummest possible AI for picking a move. Picks a random move from the range of pieceId**/\n    // https://stackoverflow.com/questions/483666/reverse-invert-a-dictionary-mapping\n    var pieceDict = flipKeysValues(responseBoard)\n    ranges[pieceId] = shuffle(ranges[pieceId])\n    var start = pieceDict[pieceId]\n    var dest = ranges[pieceId][0]\n    return [start, dest]\n}\n\n\n\n/** for node.js\nif (require.main === module) {\n    let ranges = {\n              'BB1': [],\n              'BB2': [],\n              'BK1': [],\n              'BN1': [[1, 6], [3, 6]],\n              'BN2': [[6, 6], [8, 6]],\n              'BP1': [[1, 6], [1, 5]],\n              'BP2': [[2, 6], [2, 5]],\n              'BP3': [[3, 6], [3, 5]],\n              'BP4': [[4, 6], [4, 5]],\n              'BP5': [[5, 6], [5, 5]],\n              'BP6': [[6, 6], [6, 5]],\n              'BP7': [[7, 6], [7, 5]],\n              'BP8': [[8, 6], [8, 5]],\n              'BQ1': [],\n              'BR1': [],\n              'BR2': [] }\n\n    console.log(getMoveSimplest(sampleBoardDicts['singleMove'], 'BP5', ranges))\n}\n*/\n\n"]},"metadata":{},"sourceType":"module"}