{"ast":null,"code":"import { outOfBounds } from \"../sqrCase/oob\";\nimport { sampleBoardDicts } from \"../testObjects/sampleBoardDicts\";\nimport { xyToRf } from \"../coordType/crdCnvrt\";\nimport { step_1sqr90d, step_1sqr45d, step_1sqr0d, step_1sqr315d, step_1sqr270d, step_1sqr225d, step_1sqr180d, step_1sqr135d } from \"../helpers/stepFuncs\";\nexport function getPath(board, x, y, takeStep) {\n  /**\n    travel a path starting at location (x, y) until step out of bounds. add assignIds\n    to list. direction moving depends on which step function takeStep is\n    */\n  var rf, id;\n  var sqrList = [];\n  [x, y] = takeStep(x, y);\n\n  while (!outOfBounds(x, y)) {\n    rf = xyToRf(x, y);\n    id = board[rf];\n    sqrList.push(id);\n    [x, y] = takeStep(x, y);\n  }\n\n  return sqrList;\n} // module.exports = getPath;\n\n/** for node.js\nif (require.main === module) {\n\n    // imports \n    import {printBoard} from \"../printers/printBoard\";\n    import {getRfsFromIds} from \"../helpers/getRfsFromIds\";\n    \n    let board = sampleBoardDicts[\"check_example3\"];\n    var path;\n\n    // test 1, 90 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr90d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 1, 90', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 2, 45 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr45d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 2, 45', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 3, 0 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr0d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 3, 0', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 4, 315 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr315d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 4, 315', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 5, 270 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr270d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 5, 270', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 6, 225 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr225d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 6, 225', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 7, 180 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr180d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 7, 180', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 8, 135 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr135d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 8, 135', path, [\"d4\"])\n    console.log(\"\\n\");\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/pathsInfo/getPath.js"],"names":["outOfBounds","sampleBoardDicts","xyToRf","step_1sqr90d","step_1sqr45d","step_1sqr0d","step_1sqr315d","step_1sqr270d","step_1sqr225d","step_1sqr180d","step_1sqr135d","getPath","board","x","y","takeStep","rf","id","sqrList","push"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,aAPJ,EAQIC,aARJ,QASS,sBATT;AAYA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,QAA9B,EAAwC;AAC7C;;;;AAIE,MAAIC,EAAJ,EAAQC,EAAR;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,GAACL,CAAD,EAAIC,CAAJ,IAASC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAjB;;AACA,SAAO,CAACd,WAAW,CAACa,CAAD,EAAIC,CAAJ,CAAnB,EAA2B;AACvBE,IAAAA,EAAE,GAAGd,MAAM,CAACW,CAAD,EAAIC,CAAJ,CAAX;AACAG,IAAAA,EAAE,GAAGL,KAAK,CAACI,EAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,IAAR,CAAaF,EAAb;AACA,KAACJ,CAAD,EAAIC,CAAJ,IAASC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAjB;AACH;;AACD,SAAOI,OAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {outOfBounds} from \"../sqrCase/oob\";\nimport {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\nimport {xyToRf} from \"../coordType/crdCnvrt\"\nimport {\n    step_1sqr90d,\n    step_1sqr45d,\n    step_1sqr0d,\n    step_1sqr315d,\n    step_1sqr270d,\n    step_1sqr225d,\n    step_1sqr180d,\n    step_1sqr135d,\n  } from \"../helpers/stepFuncs\";\n\n\nexport function getPath(board, x, y, takeStep) {\n  /**\n    travel a path starting at location (x, y) until step out of bounds. add assignIds\n    to list. direction moving depends on which step function takeStep is\n    */\n    var rf, id;\n    var sqrList = []; \n    [x, y] = takeStep(x, y);\n    while (!outOfBounds(x, y)) {\n        rf = xyToRf(x, y);\n        id = board[rf];\n        sqrList.push(id);\n        [x, y] = takeStep(x, y);\n    }\n    return sqrList;\n}\n\n// module.exports = getPath;\n\n/** for node.js\nif (require.main === module) {\n\n    // imports \n    import {printBoard} from \"../printers/printBoard\";\n    import {getRfsFromIds} from \"../helpers/getRfsFromIds\";\n    \n    let board = sampleBoardDicts[\"check_example3\"];\n    var path;\n\n    // test 1, 90 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr90d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 1, 90', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 2, 45 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr45d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 2, 45', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 3, 0 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr0d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 3, 0', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 4, 315 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr315d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 4, 315', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 5, 270 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr270d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 5, 270', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 6, 225 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr225d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 6, 225', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 7, 180 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr180d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 7, 180', path, [\"d4\"])\n    console.log(\"\\n\");\n\n    // test 8, 135 degrees\n    sqrList = getPath(board, 4, 4, step_1sqr135d);\n    path = getRfsFromIds(board, sqrList)\n    printBoard(board, '\\ntest 8, 135', path, [\"d4\"])\n    console.log(\"\\n\");\n\n}\n*/"]},"metadata":{},"sourceType":"module"}