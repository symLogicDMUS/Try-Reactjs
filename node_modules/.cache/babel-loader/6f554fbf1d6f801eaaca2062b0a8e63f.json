{"ast":null,"code":"import { xyToRf } from \"../coordType/crdCnvrt\";\nimport { step_1sqr0d, step_1sqr180d } from \"../helpers/stepFuncs\";\nimport { getPieceType } from \"../pieceType/getPieceType\";\nimport { getSqrCase } from \"../sqrCase/getSqrCase\";\nimport { ENEMY } from \"../sqrCase/sqrCases\";\nexport function aiEnPassantMove(responseBoard, start, dest, color, specialMoves) {\n  if (!specialMoves.isEnPassant([start, dest])) {\n    return [responseBoard, null];\n  }\n\n  var [x, y] = step_1sqr0d(start[0], start[1]);\n\n  if (getSqrCase(responseBoard, x, y, color) === ENEMY && getPieceType(responseBoard[xyToRf(x, y)]) === 'P') {\n    var captured = responseBoard[xyToRf(x, y)];\n    responseBoard[xyToRf(x, y)] = '#';\n    return [responseBoard, captured];\n  }\n\n  var [x, y] = step_1sqr180d(start[0], start[1]);\n\n  if (getSqrCase(responseBoard, x, y, color) === ENEMY && getPieceType(responseBoard[xyToRf(x, y)]) === 'P') {\n    var captured = responseBoard[xyToRf(x, y)];\n    responseBoard[xyToRf(x, y)] = '#';\n    return [responseBoard, captured];\n  }\n\n  console.log(\"error: pawn not found\");\n  return [responseBoard, null];\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/aiMove/aiEnPassantMove.js"],"names":["xyToRf","step_1sqr0d","step_1sqr180d","getPieceType","getSqrCase","ENEMY","aiEnPassantMove","responseBoard","start","dest","color","specialMoves","isEnPassant","x","y","captured","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AAGA,OAAO,SAASC,eAAT,CAAyBC,aAAzB,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqDC,KAArD,EAA4DC,YAA5D,EAA0E;AAE7E,MAAI,CAAEA,YAAY,CAACC,WAAb,CAAyB,CAACJ,KAAD,EAAQC,IAAR,CAAzB,CAAN,EAA+C;AAC3C,WAAO,CAACF,aAAD,EAAgB,IAAhB,CAAP;AACH;;AAED,MAAI,CAACM,CAAD,EAAIC,CAAJ,IAASb,WAAW,CAACO,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAxB;;AACA,MAAIJ,UAAU,CAACG,aAAD,EAAgBM,CAAhB,EAAmBC,CAAnB,EAAsBJ,KAAtB,CAAV,KAA2CL,KAA3C,IAAoDF,YAAY,CAACI,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAAd,CAAZ,KAA8C,GAAtG,EAA2G;AACvG,QAAIC,QAAQ,GAAGR,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAA5B;AACAP,IAAAA,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAAb,GAA8B,GAA9B;AACA,WAAO,CAACP,aAAD,EAAgBQ,QAAhB,CAAP;AACH;;AAED,MAAI,CAACF,CAAD,EAAIC,CAAJ,IAASZ,aAAa,CAACM,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAA1B;;AACA,MAAIJ,UAAU,CAACG,aAAD,EAAgBM,CAAhB,EAAmBC,CAAnB,EAAsBJ,KAAtB,CAAV,KAA2CL,KAA3C,IAAoDF,YAAY,CAACI,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAAd,CAAZ,KAA8C,GAAtG,EAA2G;AACvG,QAAIC,QAAQ,GAAGR,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAA5B;AACAP,IAAAA,aAAa,CAACP,MAAM,CAACa,CAAD,EAAIC,CAAJ,CAAP,CAAb,GAA8B,GAA9B;AACA,WAAO,CAACP,aAAD,EAAgBQ,QAAhB,CAAP;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAO,CAACV,aAAD,EAAgB,IAAhB,CAAP;AACH","sourcesContent":["import { xyToRf } from \"../coordType/crdCnvrt\"\nimport { step_1sqr0d, step_1sqr180d } from \"../helpers/stepFuncs\"\nimport { getPieceType } from \"../pieceType/getPieceType\"\nimport {getSqrCase} from \"../sqrCase/getSqrCase\"\nimport {ENEMY} from \"../sqrCase/sqrCases\"\n\n\nexport function aiEnPassantMove(responseBoard, start, dest, color, specialMoves) {\n    \n    if (! specialMoves.isEnPassant([start, dest])) {\n        return [responseBoard, null]\n    }\n\n    var [x, y] = step_1sqr0d(start[0], start[1])\n    if (getSqrCase(responseBoard, x, y, color) === ENEMY && getPieceType(responseBoard[xyToRf(x, y)]) === 'P') {\n        var captured = responseBoard[xyToRf(x, y)]\n        responseBoard[xyToRf(x, y)] = '#'\n        return [responseBoard, captured]\n    }\n\n    var [x, y] = step_1sqr180d(start[0], start[1])\n    if (getSqrCase(responseBoard, x, y, color) === ENEMY && getPieceType(responseBoard[xyToRf(x, y)]) === 'P') {\n        var captured = responseBoard[xyToRf(x, y)]\n        responseBoard[xyToRf(x, y)] = '#'\n        return [responseBoard, captured]\n    }\n\n    console.log(\"error: pawn not found\")\n    return [responseBoard, null]\n}"]},"metadata":{},"sourceType":"module"}