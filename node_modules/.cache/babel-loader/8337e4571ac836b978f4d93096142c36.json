{"ast":null,"code":"import { joinToRow } from \"./joinToRow\";\nexport function joinToRows(rows) {\n  /*getFen TASK 3, join each row to be a str**/\n  for (let i = 0; i < rows.length; i++) {\n    rows[i] = joinToRow(rows[i]);\n  }\n\n  return rows;\n} // module.exports = joinToRows;\n\n/** for node.js\nif (require.main === module) {\n    console.log('test 1:')\n    console.log(joinToRows(\n        [['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n         ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n         ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']]))\n    console.log('\\n')\n    console.log('test 2:')\n    console.log(joinToRows(\n        [['r', '#', '#', '#', 'k', '#', '#', 'r'],\n         ['#', 'P', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', 'P', '#', '#'],\n         ['p', '#', '#', '#', 'n', '#', '#', 'p'],\n         ['#', '#', '#', 'b', '#', 'B', 'p', 'P'],\n         ['N', 'B', 'Q', 'b', '#', 'q', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['R', '#', '#', '#', 'K', '#', '#', 'R']]))\n    console.log('\\n')\n    console.log('test 3:')\n    console.log(joinToRows(\n        [['#', '#', '#', 'k', '#', '#', '#', 'b'],\n         ['q', '#', '#', 'r', '#', '#', 'P', '#'],\n         ['#', '#', '#', 'P', '#', 'P', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['q', '#', 'Q', 'K', '#', 'Q', 'B', 'r'],\n         ['#', '#', 'N', 'P', '#', '#', '#', '#'],\n         ['#', '#', '#', 'R', '#', 'R', '#', '#'],\n         ['b', '#', '#', 'q', '#', '#', 'q', '#']]))\n    console.log('\\n')\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/fenParser/getFen/joinToRows.js"],"names":["joinToRow","joinToRows","rows","i","length"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,aAAxB;AAGA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC7B;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUH,SAAS,CAACE,IAAI,CAACC,CAAD,CAAL,CAAnB;AACH;;AACD,SAAOD,IAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {joinToRow} from \"./joinToRow\";\n\n\nexport function joinToRows(rows) {\n    /*getFen TASK 3, join each row to be a str**/\n    for (let i = 0; i < rows.length; i++) {\n        rows[i] = joinToRow(rows[i])\n    }\n    return rows\n}\n\n// module.exports = joinToRows;\n\n/** for node.js\nif (require.main === module) {\n    console.log('test 1:')\n    console.log(joinToRows(\n        [['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n         ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n         ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']]))\n    console.log('\\n')\n    console.log('test 2:')\n    console.log(joinToRows(\n        [['r', '#', '#', '#', 'k', '#', '#', 'r'],\n         ['#', 'P', '#', '#', '#', '#', '#', '#'],\n         ['#', '#', '#', '#', '#', 'P', '#', '#'],\n         ['p', '#', '#', '#', 'n', '#', '#', 'p'],\n         ['#', '#', '#', 'b', '#', 'B', 'p', 'P'],\n         ['N', 'B', 'Q', 'b', '#', 'q', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['R', '#', '#', '#', 'K', '#', '#', 'R']]))\n    console.log('\\n')\n    console.log('test 3:')\n    console.log(joinToRows(\n        [['#', '#', '#', 'k', '#', '#', '#', 'b'],\n         ['q', '#', '#', 'r', '#', '#', 'P', '#'],\n         ['#', '#', '#', 'P', '#', 'P', '#', '#'],\n         ['#', '#', '#', '#', '#', '#', '#', '#'],\n         ['q', '#', 'Q', 'K', '#', 'Q', 'B', 'r'],\n         ['#', '#', 'N', 'P', '#', '#', '#', '#'],\n         ['#', '#', '#', 'R', '#', 'R', '#', '#'],\n         ['b', '#', '#', 'q', '#', '#', 'q', '#']]))\n    console.log('\\n')\n\n}\n*/\n\n"]},"metadata":{},"sourceType":"module"}