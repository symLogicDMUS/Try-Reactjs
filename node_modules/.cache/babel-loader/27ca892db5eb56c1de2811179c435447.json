{"ast":null,"code":"import { sqrUnderAttack } from \"../../../threatArea/top/sqrUnderAttack\";\nimport { getXyBoard } from \"../../../helpers/getXyBoard\";\nimport { pieceDefs } from \"../../../testObjects/standardPieceDefs\";\nimport { xyToRf, rfToXy } from \"../../../coordType/crdCnvrt\";\nimport { sampleBoardDicts } from \"../../../testObjects/sampleBoardDicts\";\nimport { castleTest2 } from \"../../../testObjects/sampleBoardDicts\";\nexport function safePath(board, path, color, pieceDefs, idDict) {\n  /* return true if every square on path is ! under attack, else return false**/\n  for (var rf of path) {\n    if (sqrUnderAttack(board, rfToXy(rf), color, pieceDefs, idDict)) {\n      return false;\n    }\n  }\n\n  return true;\n} // module.exports = safePath;\n\n/** for node.js\nif (require.main === module) {\n\n    let xyBoard = getXyBoard();\n\n    // test 1:\n    console.log('test 1:')\n    var board = sampleBoardDicts[\"castleTest1\"] \n    for (var col of xyBoard) {\n            console.log(safePath(board, col, 'W', pieceDefs, idDict))\n    }\n    \n    // test 2:\n    console.log('test 2:')\n    board = sampleBoardDicts[\"castleTest2\"];\n    for (var col of xyBoard) {\n        console.log(safePath(board, col, 'W', pieceDefs, idDict))\n    }\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/specialMoves/castle/safePath.js"],"names":["sqrUnderAttack","getXyBoard","pieceDefs","xyToRf","rfToXy","sampleBoardDicts","castleTest2","safePath","board","path","color","idDict","rf"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,wCAA7B;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,SAAR,QAAwB,wCAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,6BAA/B;AACA,SAAQC,gBAAR,QAA+B,uCAA/B;AACA,SAASC,WAAT,QAA4B,uCAA5B;AAGA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCR,SAAtC,EAAiDS,MAAjD,EAAyD;AAC5D;AAEA,OAAK,IAAIC,EAAT,IAAeH,IAAf,EAAqB;AACjB,QAAIT,cAAc,CAACQ,KAAD,EAAQJ,MAAM,CAACQ,EAAD,CAAd,EAAoBF,KAApB,EAA2BR,SAA3B,EAAsCS,MAAtC,CAAlB,EAAiE;AAC7D,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {sqrUnderAttack} from \"../../../threatArea/top/sqrUnderAttack\";\nimport {getXyBoard} from \"../../../helpers/getXyBoard\";\nimport {pieceDefs} from \"../../../testObjects/standardPieceDefs\";\nimport { xyToRf, rfToXy } from \"../../../coordType/crdCnvrt\";\nimport {sampleBoardDicts} from \"../../../testObjects/sampleBoardDicts\";\nimport { castleTest2 } from \"../../../testObjects/sampleBoardDicts\";\n\n\nexport function safePath(board, path, color, pieceDefs, idDict) {\n    /* return true if every square on path is ! under attack, else return false**/\n    \n    for (var rf of path) {\n        if (sqrUnderAttack(board, rfToXy(rf), color, pieceDefs, idDict)) {\n            return false\n        }\n    }\n    \n    return true\n}\n\n// module.exports = safePath;\n\n/** for node.js\nif (require.main === module) {\n\n    let xyBoard = getXyBoard();\n\n    // test 1:\n    console.log('test 1:')\n    var board = sampleBoardDicts[\"castleTest1\"] \n    for (var col of xyBoard) {\n            console.log(safePath(board, col, 'W', pieceDefs, idDict))\n    }\n    \n    // test 2:\n    console.log('test 2:')\n    board = sampleBoardDicts[\"castleTest2\"];\n    for (var col of xyBoard) {\n        console.log(safePath(board, col, 'W', pieceDefs, idDict))\n    }\n\n}\n*/"]},"metadata":{},"sourceType":"module"}