{"ast":null,"code":"// A few JavaScript Functions for Images and Files\n// Author: Justin Mitchel\n// Source: https://kirr.co/ndywes\n// Convert a Base64-encoded string to a File object\nexport function base64StringtoFile(base64String, filename) {\n  var arr = base64String.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n} // Download a Base64-encoded file\n\nexport function downloadBase64File(base64Data, filename) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\"href\", base64Data);\n  element.setAttribute(\"download\", filename);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n} // Extract an Base64 Image's File Extension\n\nexport function extractImageFileExtensionFromBase64(base64Data) {\n  return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\"));\n} // Base64 Image to Canvas with a Crop\n\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop) {\n  const canvas = canvasRef; // document.createElement('canvas');\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n  const ctx = canvas.getContext(\"2d\");\n  const image = new Image();\n  image.src = image64;\n\n  image.onload = function () {\n    ctx.drawImage(image, pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height, 0, 0, pixelCrop.width, pixelCrop.height);\n  };\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Icon/Upload/ReusableUtils.jsx"],"names":["base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","downloadBase64File","base64Data","element","document","createElement","setAttribute","style","display","body","appendChild","click","removeChild","extractImageFileExtensionFromBase64","substring","indexOf","image64toCanvasRef","canvasRef","image64","pixelCrop","canvas","width","height","ctx","getContext","image","Image","src","onload","drawImage","x","y"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,OAAO,SAASA,kBAAT,CAA4BC,YAA5B,EAA0CC,QAA1C,EAAoD;AACvD,MAAIC,GAAG,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAV;AAAA,MACIC,IAAI,GAAGF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CADX;AAAA,MAEIC,IAAI,GAAGC,IAAI,CAACL,GAAG,CAAC,CAAD,CAAJ,CAFf;AAAA,MAGIM,CAAC,GAAGF,IAAI,CAACG,MAHb;AAAA,MAIIC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAJZ;;AAKA,SAAOA,CAAC,EAAR,EAAY;AACRE,IAAAA,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACH;;AACD,SAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkBT,QAAlB,EAA4B;AAAEa,IAAAA,IAAI,EAAEV;AAAR,GAA5B,CAAP;AACH,C,CAED;;AAEA,OAAO,SAASW,kBAAT,CAA4BC,UAA5B,EAAwCf,QAAxC,EAAkD;AACrD,MAAIgB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACAF,EAAAA,OAAO,CAACG,YAAR,CAAqB,MAArB,EAA6BJ,UAA7B;AACAC,EAAAA,OAAO,CAACG,YAAR,CAAqB,UAArB,EAAiCnB,QAAjC;AACAgB,EAAAA,OAAO,CAACI,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,OAA1B;AACAA,EAAAA,OAAO,CAACQ,KAAR;AACAP,EAAAA,QAAQ,CAACK,IAAT,CAAcG,WAAd,CAA0BT,OAA1B;AACH,C,CAED;;AACA,OAAO,SAASU,mCAAT,CAA6CX,UAA7C,EAAyD;AAC5D,SAAOA,UAAU,CAACY,SAAX,CAAqB,cAAcnB,MAAnC,EAA2CO,UAAU,CAACa,OAAX,CAAmB,SAAnB,CAA3C,CAAP;AACH,C,CAED;;AACA,OAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,SAAhD,EAA2D;AAC9D,QAAMC,MAAM,GAAGH,SAAf,CAD8D,CACpC;;AAC1BG,EAAAA,MAAM,CAACC,KAAP,GAAeF,SAAS,CAACE,KAAzB;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgBH,SAAS,CAACG,MAA1B;AACA,QAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,EAAAA,KAAK,CAACE,GAAN,GAAYT,OAAZ;;AACAO,EAAAA,KAAK,CAACG,MAAN,GAAe,YAAY;AACvBL,IAAAA,GAAG,CAACM,SAAJ,CACIJ,KADJ,EAEIN,SAAS,CAACW,CAFd,EAGIX,SAAS,CAACY,CAHd,EAIIZ,SAAS,CAACE,KAJd,EAKIF,SAAS,CAACG,MALd,EAMI,CANJ,EAOI,CAPJ,EAQIH,SAAS,CAACE,KARd,EASIF,SAAS,CAACG,MATd;AAWH,GAZD;AAaH","sourcesContent":["// A few JavaScript Functions for Images and Files\n// Author: Justin Mitchel\n// Source: https://kirr.co/ndywes\n\n// Convert a Base64-encoded string to a File object\nexport function base64StringtoFile(base64String, filename) {\n    var arr = base64String.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n}\n\n// Download a Base64-encoded file\n\nexport function downloadBase64File(base64Data, filename) {\n    var element = document.createElement(\"a\");\n    element.setAttribute(\"href\", base64Data);\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\n// Extract an Base64 Image's File Extension\nexport function extractImageFileExtensionFromBase64(base64Data) {\n    return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\"));\n}\n\n// Base64 Image to Canvas with a Crop\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop) {\n    const canvas = canvasRef; // document.createElement('canvas');\n    canvas.width = pixelCrop.width;\n    canvas.height = pixelCrop.height;\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = image64;\n    image.onload = function () {\n        ctx.drawImage(\n            image,\n            pixelCrop.x,\n            pixelCrop.y,\n            pixelCrop.width,\n            pixelCrop.height,\n            0,\n            0,\n            pixelCrop.width,\n            pixelCrop.height\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}