{"ast":null,"code":"import { initPawnIds } from \"../game_logic/JsonRecords/initPawnIds\";\nimport { JsonRecords } from \"../game_logic/JsonRecords/JsonRecords\";\nimport { getTurnData } from \"./getTurnData\";\nimport { getAiColor } from \"../game_logic/color/getAiColor\";\nimport { getNextColor as getEnemyColor } from \"../game_logic/color/getNextColor\";\nexport function firstUpdate(board, records, color, pt, pieceDefs, idDict) {\n  /**same as update but initialize json records */\n  var jsonRecords = new JsonRecords(initPawnIds(records, board));\n  var turnData = getTurnData(board, color, getAiColor(pt), jsonRecords, pieceDefs, idDict);\n  var enemyTurnData = getTurnData(board, getEnemyColor(color), getAiColor(pt), jsonRecords, pieceDefs, idDict);\n  turnData['enemyRanges'] = enemyTurnData['ranges'];\n  return turnData;\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/apiHelpers/firstUpdate.js"],"names":["initPawnIds","JsonRecords","getTurnData","getAiColor","getNextColor","getEnemyColor","firstUpdate","board","records","color","pt","pieceDefs","idDict","jsonRecords","turnData","enemyTurnData"],"mappings":"AAAA,SAAQA,WAAR,QAA2B,uCAA3B;AACA,SAAQC,WAAR,QAA0B,uCAA1B;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,UAAR,QAAyB,gCAAzB;AACA,SAAQC,YAAY,IAAIC,aAAxB,QAA4C,kCAA5C;AAGA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,EAA5C,EAAgDC,SAAhD,EAA2DC,MAA3D,EAAmE;AACtE;AACA,MAAIC,WAAW,GAAG,IAAIZ,WAAJ,CAAgBD,WAAW,CAACQ,OAAD,EAAUD,KAAV,CAA3B,CAAlB;AACA,MAAIO,QAAQ,GAAGZ,WAAW,CAACK,KAAD,EAAQE,KAAR,EAAeN,UAAU,CAACO,EAAD,CAAzB,EAA+BG,WAA/B,EAA4CF,SAA5C,EAAuDC,MAAvD,CAA1B;AACA,MAAIG,aAAa,GAAGb,WAAW,CAACK,KAAD,EAAQF,aAAa,CAACI,KAAD,CAArB,EAA8BN,UAAU,CAACO,EAAD,CAAxC,EAA8CG,WAA9C,EAA2DF,SAA3D,EAAsEC,MAAtE,CAA/B;AACAE,EAAAA,QAAQ,CAAC,aAAD,CAAR,GAA0BC,aAAa,CAAC,QAAD,CAAvC;AACA,SAAOD,QAAP;AACH","sourcesContent":["import {initPawnIds } from \"../game_logic/JsonRecords/initPawnIds\"\nimport {JsonRecords} from \"../game_logic/JsonRecords/JsonRecords\"\nimport {getTurnData} from \"./getTurnData\";\nimport {getAiColor} from \"../game_logic/color/getAiColor\";\nimport {getNextColor as getEnemyColor} from \"../game_logic/color/getNextColor\"\n\n\nexport function firstUpdate(board, records, color, pt, pieceDefs, idDict) {\n    /**same as update but initialize json records */\n    var jsonRecords = new JsonRecords(initPawnIds(records, board))\n    var turnData = getTurnData(board, color, getAiColor(pt), jsonRecords, pieceDefs, idDict)\n    var enemyTurnData = getTurnData(board, getEnemyColor(color), getAiColor(pt), jsonRecords, pieceDefs, idDict)\n    turnData['enemyRanges'] = enemyTurnData['ranges']\n    return turnData;\n}"]},"metadata":{},"sourceType":"module"}