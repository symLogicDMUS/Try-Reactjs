{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Range/Range.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ArrowButton } from \"./ArrowButton/ArrowButton\";\nimport { RangeDisplayWindow } from \"./RangeDisplayWindow\";\nimport { HelpComponent } from \"../../Help/HelpComponent\";\nimport { HelpText } from \"./HelpText\";\nimport \"./Range.css\";\nexport class Range extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\"\n    };\n    this.vectors = {\n      \"135d\": \"upLeft.svg\",\n      \"90d\": \"up.svg\",\n      \"45d\": \"upRight.svg\",\n      \"180d\": \"left.svg\",\n      \"0d\": \"right.svg\",\n      \"225d\": \"downLeft.svg\",\n      \"270d\": \"down.svg\",\n      \"315d\": \"downRight.svg\"\n    };\n    this.buttonPos = {\n      \"135d\": {\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"0px\"\n      },\n      \"90d\": {\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"35px\"\n      },\n      \"45d\": {\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"70px\"\n      },\n      \"180d\": {\n        position: \"absolute\",\n        top: \"35px\",\n        left: \"0px\"\n      },\n      \"0d\": {\n        position: \"absolute\",\n        top: \"35px\",\n        left: \"70px\"\n      },\n      \"225d\": {\n        position: \"absolute\",\n        top: \"70px\",\n        left: \"0px\"\n      },\n      \"270d\": {\n        position: \"absolute\",\n        top: \"70px\",\n        left: \"35px\"\n      },\n      \"315d\": {\n        position: \"absolute\",\n        top: \"70px\",\n        left: \"70px\"\n      }\n    };\n  }\n\n  getArrowButtons() {\n    const arrowButtons = [];\n    Object.entries(this.vectors).forEach(([angle, svg]) => {\n      arrowButtons.push( /*#__PURE__*/React.createElement(ArrowButton, {\n        id_: angle,\n        image: svg,\n        pos: this.buttonPos[angle],\n        isActive: this.props.spans[angle],\n        togleSpan: this.props.togleSpan,\n        setUnsaved: this.props.setUnsaved,\n        update: this.props.update,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }\n      }));\n    });\n    return arrowButtons;\n  }\n\n  getSpans() {\n    let spans = [];\n\n    for (var angle of Object.keys(this.props.spans)) {\n      if (this.props.spans[angle]) {\n        spans.push(\"step_1sqr\" + angle);\n      }\n    }\n\n    return spans;\n  }\n\n  getOffsets() {\n    let offsets = JSON.parse(JSON.stringify(this.props.offsets));\n    return offsets;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"range-tool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"range-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Range\"), /*#__PURE__*/React.createElement(HelpComponent, {\n      helpTitle: \"Creating the Range of a Piece\",\n      hmChildName: \"Range\",\n      helpText: HelpText,\n      togleHelpModal: this.props.togleHelpModal,\n      setHelpText: this.props.setHelpText,\n      style: {\n        left: 63,\n        top: 16,\n        zIndex: \"inherit\",\n        width: 10,\n        height: 10\n      },\n      normal: \"/Images/question-mark-a9a9a9.svg\",\n      highlighted: \"/Images/question-mark-72e2ff.svg\",\n      color: \"#72e2ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(RangeDisplayWindow, {\n      spans: this.getSpans(),\n      offsets: this.getOffsets(),\n      togleSpanText: this.props.togleSpanText,\n      togleOffsetText: this.props.togleOffsetText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"direction-pad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, this.getArrowButtons(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      style: {\n        position: \"absolute\",\n        top: \"35px\",\n        left: \"35px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\nexport let test = () => ReactDOM.render( /*#__PURE__*/React.createElement(Range, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 41\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Range/Range.jsx"],"names":["React","ReactDOM","ArrowButton","RangeDisplayWindow","HelpComponent","HelpText","Range","Component","constructor","props","state","userInput","vectors","buttonPos","position","top","left","getArrowButtons","arrowButtons","Object","entries","forEach","angle","svg","push","spans","togleSpan","setUnsaved","update","getSpans","keys","getOffsets","offsets","JSON","parse","stringify","render","togleHelpModal","setHelpText","zIndex","width","height","togleSpanText","togleOffsetText","test","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ArrowButton} from \"./ArrowButton/ArrowButton\";\nimport {RangeDisplayWindow} from \"./RangeDisplayWindow\";\nimport {HelpComponent} from \"../../Help/HelpComponent\";\nimport {HelpText} from \"./HelpText\";\nimport \"./Range.css\";\n\n\nexport class Range extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {userInput: \"\"}\n        this.vectors = {\n            \"135d\": \"upLeft.svg\",      \n            \"90d\":  \"up.svg\",\n            \"45d\":  \"upRight.svg\",  \n            \"180d\": \"left.svg\",     \n            \"0d\":   \"right.svg\",   \n            \"225d\": \"downLeft.svg\", \n            \"270d\": \"down.svg\",\n            \"315d\": \"downRight.svg\",\n        }\n        this.buttonPos = {\n            \"135d\":{position: \"absolute\",    top: \"0px\",  left:\"0px\" },\n            \"90d\": {position: \"absolute\",    top: \"0px\",  left:\"35px\"}, \n            \"45d\": {position: \"absolute\",    top: \"0px\",  left:\"70px\"},\n            \"180d\":{position: \"absolute\",    top: \"35px\", left:\"0px\"}, \n            \"0d\":  {position: \"absolute\",    top: \"35px\", left:\"70px\"},\n            \"225d\":{position: \"absolute\",    top: \"70px\", left:\"0px\" },\n            \"270d\":{position: \"absolute\",    top: \"70px\", left:\"35px\"},\n            \"315d\":{position: \"absolute\",    top: \"70px\", left:\"70px\"}\n        }\n    }\n\n\n    getArrowButtons() {\n        const arrowButtons = [];\n        Object.entries(this.vectors).forEach( ([angle, svg]) => {\n            arrowButtons.push(<ArrowButton \n                id_={angle} \n                image={svg}\n                pos={this.buttonPos[angle]} \n                isActive={this.props.spans[angle]}\n                togleSpan={this.props.togleSpan}\n                setUnsaved={this.props.setUnsaved}\n                update={this.props.update}\n                />)\n            });\n        return arrowButtons;\n    }    \n\n    getSpans() {\n        let spans = []\n        for (var angle of Object.keys(this.props.spans)) {\n            if (this.props.spans[angle]) {\n                spans.push(\"step_1sqr\" + angle);\n            }\n        }\n        return spans;\n    }\n    \n    getOffsets() {\n        let offsets = JSON.parse(JSON.stringify(this.props.offsets));\n        return offsets;\n    }\n    \n    render() {\n        return(\n            <div className=\"range-tool\">\n                <div className=\"range-title\">Range</div>\n                <HelpComponent helpTitle=\"Creating the Range of a Piece\"\n                               hmChildName=\"Range\"\n                               helpText={HelpText}\n                               togleHelpModal={this.props.togleHelpModal} \n                               setHelpText={this.props.setHelpText} \n                               style={{left:63, top:16, zIndex:\"inherit\", width:10, height:10}}\n                               normal=\"/Images/question-mark-a9a9a9.svg\"\n                               highlighted=\"/Images/question-mark-72e2ff.svg\"\n                               color=\"#72e2ff\"                               \n                />\n                <RangeDisplayWindow spans={this.getSpans()} \n                                    offsets={this.getOffsets()} \n                                    togleSpanText={this.props.togleSpanText} \n                                    togleOffsetText={this.props.togleOffsetText} />\n                <div class=\"direction-pad\">\n                    {this.getArrowButtons()}\n                    <div className=\"middle\" style={{position: \"absolute\", top:\"35px\", left:\"35px\"}} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport let test = () => ReactDOM.render(<Range />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}