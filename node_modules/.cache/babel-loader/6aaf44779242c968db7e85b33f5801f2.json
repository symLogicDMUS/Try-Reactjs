{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PickName/PickName.jsx\";\nimport React from \"react\";\nimport { NavBar } from \"../../NavBar/NavBarRegular3\";\nimport { HelpModal } from \"../../Help/HelpModal\";\nimport { InvalidGameName } from \"./InvalidGameName\";\nimport { getNameStatus } from \"../../helpers/getNameStatus\";\nimport \"./PickName.css\";\nexport class PickName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: '',\n      bValue: true,\n      nameStatus: \"none\",\n      isHelpModal: false\n    };\n    this.navExpanded = true;\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = null;\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.setName = this.setName.bind(this);\n    this.setNameStatus = this.setNameStatus.bind(this);\n    this.reset = this.reset.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className = \"pick-name-body\";\n  }\n\n  handleUserInput(e) {\n    this.setState({\n      userInput: e.target.value\n    });\n  }\n\n  setNameStatus() {\n    this.setState({\n      nameStatus: getNameStatus(this.state.userInput)\n    });\n  }\n\n  reset() {\n    this.setState({\n      nameStatus: null\n    });\n  }\n\n  setName() {\n    this.props.setName(this.state.userInput);\n    this.props.nextStep();\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/NewGame\",\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      navBarPos: \"relative\",\n      navBarPosTop: 0,\n      navBarPosLeft: \"22.2vw\",\n      expandColapseColor: \"000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"enter-game-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/Images/enter-name.svg\",\n      className: \"game-name-form\",\n      alt: \"title to enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"gname\",\n      value: this.state.userInput,\n      onChange: this.handleUserInput,\n      className: \"game-name-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-name-accept-button\",\n      onClick: this.setNameStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Submit\")), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      hmChildName: this.hmChildName,\n      extraModal: null,\n      togleHelpModal: this.togleHelpModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }\n    }), this.state.nameStatus === \"blank\" && /*#__PURE__*/React.createElement(InvalidGameName, {\n      header: \"You can't leave the name of a game blank\",\n      reset: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 50\n      }\n    }), this.state.nameStatus === \"invalid-character\" && /*#__PURE__*/React.createElement(InvalidGameName, {\n      header: \"Game names may only contain characters a-z, A-Z, 0-9, underscores, spaces, and tabs.\",\n      reset: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 62\n      }\n    }), this.state.nameStatus === \"valid\" && this.setName());\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PickName/PickName.jsx"],"names":["React","NavBar","HelpModal","InvalidGameName","getNameStatus","PickName","Component","constructor","props","state","userInput","bValue","nameStatus","isHelpModal","navExpanded","helpTitle","helpText","hmChildName","handleUserInput","bind","setName","setNameStatus","reset","setHelpText","togleHelpModal","componentDidMount","document","body","className","e","setState","target","value","nextStep","boolVal","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {NavBar} from \"../../NavBar/NavBarRegular3\";\nimport {HelpModal} from \"../../Help/HelpModal\";\nimport {InvalidGameName} from \"./InvalidGameName\";\nimport {getNameStatus} from \"../../helpers/getNameStatus\";\nimport \"./PickName.css\";\n\nexport class PickName extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {userInput: '', bValue: true, nameStatus:\"none\", isHelpModal:false};\n    this.navExpanded = true;\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = null;\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.setName = this.setName.bind(this);\n    this.setNameStatus = this.setNameStatus.bind(this);\n    this.reset = this.reset.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className=\"pick-name-body\";\n  }\n\n  handleUserInput(e) {\n    this.setState({ userInput: e.target.value}) \n  }\n\n  setNameStatus() {\n    this.setState({nameStatus: getNameStatus(this.state.userInput)});\n  }\n\n  reset() {\n    this.setState({nameStatus: null})\n  }\n\n  setName() {\n      this.props.setName(this.state.userInput);\n      this.props.nextStep();\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({isHelpModal: boolVal})\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  render() {\n    return (\n        <>\n          <NavBar currentPage=\"/NewGame\" \n                  setHelpText={this.setHelpText} \n                  togleHelpModal={this.togleHelpModal} \n                  navBarPos=\"relative\" navBarPosTop={0} \n                  navBarPosLeft=\"22.2vw\" \n                  expandColapseColor=\"000000\" />\n          <div class=\"enter-game-name\">\n            <img src=\"/Images/enter-name.svg\" className=\"game-name-form\" alt=\"title to enter name\" />\n              <input type=\"text\" id=\"gname\" value={this.state.userInput} onChange={this.handleUserInput} className=\"game-name-form\"/>\n              <button className=\"game-name-accept-button\" onClick={this.setNameStatus}>\n                Submit\n              </button>\n          </div>\n          {this.state.isHelpModal && (<HelpModal helpTitle={this.helpTitle}\n                                                 helpText={this.helpText}\n                                                 hmChildName={this.hmChildName}\n                                                 extraModal={null}\n                                                 togleHelpModal={this.togleHelpModal}/>)}\n          {this.state.nameStatus === \"blank\" && (<InvalidGameName header=\"You can't leave the name of a game blank\" reset={this.reset} />)}\n          {this.state.nameStatus === \"invalid-character\" && (<InvalidGameName header=\"Game names may only contain characters a-z, A-Z, 0-9, underscores, spaces, and tabs.\" reset={this.reset} />)}\n          {this.state.nameStatus === \"valid\" && (this.setName())}\n        </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}