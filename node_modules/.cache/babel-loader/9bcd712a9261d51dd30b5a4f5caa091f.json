{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/CreatePiece.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Name } from \"./Name/Name\";\nimport { Range } from \"./Range/Range\";\nimport { Icon } from \"./Icon/Icon\";\nimport { Location } from \"./Location/Location\";\nimport { CreatePieceBoard as Board } from \"./Board/CreatePieceBoard\";\nimport { NameLabel } from \"./NameLabel/NameLabel\";\nimport { stepFuncDict } from \"../helpers/stepFuncs\";\nimport { outOfBounds as oob } from \"../helpers/oob\";\nimport { isIndentifier } from \"../helpers/isIdentifier\";\nimport { xyToRf, rfToXy } from \"../helpers/crdCnvrt\";\nimport { getRotations } from \"./helpers/getRotations\";\nimport { getSpansDict } from \"./helpers/getSpansDict\";\nimport { flipOffsets } from \"./helpers/flipOffsets\";\nimport { getStepFuncNames } from \"./helpers/getStepFuncNames\";\nimport { SaveDef } from \"./Options/SaveDef/SaveDef\";\nimport { LoadDef } from \"./Options/LoadDef/LoadDef\";\nimport { ResetDef } from \"./Options/ResetDef/ResetDef\";\nimport { BlankDef } from \"./Options/BlankDef/BlankDef\";\nimport { ThemeCreatePiece } from \"./Options/ThemeCreatePiece/ThemeCreatePiece\";\nimport { CreatedPieceProfiles } from \"./Options/LoadDef/Modals/CreatedPieceProfiles\";\nimport { HelpComponent } from \"../Help/HelpComponent\";\nimport { HelpModal } from \"../Help/HelpModal\";\nimport { NavBar } from \"../NavBar/NavBarRegular\";\nimport { ConfirmRedirect } from \"../NavBar/ConfirmRedirect\";\nimport { redirectMessageStr } from \"./helpers/redirectMessageStr\";\nimport { OptionsTool } from \"./Options/OptionsTool\";\nimport { RangeHelpTextExtraModal } from \"./Range/HelpTextExtraModal\";\nimport { HelpText as OptionsText } from \"./Options/HelpText\";\nimport { saveDef } from \"../../API/saveDef\";\nimport { getDefs } from \"../../API/getDefs\";\nimport { defs } from \"../tests/defs1\";\nimport \"./CreatePiece.css\";\nexport class CreatePiece extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      binaryValue: 0,\n      isHelpModal: false,\n      isLoadModal: false\n    };\n    this.defs = {};\n    this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n    this.standardsLc = [\"rook\", \"bishop\", \"queen\", \"knight\", \"pawn\", \"king\"]; //used to record in defs object at the end:\n\n    this.name = \"\";\n    this.spans = {\n      \"90d\": false,\n      \"45d\": false,\n      \"0d\": false,\n      \"315d\": false,\n      \"270d\": false,\n      \"225d\": false,\n      \"180d\": false,\n      \"135d\": false\n    };\n    this.offsets = [];\n    this.pieceImg = {\n      \"white\": null,\n      \"black\": null\n    }; //static copies so can reset if want to:\n\n    this.loadedName = null;\n    this.loadedSpans = null;\n    this.loadedOffsets = null;\n    this.loadedImgNames = null; //true values rendered highlight color (currently red) as part of span.\n\n    this.spanDisplays = {\n      'a1': false,\n      'a2': false,\n      'a3': false,\n      'a4': false,\n      'a5': false,\n      'a6': false,\n      'a7': false,\n      'a8': false,\n      'b1': false,\n      'b2': false,\n      'b3': false,\n      'b4': false,\n      'b5': false,\n      'b6': false,\n      'b7': false,\n      'b8': false,\n      'c1': false,\n      'c2': false,\n      'c3': false,\n      'c4': false,\n      'c5': false,\n      'c6': false,\n      'c7': false,\n      'c8': false,\n      'd1': false,\n      'd2': false,\n      'd3': false,\n      'd4': false,\n      'd5': false,\n      'd6': false,\n      'd7': false,\n      'd8': false,\n      'e1': false,\n      'e2': false,\n      'e3': false,\n      'e4': false,\n      'e5': false,\n      'e6': false,\n      'e7': false,\n      'e8': false,\n      'f1': false,\n      'f2': false,\n      'f3': false,\n      'f4': false,\n      'f5': false,\n      'f6': false,\n      'f7': false,\n      'f8': false,\n      'g1': false,\n      'g2': false,\n      'g3': false,\n      'g4': false,\n      'g5': false,\n      'g6': false,\n      'g7': false,\n      'g8': false,\n      'h1': false,\n      'h2': false,\n      'h3': false,\n      'h4': false,\n      'h5': false,\n      'h6': false,\n      'h7': false,\n      'h8': false\n    }; //true values rendered highlight color (currently dark red) and calculate jump offsets\n\n    this.jumpDisplays = {\n      'a1': false,\n      'a2': false,\n      'a3': false,\n      'a4': false,\n      'a5': false,\n      'a6': false,\n      'a7': false,\n      'a8': false,\n      'b1': false,\n      'b2': false,\n      'b3': false,\n      'b4': false,\n      'b5': false,\n      'b6': false,\n      'b7': false,\n      'b8': false,\n      'c1': false,\n      'c2': false,\n      'c3': false,\n      'c4': false,\n      'c5': false,\n      'c6': false,\n      'c7': false,\n      'c8': false,\n      'd1': false,\n      'd2': false,\n      'd3': false,\n      'd4': false,\n      'd5': false,\n      'd6': false,\n      'd7': false,\n      'd8': false,\n      'e1': false,\n      'e2': false,\n      'e3': false,\n      'e4': false,\n      'e5': false,\n      'e6': false,\n      'e7': false,\n      'e8': false,\n      'f1': false,\n      'f2': false,\n      'f3': false,\n      'f4': false,\n      'f5': false,\n      'f6': false,\n      'f7': false,\n      'f8': false,\n      'g1': false,\n      'g2': false,\n      'g3': false,\n      'g4': false,\n      'g5': false,\n      'g6': false,\n      'g7': false,\n      'g8': false,\n      'h1': false,\n      'h2': false,\n      'h3': false,\n      'h4': false,\n      'h5': false,\n      'h6': false,\n      'h7': false,\n      'h8': false\n    }; //to use for spans, update by Location:\n\n    this.location = \"d4\"; //flag to displaying progress in saving piece, if any\n\n    this.saveStatus = \"none\"; //attributes for various displays\n\n    this.unsaved = false;\n    this.showSpanText = true;\n    this.showOffsetText = true;\n    this.helpTitle = \"\";\n    this.helpText = \"\";\n    this.hmChildName = null; //Name of HelpModal child\n\n    this.navExpanded = true;\n    this.optionTool = true;\n    this.confirmRedirectModal = false;\n    this.redirectPath = null;\n    this.redirectMessage = redirectMessageStr; //Dictionary of Extra windows to display for help modals. More may be added.\n\n    this.hmChildren = {\n      \"none\": null,\n      \"Range\": /*#__PURE__*/React.createElement(RangeHelpTextExtraModal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      })\n    }; //binds\n\n    this.save = this.save.bind(this);\n    this.load = this.load.bind(this);\n    this.reset = this.reset.bind(this);\n    this.clear = this.clear.bind(this);\n    this.update = this.update.bind(this);\n    this.setLoc = this.setLoc.bind(this);\n    this.updateName = this.updateName.bind(this);\n    this.setSaveStatus = this.setSaveStatus.bind(this);\n    this.togleSpan = this.togleSpan.bind(this);\n    this.togleJump = this.togleJump.bind(this);\n    this.setPieceImg = this.setPieceImg.bind(this);\n    this.togleSpanText = this.togleSpanText.bind(this);\n    this.togleOffsetText = this.togleOffsetText.bind(this);\n    this.togleOptionTool = this.togleOptionTool.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.togleLoadModal = this.togleLoadModal.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n    this.setConfirmRedirect = this.setConfirmRedirect.bind(this);\n    this.setUnsaved = this.setUnsaved.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className = \"create-piece-body\";\n    getDefs().then(([defs]) => {\n      if (defs) {\n        this.defs = defs;\n\n        for (var pieceName of this.standards) {\n          if (Object.keys(this.defs).includes(pieceName)) delete this.defs[pieceName];\n        }\n      } else {\n        this.defs = {};\n      }\n\n      if (this.props.defaultPiece != null) this.load(this.props.defaultPiece);\n      this.setState({\n        binaryValue: !this.state.binaryValue\n      });\n    });\n  }\n\n  update() {\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  load(pieceName) {\n    this.name = pieceName;\n    this.spans = getSpansDict(this.defs[pieceName]['W']['spans']);\n    this.offsets = this.defs[pieceName]['W']['offsets'];\n    this.pieceImg = {\n      \"white\": this.defs[pieceName]['W']['img'],\n      \"black\": this.defs[pieceName]['B']['img']\n    }; // provide static copy so that can reset if want to:\n\n    this.loadedName = JSON.parse(JSON.stringify(this.name));\n    this.loadedSpans = JSON.parse(JSON.stringify(this.spans));\n    this.loadedOffsets = JSON.parse(JSON.stringify(this.offsets)); //reminder: calls this.update() at end\n\n    this.setLoc(\"d4\");\n  }\n\n  togleLoadModal(boolVal) {\n    this.setState({\n      isLoadModal: boolVal\n    });\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  getHelpModalChild() {\n    return this.hmChildren[this.hmChildName];\n  }\n\n  save() {\n    /**TODO: add guards against all possible bad user input for name */\n    let namecase = this.getNameCase();\n\n    if (namecase !== \"valid\") {\n      this.setSaveStatus(namecase);\n      return;\n    }\n\n    if (this.pieceImg['white'] === null || this.pieceImg['black'] === null) {\n      this.setSaveStatus('no-icon');\n      return;\n    }\n\n    this.defs[this.name] = {\n      \"W\": {\n        \"spans\": null,\n        \"offsets\": null,\n        \"img\": null\n      },\n      \"B\": {\n        \"spans\": null,\n        \"offsets\": null,\n        \"img\": null\n      }\n    };\n    const angles = [];\n\n    for (var s of Object.keys(this.spans)) {\n      if (this.spans[s]) angles.push(s);\n    }\n\n    this.defs[this.name]['W']['spans'] = getStepFuncNames(angles);\n    this.defs[this.name]['B']['spans'] = getStepFuncNames(getRotations(angles, 180));\n    this.defs[this.name]['W'][\"offsets\"] = this.offsets;\n    this.defs[this.name]['B'][\"offsets\"] = flipOffsets(this.offsets);\n    this.defs[this.name]['W']['img'] = this.imgNames['white'];\n    this.defs[this.name]['B']['img'] = this.imgNames['black'];\n    saveDef(this.name, this.defs[this.name]).then(([response]) => {\n      this.setSaveStatus(\"success\");\n    });\n  }\n\n  setSaveStatus(value) {\n    this.saveStatus = value;\n    this.update();\n  }\n\n  setUnsaved(boolVal) {\n    this.unsaved = boolVal;\n  }\n\n  updateName(input) {\n    this.name = input;\n    this.update();\n  }\n\n  setPieceImg(color, pieceImgBase64Str) {\n    this.pieceImg[color] = pieceImgBase64Str;\n    this.update();\n  }\n\n  togleSpan(angle) {\n    this.spans[angle] = !this.spans[angle];\n    const stepFunc = stepFuncDict[angle];\n    let rf = stepFunc(this.location);\n\n    while (!oob(rf)) {\n      this.spanDisplays[rf] = this.spans[angle];\n      rf = stepFunc(rf);\n    }\n  }\n\n  setDisplaySpan(angle) {\n    const stepFunc = stepFuncDict[angle];\n    let rf = stepFunc(this.location);\n\n    while (!oob(rf)) {\n      this.spanDisplays[rf] = true;\n      rf = stepFunc(rf);\n    }\n  }\n\n  setDisplaySpans() {\n    Object.entries(this.spans).forEach(([angle, isActive]) => {\n      if (isActive) this.setDisplaySpan(angle);\n    });\n  }\n\n  togleSpanText() {\n    this.showSpanText = !this.showSpanText;\n    this.update();\n  }\n\n  resetSpanDisplays() {\n    //turn off all displays\n    this.spanDisplays = Object.values(this.spanDisplays).map(isSpan => isSpan & false);\n  }\n\n  togleJump(rf, offset) {\n    this.jumpDisplays[rf] = !this.jumpDisplays[rf];\n    let offsetStrs = this.offsets.map(o => JSON.stringify(o));\n\n    if (offsetStrs.includes(JSON.stringify(offset))) {\n      let i = offsetStrs.indexOf(JSON.stringify(offset));\n      this.offsets.splice(i, 1);\n    } else this.offsets.push(offset);\n  }\n\n  resetJumpDisplays() {\n    this.jumpDisplays = Object.values(this.jumpDisplays).map(isJump => isJump & false);\n  }\n\n  setJumpDisplays() {\n    let [x1, y1] = rfToXy(this.location);\n    let [dx, dy] = [-1, -1];\n    this.offsets.forEach(xy => {\n      dx = x1 + xy[0];\n      dy = y1 + xy[1];\n      this.jumpDisplays[xyToRf(dx, dy)] = true;\n    });\n  }\n\n  togleOffsetText() {\n    this.showOffsetText = !this.showOffsetText;\n    this.update();\n  }\n\n  togleOptionTool(boolVal) {\n    this.optionTool = boolVal;\n    this.update();\n  }\n\n  setLoc(rf) {\n    this.location = rf;\n    this.resetSpanDisplays();\n    this.resetJumpDisplays();\n    this.setDisplaySpans();\n    this.setJumpDisplays();\n    this.update();\n  }\n\n  getNameCase() {\n    if (this.name === \"\") return \"blank-name\";\n    let name = this.name.split(\"\");\n    if (!name.every(isIndentifier)) return \"invalid-character\";\n    let digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    if (digits.includes(name[0])) return \"leading-digit\";\n    if (this.standardsLc.includes(this.name.toLowerCase())) return \"standard-name\";\n    return \"valid\";\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  setConfirmRedirect(boolVal, path) {\n    this.confirmRedirectModal = boolVal;\n    this.redirectPath = path;\n    this.update();\n  }\n\n  clear() {\n    Object.keys(this.spans).forEach(rf => {\n      this.spans[rf] = false;\n    });\n    Object.keys(this.spanDisplays).forEach(rf => {\n      this.spanDisplays[rf] = false;\n    });\n    Object.keys(this.jumpDisplays).forEach(rf => {\n      this.jumpDisplays[rf] = false;\n    });\n    this.name = \"\";\n    this.pieceImg = {\n      \"white\": null,\n      \"black\": null\n    };\n    this.location = \"d4\";\n    this.offsets = [];\n    this.saveStatus = \"none\";\n    this.update();\n  }\n\n  reset() {\n    if (this.loadedName === null) this.clear();else {\n      this.name = JSON.parse(JSON.stringify(this.loadedName));\n      this.spans = JSON.parse(JSON.stringify(this.loadedSpans));\n      this.offsets = JSON.parse(JSON.stringify(this.loadedOffsets));\n      this.imgNames = JSON.parse(JSON.stringify(this.loadedImgNames));\n      this.setLoc(this.location);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Name, {\n      name: this.name,\n      updateName: this.updateName,\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NameLabel, {\n      name: this.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Range, {\n      spans: this.spans,\n      offsets: this.offsets,\n      togleSpan: this.togleSpan,\n      update: this.update,\n      togleOffsetText: this.togleOffsetText,\n      togleSpanText: this.togleSpanText,\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      pieceImg: this.pieceImg,\n      setImg: this.setPieceImg,\n      updateParent: this.update,\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Location, {\n      activeLocation: this.location,\n      setLoc: this.setLoc,\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }\n    }), this.optionTool && /*#__PURE__*/React.createElement(OptionsTool, {\n      togleOptionTool: this.togleOptionTool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(SaveDef, {\n      normal: \"/Images/save-a9a9a9.svg\",\n      highlighted: \"/Images/save-72e2ff.svg\",\n      existing: Object.keys(this.defs),\n      save: this.save,\n      name: this.name,\n      clear: this.clear,\n      status: this.saveStatus,\n      setSaveStatus: this.setSaveStatus,\n      togleOptionTool: this.togleOptionTool,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(LoadDef, {\n      normal: \"/Images/load-piece-a9a9a9.svg\",\n      highlighted: \"/Images/load-piece-72e2ff.svg\",\n      togleLoadModal: this.togleLoadModal,\n      togleOptionTool: this.togleOptionTool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ResetDef, {\n      normal: \"/Images/reset-range-a9a9a9.svg\",\n      highlighted: \"/Images/reset-range-72e2ff.svg\",\n      reset: this.reset,\n      togleOptionTool: this.togleOptionTool,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BlankDef, {\n      normal: \"/Images/erase-range-a9a9a9.svg\",\n      highlighted: \"/Images/erase-range-72e2ff.svg\",\n      clear: this.clear,\n      togleOptionTool: this.togleOptionTool,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ThemeCreatePiece, {\n      normal: \"/Images/theme-create-piece-a9a9a9.svg\",\n      highlighted: \"/Images/theme-create-piece-72e2ff.svg\",\n      togleOptionTool: this.togleOptionTool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(HelpComponent, {\n      helpTitle: \"Options\",\n      normal: \"/Images/question-mark-a9a9a9.svg\",\n      highlighted: \"/Images/question-mark-72e2ff.svg\",\n      style: {\n        left: 948,\n        top: 655,\n        zIndex: \"inherit\",\n        width: 10,\n        height: 10\n      },\n      color: \"#72e2ff\",\n      hmChildName: \"none\",\n      helpText: OptionsText,\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      update: this.update,\n      togleJump: this.togleJump,\n      spanDisplays: this.spanDisplays,\n      jumps: this.jumpDisplays,\n      pieceLoc: this.location,\n      pieceImg: this.pieceImg[\"white\"],\n      showSpanText: this.showSpanText,\n      showOffsetText: this.showOffsetText,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }), this.state.isLoadModal && /*#__PURE__*/React.createElement(CreatedPieceProfiles, {\n      defs: this.defs,\n      load: this.load,\n      togleLoadModal: this.togleLoadModal,\n      setUnsaved: this.setUnsaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 45\n      }\n    }), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      togleHelpModal: this.togleHelpModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 45\n      }\n    }, this.getHelpModalChild()), this.navExpanded && /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/CreatePiece\",\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      setConfirmRedirect: this.setConfirmRedirect,\n      unsavedProgress: this.unsaved,\n      navBarPosTop: 0,\n      navBarPosLeft: 263,\n      backgroundColor: \"#515151\",\n      iconColor: \"969696\",\n      iconColorHover: \"969696\",\n      backgroundColorSelected: \"#3d3d3d\",\n      border: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 39\n      }\n    }), this.confirmRedirectModal && /*#__PURE__*/React.createElement(ConfirmRedirect, {\n      path: this.redirectPath,\n      message: this.redirectMessage,\n      setConfirmRedirect: this.setConfirmRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\nexport let test = () => ReactDOM.render( /*#__PURE__*/React.createElement(CreatePiece, {\n  defs: defs,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 41\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/CreatePiece.jsx"],"names":["React","ReactDOM","Name","Range","Icon","Location","CreatePieceBoard","Board","NameLabel","stepFuncDict","outOfBounds","oob","isIndentifier","xyToRf","rfToXy","getRotations","getSpansDict","flipOffsets","getStepFuncNames","SaveDef","LoadDef","ResetDef","BlankDef","ThemeCreatePiece","CreatedPieceProfiles","HelpComponent","HelpModal","NavBar","ConfirmRedirect","redirectMessageStr","OptionsTool","RangeHelpTextExtraModal","HelpText","OptionsText","saveDef","getDefs","defs","CreatePiece","Component","constructor","props","state","binaryValue","isHelpModal","isLoadModal","standards","standardsLc","name","spans","offsets","pieceImg","loadedName","loadedSpans","loadedOffsets","loadedImgNames","spanDisplays","jumpDisplays","location","saveStatus","unsaved","showSpanText","showOffsetText","helpTitle","helpText","hmChildName","navExpanded","optionTool","confirmRedirectModal","redirectPath","redirectMessage","hmChildren","save","bind","load","reset","clear","update","setLoc","updateName","setSaveStatus","togleSpan","togleJump","setPieceImg","togleSpanText","togleOffsetText","togleOptionTool","setHelpText","togleLoadModal","togleHelpModal","setConfirmRedirect","setUnsaved","componentDidMount","document","body","className","then","pieceName","Object","keys","includes","defaultPiece","setState","JSON","parse","stringify","boolVal","getHelpModalChild","namecase","getNameCase","angles","s","push","imgNames","response","value","input","color","pieceImgBase64Str","angle","stepFunc","rf","setDisplaySpan","setDisplaySpans","entries","forEach","isActive","resetSpanDisplays","values","map","isSpan","offset","offsetStrs","o","i","indexOf","splice","resetJumpDisplays","isJump","setJumpDisplays","x1","y1","dx","dy","xy","split","every","digits","toLowerCase","path","render","left","top","zIndex","width","height","test","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Name} from \"./Name/Name\";\nimport {Range} from \"./Range/Range\";\nimport {Icon} from \"./Icon/Icon\";\nimport {Location} from \"./Location/Location\";\nimport {CreatePieceBoard as Board} from \"./Board/CreatePieceBoard\";\nimport {NameLabel} from \"./NameLabel/NameLabel\";\nimport {stepFuncDict} from \"../helpers/stepFuncs\";\nimport {outOfBounds as oob} from \"../helpers/oob\";\nimport {isIndentifier} from \"../helpers/isIdentifier\";\nimport {xyToRf, rfToXy} from \"../helpers/crdCnvrt\"\nimport {getRotations} from \"./helpers/getRotations\";\nimport {getSpansDict} from \"./helpers/getSpansDict\";\nimport {flipOffsets} from \"./helpers/flipOffsets\";\nimport {getStepFuncNames} from \"./helpers/getStepFuncNames\"\nimport {SaveDef} from \"./Options/SaveDef/SaveDef\";\nimport {LoadDef} from \"./Options/LoadDef/LoadDef\";\nimport {ResetDef} from \"./Options/ResetDef/ResetDef\";\nimport {BlankDef} from \"./Options/BlankDef/BlankDef\";\nimport {ThemeCreatePiece} from \"./Options/ThemeCreatePiece/ThemeCreatePiece\";\nimport { CreatedPieceProfiles } from \"./Options/LoadDef/Modals/CreatedPieceProfiles\";\nimport { HelpComponent } from \"../Help/HelpComponent\";\nimport {HelpModal} from \"../Help/HelpModal\";\nimport {NavBar} from \"../NavBar/NavBarRegular\";\nimport {ConfirmRedirect} from \"../NavBar/ConfirmRedirect\";\nimport {redirectMessageStr} from \"./helpers/redirectMessageStr\";\nimport { OptionsTool } from \"./Options/OptionsTool\";\nimport {RangeHelpTextExtraModal} from \"./Range/HelpTextExtraModal\";\nimport {HelpText as OptionsText} from \"./Options/HelpText\";\nimport {saveDef} from \"../../API/saveDef\";\nimport {getDefs} from \"../../API/getDefs\";\nimport {defs} from \"../tests/defs1\";\nimport \"./CreatePiece.css\";\n\n\nexport class CreatePiece extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {binaryValue: 0, isHelpModal: false, isLoadModal: false};\n\n        this.defs = {}\n\n        this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n        this.standardsLc = [\"rook\", \"bishop\", \"queen\", \"knight\", \"pawn\", \"king\"];\n\n        //used to record in defs object at the end:\n        this.name = \"\";\n        this.spans = {\n            \"90d\" :false,\n            \"45d\" :false,\n            \"0d\"  :false,\n            \"315d\":false,\n            \"270d\":false,\n            \"225d\":false,\n            \"180d\":false,\n            \"135d\":false\n        }\n        this.offsets = [];\n        this.pieceImg = {\"white\":null, \"black\":null};\n\n        //static copies so can reset if want to:\n        this.loadedName = null;\n        this.loadedSpans = null; \n        this.loadedOffsets = null;\n        this.loadedImgNames = null;\n\n        //true values rendered highlight color (currently red) as part of span.\n        this.spanDisplays = { \n            'a1': false, 'a2': false, 'a3': false, 'a4': false, 'a5': false, 'a6': false, 'a7': false, 'a8': false,\n            'b1': false, 'b2': false, 'b3': false, 'b4': false, 'b5': false, 'b6': false, 'b7': false, 'b8': false,\n            'c1': false, 'c2': false, 'c3': false, 'c4': false, 'c5': false, 'c6': false, 'c7': false, 'c8': false,\n            'd1': false, 'd2': false, 'd3': false, 'd4': false, 'd5': false, 'd6': false, 'd7': false, 'd8': false, \n            'e1': false, 'e2': false, 'e3': false, 'e4': false, 'e5': false, 'e6': false, 'e7': false, 'e8': false, \n            'f1': false, 'f2': false, 'f3': false, 'f4': false, 'f5': false, 'f6': false, 'f7': false, 'f8': false,\n            'g1': false, 'g2': false, 'g3': false, 'g4': false, 'g5': false, 'g6': false, 'g7': false, 'g8': false, \n            'h1': false, 'h2': false, 'h3': false, 'h4': false, 'h5': false, 'h6': false, 'h7': false, 'h8': false\n        };\n\n\n        //true values rendered highlight color (currently dark red) and calculate jump offsets\n        this.jumpDisplays = { \n            'a1': false, 'a2': false, 'a3': false, 'a4': false, 'a5': false, 'a6': false, 'a7': false, 'a8': false,\n            'b1': false, 'b2': false, 'b3': false, 'b4': false, 'b5': false, 'b6': false, 'b7': false, 'b8': false,\n            'c1': false, 'c2': false, 'c3': false, 'c4': false, 'c5': false, 'c6': false, 'c7': false, 'c8': false,\n            'd1': false, 'd2': false, 'd3': false, 'd4': false, 'd5': false, 'd6': false, 'd7': false, 'd8': false, \n            'e1': false, 'e2': false, 'e3': false, 'e4': false, 'e5': false, 'e6': false, 'e7': false, 'e8': false, \n            'f1': false, 'f2': false, 'f3': false, 'f4': false, 'f5': false, 'f6': false, 'f7': false, 'f8': false,\n            'g1': false, 'g2': false, 'g3': false, 'g4': false, 'g5': false, 'g6': false, 'g7': false, 'g8': false, \n            'h1': false, 'h2': false, 'h3': false, 'h4': false, 'h5': false, 'h6': false, 'h7': false, 'h8': false\n        };\n        \n        //to use for spans, update by Location:\n        this.location = \"d4\"        \n\n        //flag to displaying progress in saving piece, if any\n        this.saveStatus = \"none\";\n\n        //attributes for various displays\n        this.unsaved = false;\n        this.showSpanText = true;\n        this.showOffsetText = true;\n        this.helpTitle = \"\";\n        this.helpText = \"\";\n        this.hmChildName = null; //Name of HelpModal child\n        this.navExpanded = true;\n        this.optionTool = true;\n        this.confirmRedirectModal = false;\n        this.redirectPath = null;\n        this.redirectMessage = redirectMessageStr;\n\n\n        //Dictionary of Extra windows to display for help modals. More may be added.\n        this.hmChildren = {\"none\":null, \"Range\":<RangeHelpTextExtraModal />} \n\n        //binds\n        this.save = this.save.bind(this);\n        this.load = this.load.bind(this);\n        this.reset = this.reset.bind(this);\n        this.clear = this.clear.bind(this);\n        this.update = this.update.bind(this);\n        this.setLoc = this.setLoc.bind(this);\n        this.updateName = this.updateName.bind(this);\n        this.setSaveStatus = this.setSaveStatus.bind(this);\n        this.togleSpan = this.togleSpan.bind(this);\n        this.togleJump = this.togleJump.bind(this);\n        this.setPieceImg = this.setPieceImg.bind(this);\n        this.togleSpanText = this.togleSpanText.bind(this);\n        this.togleOffsetText = this.togleOffsetText.bind(this);\n        this.togleOptionTool = this.togleOptionTool.bind(this);\n        this.setHelpText = this.setHelpText.bind(this);\n        this.togleLoadModal = this.togleLoadModal.bind(this);\n        this.togleHelpModal = this.togleHelpModal.bind(this);\n        this.setConfirmRedirect = this.setConfirmRedirect.bind(this);\n        this.setUnsaved = this.setUnsaved.bind(this);\n    }\n\n    componentDidMount() {\n\n        document.body.className=\"create-piece-body\";\n        \n        getDefs().then(([defs]) => {\n            \n            if (defs) {\n                this.defs = defs;\n                for (var pieceName of this.standards) {\n                    if (Object.keys(this.defs).includes(pieceName))\n                        delete this.defs[pieceName];\n                }        \n            }\n            else {\n                this.defs = {}\n            }\n\n            if (this.props.defaultPiece != null) \n                this.load(this.props.defaultPiece);\n            \n            this.setState({binaryValue: ! this.state.binaryValue});\n        });\n    }\n\n    update() {\n        this.setState({binaryValue: ! this.state.binaryValue});\n    }\n\n    load(pieceName) {\n\n        this.name = pieceName;\n        this.spans = getSpansDict(this.defs[pieceName]['W']['spans']);\n        this.offsets = this.defs[pieceName]['W']['offsets'];\n        this.pieceImg = { \"white\": this.defs[pieceName]['W']['img'],\n                          \"black\": this.defs[pieceName]['B']['img']}\n        \n        // provide static copy so that can reset if want to:\n        this.loadedName = JSON.parse(JSON.stringify(this.name));\n        this.loadedSpans = JSON.parse(JSON.stringify(this.spans));\n        this.loadedOffsets = JSON.parse(JSON.stringify(this.offsets));\n                \n        //reminder: calls this.update() at end\n        this.setLoc(\"d4\");\n        \n    }\n\n    togleLoadModal(boolVal) {\n        this.setState({isLoadModal: boolVal})\n    }\n\n    togleHelpModal(boolVal) {\n        this.setState({isHelpModal: boolVal})\n    }\n\n    getHelpModalChild() {\n        return this.hmChildren[this.hmChildName]\n    }\n\n    save() {\n\n        /**TODO: add guards against all possible bad user input for name */\n\n        let namecase = this.getNameCase();\n        if (namecase !== \"valid\") {\n            this.setSaveStatus(namecase);\n            return\n        }\n        \n        if (this.pieceImg['white'] === null || this.pieceImg['black'] === null) {\n            this.setSaveStatus('no-icon');\n            return\n        }        \n\n        this.defs[this.name] = { \n            \"W\":{\"spans\":null, \"offsets\":null, \"img\": null}, \n            \"B\":{\"spans\":null, \"offsets\": null, \"img\": null}\n        }\n\n        const angles = [];\n        for (var s of Object.keys(this.spans)) {\n            if (this.spans[s])\n                angles.push(s);\n        }\n\n        this.defs[this.name]['W']['spans'] = getStepFuncNames(angles);\n        this.defs[this.name]['B']['spans'] = getStepFuncNames(getRotations(angles, 180));\n        this.defs[this.name]['W'][\"offsets\"] = this.offsets;\n        this.defs[this.name]['B'][\"offsets\"] = flipOffsets(this.offsets);\n        this.defs[this.name]['W']['img'] = this.imgNames['white'];\n        this.defs[this.name]['B']['img'] = this.imgNames['black'];\n\n        saveDef(this.name, this.defs[this.name]).then(([response]) => {\n            this.setSaveStatus(\"success\");\n        });\n    }\n \n    setSaveStatus(value) {\n        this.saveStatus = value;\n        this.update();\n    }\n\n    setUnsaved(boolVal) {\n        this.unsaved = boolVal;\n    }\n\n    updateName(input) {\n        this.name = input;\n        this.update();\n    }\n\n    setPieceImg(color, pieceImgBase64Str) {\n        this.pieceImg[color] = pieceImgBase64Str;\n        this.update();\n    }\n\n    togleSpan(angle) {\n        this.spans[angle] = ! this.spans[angle];\n        const stepFunc = stepFuncDict[angle];\n        let rf = stepFunc(this.location);\n        while (! oob(rf) ) {\n            this.spanDisplays[rf] = this.spans[angle];\n            rf = stepFunc(rf);\n        }\n    }\n\n    setDisplaySpan(angle) {\n        const stepFunc = stepFuncDict[angle];\n        let rf = stepFunc(this.location);\n        while (! oob(rf) ) {\n            this.spanDisplays[rf] = true;\n            rf = stepFunc(rf);\n        }\n    }\n\n    setDisplaySpans() {\n        Object.entries(this.spans).forEach(([angle, isActive]) => {\n            if(isActive) \n                this.setDisplaySpan(angle)\n        })\n    }\n\n    togleSpanText() {\n        this.showSpanText = ! this.showSpanText;\n        this.update();\n    }\n\n    resetSpanDisplays() {\n        //turn off all displays\n        this.spanDisplays = Object.values(this.spanDisplays).map(isSpan => isSpan & false)\n    }\n\n    togleJump(rf, offset) {\n        this.jumpDisplays[rf] = ! this.jumpDisplays[rf]\n        let offsetStrs = this.offsets.map(o => JSON.stringify(o))\n        if (offsetStrs.includes(JSON.stringify(offset))) {\n            let i = offsetStrs.indexOf(JSON.stringify(offset))\n            this.offsets.splice(i, 1)\n        }\n        else \n            this.offsets.push(offset);\n\n    }\n\n    resetJumpDisplays() {\n        this.jumpDisplays = Object.values(this.jumpDisplays).map(isJump => isJump & false)\n    }\n\n    setJumpDisplays() {\n        let [x1, y1] = rfToXy(this.location)\n        let [dx, dy] = [-1, -1]\n        this.offsets.forEach(xy => {\n            dx = x1 + xy[0]\n            dy = y1 + xy[1]\n            this.jumpDisplays[xyToRf(dx, dy)] = true;\n        })\n    }\n\n    togleOffsetText() {\n        this.showOffsetText = ! this.showOffsetText;\n        this.update();\n    }\n\n    togleOptionTool(boolVal) {\n        this.optionTool = boolVal;\n        this.update();\n    }\n\n    setLoc(rf) {\n        this.location = rf;\n        this.resetSpanDisplays();\n        this.resetJumpDisplays();\n        this.setDisplaySpans();\n        this.setJumpDisplays();\n        this.update();\n    }\n\n    getNameCase() {\n\n        if (this.name === \"\")\n            return \"blank-name\";\n\n        let name = this.name.split(\"\")\n\n        if (! name.every(isIndentifier))\n            return \"invalid-character\";\n\n        let digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n        if (digits.includes(name[0]))\n            return \"leading-digit\";\n\n        if (this.standardsLc.includes(this.name.toLowerCase()))\n            return \"standard-name\"\n\n        return \"valid\";\n\n    }\n\n    setHelpText(helpTitle, helpText, hmChildName) {\n        this.helpTitle = helpTitle;\n        this.helpText = helpText;\n        this.hmChildName = hmChildName;\n    }\n\n    setConfirmRedirect(boolVal, path) {\n        this.confirmRedirectModal = boolVal;\n        this.redirectPath = path;\n        this.update();\n    }\n\n    clear() {\n        Object.keys(this.spans).forEach(rf => {this.spans[rf] = false});\n        Object.keys(this.spanDisplays).forEach(rf => {this.spanDisplays[rf] = false});\n        Object.keys(this.jumpDisplays).forEach(rf => {this.jumpDisplays[rf] = false});\n        this.name = \"\";\n        this.pieceImg = {\"white\":null, \"black\":null};\n        this.location = \"d4\"; \n        this.offsets = []; \n        this.saveStatus = \"none\";\n        this.update();\n    }\n\n    reset() {\n\n        if (this.loadedName === null)\n            this.clear();\n        else {\n            this.name = JSON.parse(JSON.stringify(this.loadedName));\n            this.spans = JSON.parse(JSON.stringify(this.loadedSpans));\n            this.offsets = JSON.parse(JSON.stringify(this.loadedOffsets));\n            this.imgNames = JSON.parse(JSON.stringify(this.loadedImgNames));\n            this.setLoc(this.location);\n         }           \n    }\n    \n    render() {\n        \n        return(\n            <div>\n                <Name name={this.name} \n                      updateName={this.updateName} \n                      setHelpText={this.setHelpText} \n                      togleHelpModal={this.togleHelpModal}\n                      setUnsaved={this.setUnsaved} />\n                <NameLabel name={this.name} />\n                <Range spans={this.spans} \n                       offsets={this.offsets} \n                       togleSpan={this.togleSpan}\n                       update={this.update}\n                       togleOffsetText={this.togleOffsetText} \n                       togleSpanText={this.togleSpanText} \n                       setHelpText={this.setHelpText}\n                       togleHelpModal={this.togleHelpModal} \n                       setUnsaved={this.setUnsaved} />\n                <Icon pieceImg={this.pieceImg} \n                      setImg={this.setPieceImg} \n                      updateParent={this.update} \n                      setHelpText={this.setHelpText} \n                      togleHelpModal={this.togleHelpModal}\n                      setUnsaved={this.setUnsaved} />\n                <Location activeLocation={this.location} \n                          setLoc={this.setLoc} \n                          setHelpText={this.setHelpText} \n                          togleHelpModal={this.togleHelpModal}\n                          setUnsaved={this.setUnsaved} />\n                {this.optionTool && (<OptionsTool togleOptionTool={this.togleOptionTool} />)}\n                <div className=\"options-title\">Options</div>\n                <SaveDef normal=\"/Images/save-a9a9a9.svg\"             \n                         highlighted=\"/Images/save-72e2ff.svg\"\n                         existing={Object.keys(this.defs)}\n                         save={this.save}\n                         name={this.name}\n                         clear={this.clear}\n                         status={this.saveStatus} \n                         setSaveStatus={this.setSaveStatus} \n                         togleOptionTool={this.togleOptionTool} \n                         setUnsaved={this.setUnsaved} />\n                <LoadDef  normal=\"/Images/load-piece-a9a9a9.svg\" \n                          highlighted=\"/Images/load-piece-72e2ff.svg\" \n                          togleLoadModal={this.togleLoadModal} \n                          togleOptionTool={this.togleOptionTool} />\n                <ResetDef normal=\"/Images/reset-range-a9a9a9.svg\" \n                          highlighted=\"/Images/reset-range-72e2ff.svg\" \n                          reset={this.reset} \n                          togleOptionTool={this.togleOptionTool}\n                          setUnsaved={this.setUnsaved} />\n                <BlankDef normal=\"/Images/erase-range-a9a9a9.svg\" \n                          highlighted=\"/Images/erase-range-72e2ff.svg\" \n                          clear={this.clear} \n                          togleOptionTool={this.togleOptionTool}\n                          setUnsaved={this.setUnsaved}/>\n                <ThemeCreatePiece normal=\"/Images/theme-create-piece-a9a9a9.svg\" \n                                  highlighted=\"/Images/theme-create-piece-72e2ff.svg\" \n                                  togleOptionTool={this.togleOptionTool} />                \n                <HelpComponent helpTitle=\"Options\"\n                               normal=\"/Images/question-mark-a9a9a9.svg\"\n                               highlighted=\"/Images/question-mark-72e2ff.svg\"\n                               style={{left:948, top:655, zIndex:\"inherit\", width:10, height:10}}\n                               color=\"#72e2ff\"\n                               hmChildName=\"none\"\n                               helpText={OptionsText}\n                               togleHelpModal={this.togleHelpModal} \n                               setHelpText={this.setHelpText} />       \n                <Board update={this.update} \n                       togleJump={this.togleJump} \n                       spanDisplays={this.spanDisplays} \n                       jumps={this.jumpDisplays} \n                       pieceLoc={this.location}  \n                       pieceImg={this.pieceImg[\"white\"]} \n                       showSpanText={this.showSpanText} \n                       showOffsetText={this.showOffsetText} \n                       setUnsaved={this.setUnsaved} />\n                {this.state.isLoadModal && (<CreatedPieceProfiles defs={this.defs} \n                                                                  load={this.load} \n                                                                  togleLoadModal={this.togleLoadModal} \n                                                                  setUnsaved={this.setUnsaved} />)}\n                {this.state.isHelpModal && (<HelpModal helpTitle={this.helpTitle} \n                                                       helpText={this.helpText} \n                                                       togleHelpModal={this.togleHelpModal}>\n                                                {this.getHelpModalChild()}\n                                            </HelpModal> )}\n                {this.navExpanded && (<NavBar currentPage=\"/CreatePiece\"\n                                              togleHelpModal={this.togleHelpModal}\n                                              setHelpText={this.setHelpText}\n                                              setConfirmRedirect={this.setConfirmRedirect}\n                                              unsavedProgress={this.unsaved}\n                                              navBarPosTop={0} \n                                              navBarPosLeft={263} \n                                              backgroundColor=\"#515151\" \n                                              iconColor=\"969696\" \n                                              iconColorHover=\"969696\" \n                                              backgroundColorSelected=\"#3d3d3d\"\n                                              border=\"none\" />)}\n                {this.confirmRedirectModal && (<ConfirmRedirect path={this.redirectPath} \n                                                message={this.redirectMessage} \n                                                setConfirmRedirect={this.setConfirmRedirect} />)}\n            </div>\n        )\n    }\n} \n\nexport let test = () => ReactDOM.render(<CreatePiece defs={defs} />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}