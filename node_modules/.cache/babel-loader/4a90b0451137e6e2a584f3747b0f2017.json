{"ast":null,"code":"import { getPieceType } from \"../../../pieceType/getPieceType\";\nimport { getColor } from \"../../../color/getColor\";\nimport { xyToRf } from \"../../../coordType/crdCnvrt\";\nexport function isPromoRows(start, dest, id) {\n  /**return true if start &&  dest are potential alignment of a pawn promotion &&  id is a pawn, else false\n      isPromo is ! concerned doing any filtering that is the job of the range\n  */\n  if (getPieceType(id) === 'P' && getColor(id) === 'W' && start[1] === 7 && dest[1] === 8) {\n    return true;\n  } else if (getPieceType(id) === 'P' && getColor(id) === 'B' && start[1] === 2 && dest[1] === 1) {\n    return true;\n  } else {\n    return false;\n  }\n} // module.exports = isPromoRows;\n\n/** for node.js\nif (require.main === module) {\n\n    import {sampleBoardDicts} from \"../../../testObjects/sampleBoardDicts\";\n    import {printBoard} from \"../../../printers/printBoard\";\n\n    var board = sampleBoardDicts[\"pawnPromo\"];\n    var id;\n    \n    for (var y1 = 8; y1 > 0; y1--) {\n        for (let x1 = 1; x1 < 9 ; x1++) {\n            id = board[xyToRf(x1, y1)]\n            for (var y2 = 8; y2 > 0; y2--) {\n                for (let x2 = 1; x2 < 9 ; x2++) {\n                    if (isPromoRows([x1, y1], [x2, y2], id)) {\n                        printBoard(board, null, [xyToRf(...[x2, y2])], null, [xyToRf(...[x1, y1])])\n                    }\n                }\n            }\n        }\n    }\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/specialMoves/pawnPromotion/isPromoRows.js"],"names":["getPieceType","getColor","xyToRf","isPromoRows","start","dest","id"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,iCAA3B;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAGA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,EAAlC,EAAsC;AACzC;;;AAGA,MAAIN,YAAY,CAACM,EAAD,CAAZ,KAAqB,GAArB,IAA6BL,QAAQ,CAACK,EAAD,CAAR,KAAiB,GAA9C,IAAsDF,KAAK,CAAC,CAAD,CAAL,KAAa,CAAnE,IAAyEC,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAzF,EAA4F;AACxF,WAAO,IAAP;AACH,GAFD,MAGK,IAAIL,YAAY,CAACM,EAAD,CAAZ,KAAqB,GAArB,IAA6BL,QAAQ,CAACK,EAAD,CAAR,KAAiB,GAA9C,IAAsDF,KAAK,CAAC,CAAD,CAAL,KAAa,CAAnE,IAAyEC,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAzF,EAA4F;AAC7F,WAAO,IAAP;AACH,GAFI,MAGA;AACD,WAAO,KAAP;AACH;AACJ,C,CAED;;AAEA","sourcesContent":["import {getPieceType} from \"../../../pieceType/getPieceType\";\nimport {getColor} from \"../../../color/getColor\";\nimport { xyToRf } from \"../../../coordType/crdCnvrt\";\n\n\nexport function isPromoRows(start, dest, id) {\n    /**return true if start &&  dest are potential alignment of a pawn promotion &&  id is a pawn, else false\n        isPromo is ! concerned doing any filtering that is the job of the range\n    */\n    if (getPieceType(id) === 'P' &&  getColor(id) === 'W' &&  start[1] === 7 &&  dest[1] === 8) {\n        return true\n    }\n    else if (getPieceType(id) === 'P' &&  getColor(id) === 'B' &&  start[1] === 2 &&  dest[1] === 1) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n// module.exports = isPromoRows;\n\n/** for node.js\nif (require.main === module) {\n\n    import {sampleBoardDicts} from \"../../../testObjects/sampleBoardDicts\";\n    import {printBoard} from \"../../../printers/printBoard\";\n\n    var board = sampleBoardDicts[\"pawnPromo\"];\n    var id;\n    \n    for (var y1 = 8; y1 > 0; y1--) {\n        for (let x1 = 1; x1 < 9 ; x1++) {\n            id = board[xyToRf(x1, y1)]\n            for (var y2 = 8; y2 > 0; y2--) {\n                for (let x2 = 1; x2 < 9 ; x2++) {\n                    if (isPromoRows([x1, y1], [x2, y2], id)) {\n                        printBoard(board, null, [xyToRf(...[x2, y2])], null, [xyToRf(...[x1, y1])])\n                    }\n                }\n            }\n        }\n    }\n\n}\n*/"]},"metadata":{},"sourceType":"module"}