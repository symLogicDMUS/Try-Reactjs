{"ast":null,"code":"import { OOB, EMPTY, FRIEND, ENEMY } from \"../sqrCase/sqrCases\";\nimport { outOfBounds } from \"../sqrCase/oob\";\nimport { xyToRf } from \"../coordType/crdCnvrt\";\nexport function getSqrCase(board, x, y, color) {\n  /*get the case of square at location x, y on the board. see sqrTypes.py**/\n  if (outOfBounds(x, y)) {\n    return OOB;\n  } else if (board[xyToRf(x, y)] === \"#\") {\n    return EMPTY;\n  } else if (board[xyToRf(x, y)][0] === color) {\n    return FRIEND;\n  }\n\n  return ENEMY;\n} // module.exports = getSqrCase;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\n\n    var board = sampleBoardDicts[\"ranges_test\"];\n    console.log(getSqrCase(board, 3, 9, \"W\") === OOB);\n    console.log(getSqrCase(board, 4, 4, \"W\") === EMPTY);\n    console.log(getSqrCase(board, 3, 3, \"W\") === FRIEND);\n    console.log(getSqrCase(board, 4, 5, \"W\") === ENEMY);\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/sqrCase/getSqrCase.js"],"names":["OOB","EMPTY","FRIEND","ENEMY","outOfBounds","xyToRf","getSqrCase","board","x","y","color"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,KAAb,EAAoBC,MAApB,EAA4BC,KAA5B,QAAwC,qBAAxC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAAQC,MAAR,QAAqB,uBAArB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,KAAjC,EAAwC;AAC3C;AACA,MAAIN,WAAW,CAACI,CAAD,EAAIC,CAAJ,CAAf,EAAuB;AACnB,WAAOT,GAAP;AACH,GAFD,MAEO,IAAIO,KAAK,CAACF,MAAM,CAACG,CAAD,EAAIC,CAAJ,CAAP,CAAL,KAAwB,GAA5B,EAAiC;AACpC,WAAOR,KAAP;AACH,GAFM,MAEA,IAAIM,KAAK,CAACF,MAAM,CAACG,CAAD,EAAIC,CAAJ,CAAP,CAAL,CAAoB,CAApB,MAA2BC,KAA/B,EAAsC;AACzC,WAAOR,MAAP;AACH;;AAED,SAAOC,KAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {OOB, EMPTY, FRIEND, ENEMY} from \"../sqrCase/sqrCases\";\nimport {outOfBounds} from \"../sqrCase/oob\";\nimport {xyToRf} from \"../coordType/crdCnvrt\";\n\nexport function getSqrCase(board, x, y, color) {\n    /*get the case of square at location x, y on the board. see sqrTypes.py**/\n    if (outOfBounds(x, y)) {\n        return OOB;\n    } else if (board[xyToRf(x, y)] === \"#\") {\n        return EMPTY;\n    } else if (board[xyToRf(x, y)][0] === color) {\n        return FRIEND;\n    }\n\n    return ENEMY;\n}\n\n// module.exports = getSqrCase;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\n\n    var board = sampleBoardDicts[\"ranges_test\"];\n    console.log(getSqrCase(board, 3, 9, \"W\") === OOB);\n    console.log(getSqrCase(board, 4, 4, \"W\") === EMPTY);\n    console.log(getSqrCase(board, 3, 3, \"W\") === FRIEND);\n    console.log(getSqrCase(board, 4, 5, \"W\") === ENEMY);\n\n}\n*/\n"]},"metadata":{},"sourceType":"module"}