{"ast":null,"code":"import { getFandR } from \"../helpers/getFandR\";\nexport function getStatuses(pieceIds, color) {\n  /*takes a list of piece assignIds, &&  returns list of 'f' for friend &&  'e' for enemy**/\n  let statuses = [];\n\n  for (var piece of pieceIds) {\n    if (piece[0] === color) {\n      statuses.push('f');\n    } else {\n      statuses.push('e');\n    }\n  }\n\n  return statuses;\n} // module.exports = getStatuses;\n\n/** for node.js\nif (require.main === module) {\n\n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\n    import {getCoordPath} from \"./getCoordPath\";\n    import {mapListXyToRf} from \"../coordType/mapListXyToRf\";\n    import {getPiecesOnPath} from \"./getPiecesOnPath\";\n    import {getPieceLocs} from \"../helpers/getPieceLocsOnPath\";\n    import {printBoard} from \"../printers/printBoard\";\n    var {\n        step_1sqr90d,\n        step_1sqr45d,\n        step_1sqr0d,\n        step_1sqr315d,\n        step_1sqr270d,\n        step_1sqr225d,\n        step_1sqr180d,\n        step_1sqr135d,\n        stepFuncList,\n        stepFuncDict\n    } = require(\"../helpers/stepFuncs\");\n\n\n    let board = sampleBoardDicts['check_example3']\n    coordPath, piecesIdsOnPath, statuses;\n    let friends = []\n    let enemies = []\n    let pieceLocs = []\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr0d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr0d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"0\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr45d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr45d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"45\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr90d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr90d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"90\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr135d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr135d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"135\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr180d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr180d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"180\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n    coordPath = getCoordPath(4, 4, step_1sqr225d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr225d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"225\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr270d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr270d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"270\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n    \n    coordPath = getCoordPath(4, 4, step_1sqr315d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr315d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"315\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    // console.log(getStatuses(['WP4', 'WR1', 'BQ3'], 'W').toString() === ['f', 'f', 'e'].toString())\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/pathsInfo/getStatuses.js"],"names":["getFandR","getStatuses","pieceIds","color","statuses","piece","push"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,qBAAvB;AAGA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACzC;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,KAAT,IAAkBH,QAAlB,EAA4B;AACxB,QAAIG,KAAK,CAAC,CAAD,CAAL,KAAaF,KAAjB,EAAwB;AACpBC,MAAAA,QAAQ,CAACE,IAAT,CAAc,GAAd;AACH,KAFD,MAGK;AACDF,MAAAA,QAAQ,CAACE,IAAT,CAAc,GAAd;AACH;AACJ;;AACD,SAAOF,QAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {getFandR} from \"../helpers/getFandR\";\n\n\nexport function getStatuses(pieceIds, color) {\n    /*takes a list of piece assignIds, &&  returns list of 'f' for friend &&  'e' for enemy**/\n    let statuses = []\n    for (var piece of pieceIds) {\n        if (piece[0] === color) {\n            statuses.push('f')\n        }\n        else {\n            statuses.push('e')\n        }\n    }\n    return statuses\n}\n\n// module.exports = getStatuses;\n\n/** for node.js\nif (require.main === module) {\n\n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\n    import {getCoordPath} from \"./getCoordPath\";\n    import {mapListXyToRf} from \"../coordType/mapListXyToRf\";\n    import {getPiecesOnPath} from \"./getPiecesOnPath\";\n    import {getPieceLocs} from \"../helpers/getPieceLocsOnPath\";\n    import {printBoard} from \"../printers/printBoard\";\n    var {\n        step_1sqr90d,\n        step_1sqr45d,\n        step_1sqr0d,\n        step_1sqr315d,\n        step_1sqr270d,\n        step_1sqr225d,\n        step_1sqr180d,\n        step_1sqr135d,\n        stepFuncList,\n        stepFuncDict\n    } = require(\"../helpers/stepFuncs\");\n\n\n    let board = sampleBoardDicts['check_example3']\n    coordPath, piecesIdsOnPath, statuses;\n    let friends = []\n    let enemies = []\n    let pieceLocs = []\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr0d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr0d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"0\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr45d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr45d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"45\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr90d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr90d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"90\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr135d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr135d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"135\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr180d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr180d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"180\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n    coordPath = getCoordPath(4, 4, step_1sqr225d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr225d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"225\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    coordPath = getCoordPath(4, 4, step_1sqr270d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr270d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"270\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n    \n    coordPath = getCoordPath(4, 4, step_1sqr315d);\n    coordPath = mapListXyToRf(coordPath);\n    pieceLocs = getPieceLocs(board, coordPath);\n    piecesIdsOnPath = getPiecesOnPath(board, 4, 4, step_1sqr315d);\n    statuses = getStatuses(piecesIdsOnPath, 'W');\n    [friends, enemies] = getFandR(pieceLocs, statuses);\n    printBoard(board, \"315\", enemies, friends, [\"d4\"])\n    console.log('\\n')\n\n\n    // console.log(getStatuses(['WP4', 'WR1', 'BQ3'], 'W').toString() === ['f', 'f', 'e'].toString())\n\n}\n*/"]},"metadata":{},"sourceType":"module"}