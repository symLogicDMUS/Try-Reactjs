{"ast":null,"code":"import { step_1sqr90d, step_1sqr270d } from \"../../helpers/stepFuncs\";\nexport function getPotential1SqrJump(sqr, color) {\n  /* get the potential 1 square move ahead, for the pawn at location sqr of given color**/\n  if (color === 'W') {\n    return step_1sqr90d(...sqr);\n  } else if (color === 'B') {\n    return step_1sqr270d(...sqr);\n  }\n} // module.exports = getPotential1SqrJump;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../../testObjects/sampleBoardDicts\";\n    import {xyToRf} from \"../../coordType/crdCnvrt\"\n    import {printBoard} from \"../../printers/printBoard\";\n\n    var board = sampleBoardDicts[\"pawn_range\"];\n    var potential1SqrJumps = getPotential1SqrJump([2, 4], 'W')\n    printBoard(board, null, [xyToRf(...potential1SqrJumps)], [\"b4\"])\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/pawn/getPotential1SqrJump.js"],"names":["step_1sqr90d","step_1sqr270d","getPotential1SqrJump","sqr","color"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,yBAA1C;AAGA,OAAO,SAASC,oBAAT,CAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAC7C;AACA,MAAIA,KAAK,KAAK,GAAd,EAAmB;AACf,WAAOJ,YAAY,CAAC,GAAGG,GAAJ,CAAnB;AACH,GAFD,MAGK,IAAIC,KAAK,KAAK,GAAd,EAAmB;AACpB,WAAOH,aAAa,CAAC,GAAGE,GAAJ,CAApB;AACH;AACJ,C,CAED;;AAEA","sourcesContent":["import {step_1sqr90d, step_1sqr270d} from \"../../helpers/stepFuncs\";\n\n\nexport function getPotential1SqrJump(sqr, color) {\n    /* get the potential 1 square move ahead, for the pawn at location sqr of given color**/\n    if (color === 'W') {\n        return step_1sqr90d(...sqr)\n    }\n    else if (color === 'B') {\n        return step_1sqr270d(...sqr)\n    }\n}\n\n// module.exports = getPotential1SqrJump;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../../testObjects/sampleBoardDicts\";\n    import {xyToRf} from \"../../coordType/crdCnvrt\"\n    import {printBoard} from \"../../printers/printBoard\";\n\n    var board = sampleBoardDicts[\"pawn_range\"];\n    var potential1SqrJumps = getPotential1SqrJump([2, 4], 'W')\n    printBoard(board, null, [xyToRf(...potential1SqrJumps)], [\"b4\"])\n\n}\n*/"]},"metadata":{},"sourceType":"module"}