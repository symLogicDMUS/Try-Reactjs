{"ast":null,"code":"import { getFen } from \"../game_logic/fenParser/getFen/top/getFen\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nasync function saveGameToDb(gameName, data) {\n  var user = firebase.auth().currentUser;\n  var uid = user.uid;\n  return await firebase.database().ref().child('games').child(uid).update({\n    [gameName]: {\n      'fen': data['fen'],\n      'type': data['game_type'],\n      'pt': data['player_type'],\n      'status': data['status'],\n      'promos': data['promos'],\n      'json': data['json_records'],\n      'defs': data['piece_defs'],\n      'ids': data['id_dict']\n    }\n  });\n}\n\nexport function saveGame(gameName, data) {\n  return Promise.all([saveGameToDb(gameName, data)]);\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/API/saveGame.js"],"names":["getFen","firebase","saveGameToDb","gameName","data","user","auth","currentUser","uid","database","ref","child","update","saveGame","Promise","all"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,2CAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,mBAAP;AACA,OAAO,eAAP;;AAIA,eAAeC,YAAf,CAA4BC,QAA5B,EAAsCC,IAAtC,EAA4C;AACxC,MAAIC,IAAI,GAAGJ,QAAQ,CAACK,IAAT,GAAgBC,WAA3B;AACA,MAAIC,GAAG,GAAGH,IAAI,CAACG,GAAf;AACA,SAAO,MAAMP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,GAA0BC,KAA1B,CAAgC,OAAhC,EAAyCA,KAAzC,CAA+CH,GAA/C,EAAoDI,MAApD,CAA2D;AAAE,KAACT,QAAD,GAAY;AAClF,aAAOC,IAAI,CAAC,KAAD,CADuE;AAElF,cAAQA,IAAI,CAAC,WAAD,CAFsE;AAGlF,YAAMA,IAAI,CAAC,aAAD,CAHwE;AAIlF,gBAAUA,IAAI,CAAC,QAAD,CAJoE;AAKlF,gBAAUA,IAAI,CAAC,QAAD,CALoE;AAMlF,cAAQA,IAAI,CAAC,cAAD,CANsE;AAOlF,cAAQA,IAAI,CAAC,YAAD,CAPsE;AAQlF,aAAOA,IAAI,CAAC,SAAD;AARuE;AAAd,GAA3D,CAAb;AAUH;;AAED,OAAO,SAASS,QAAT,CAAkBV,QAAlB,EAA4BC,IAA5B,EAAkC;AACrC,SAAOU,OAAO,CAACC,GAAR,CAAY,CAACb,YAAY,CAACC,QAAD,EAAWC,IAAX,CAAb,CAAZ,CAAP;AACH","sourcesContent":["import {getFen} from \"../game_logic/fenParser/getFen/top/getFen\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\n\n\nasync function saveGameToDb(gameName, data) {\n    var user = firebase.auth().currentUser;\n    var uid = user.uid;\n    return await firebase.database().ref().child('games').child(uid).update({ [gameName]: {\n        'fen': data['fen'],\n        'type': data['game_type'],\n        'pt': data['player_type'],\n        'status': data['status'],\n        'promos': data['promos'],\n        'json': data['json_records'],\n        'defs': data['piece_defs'],\n        'ids': data['id_dict']\n    }});\n}\n\nexport function saveGame(gameName, data) {\n    return Promise.all([saveGameToDb(gameName, data)]);\n}"]},"metadata":{},"sourceType":"module"}