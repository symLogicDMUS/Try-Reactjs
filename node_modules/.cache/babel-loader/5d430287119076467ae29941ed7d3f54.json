{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Icon/Upload/UploadButton.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UploadButton.css\";\nexport class UploadButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bValue: true\n    };\n    this.imgStr = null;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const files = event.target.files;\n    const currentFile = files[0];\n    const myFileItemReader = new FileReader();\n    myFileItemReader.addEventListener(\"load\", () => {\n      this.imgStr = myFileItemReader.result;\n      this.setState({\n        bValue: !this.state.bValue\n      });\n    }, false);\n    myFileItemReader.readAsDataURL(currentFile);\n  }\n\n  render() {\n    if (this.imgStr) {\n      const imgStr = this.imgStr;\n      this.imgStr = null;\n      this.props.setUnsaved(true);\n      this.props.setPieceImg(this.props.color, imgStr);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"choose-img\",\n      className: `${this.props.color}-upload`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Upload...\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"choose-img\",\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Icon/Upload/UploadButton.jsx"],"names":["React","Link","UploadButton","Component","constructor","props","state","bValue","imgStr","handleChange","bind","event","files","target","currentFile","myFileItemReader","FileReader","addEventListener","result","setState","readAsDataURL","render","setUnsaved","setPieceImg","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,oBAAP;AAGA,OAAO,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAEhB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,UAAME,WAAW,GAAGF,KAAK,CAAC,CAAD,CAAzB;AACA,UAAMG,gBAAgB,GAAG,IAAIC,UAAJ,EAAzB;AAEAD,IAAAA,gBAAgB,CAACE,gBAAjB,CACI,MADJ,EAEI,MAAM;AACF,WAAKT,MAAL,GAAcO,gBAAgB,CAACG,MAA/B;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,MAAM,EAAE,CAAE,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACH,KALL,EAMI,KANJ;AASAQ,IAAAA,gBAAgB,CAACK,aAAjB,CAA+BN,WAA/B;AAEH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKb,MAAT,EAAiB;AACb,YAAMA,MAAM,GAAG,KAAKA,MAApB;AACA,WAAKA,MAAL,GAAc,IAAd;AACA,WAAKH,KAAL,CAAWiB,UAAX,CAAsB,IAAtB;AACA,WAAKjB,KAAL,CAAWkB,WAAX,CAAuB,KAAKlB,KAAL,CAAWmB,KAAlC,EAAyChB,MAAzC;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAA4B,MAAA,SAAS,EAAG,GAAE,KAAKH,KAAL,CAAWmB,KAAM,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,QAAQ,EAAE,KAAKf,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AA5C6C","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./UploadButton.css\";\n\n\nexport class UploadButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {bValue: true}\n        this.imgStr = null;\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n\n        const files = event.target.files;\n        const currentFile = files[0];\n        const myFileItemReader = new FileReader();\n\n        myFileItemReader.addEventListener(\n            \"load\", \n            () => {\n                this.imgStr = myFileItemReader.result\n                this.setState({bValue: ! this.state.bValue}) \n            }, \n            false\n        );\n\n        myFileItemReader.readAsDataURL(currentFile);\n        \n    }\n\n    render() {\n\n        if (this.imgStr) {\n            const imgStr = this.imgStr;\n            this.imgStr = null;\n            this.props.setUnsaved(true);\n            this.props.setPieceImg(this.props.color, imgStr);\n        }\n\n        return(\n            <div>\n                <label htmlFor=\"choose-img\" className={`${this.props.color}-upload`}>\n                    Upload...\n                </label>\n                <input id=\"choose-img\" type=\"file\" onChange={this.handleChange} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}