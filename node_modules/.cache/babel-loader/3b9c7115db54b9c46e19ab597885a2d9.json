{"ast":null,"code":"export function getDigits(fen) {\n  /*getFen TASK 5, replace consecutive '#' (empty squares) with the digit for how many**/\n  let consects = [/########/g, /#######/g, /######/g, /#####/g, /####/g, /###/g, /##/g, /#/g];\n  let consectLens = [8, 7, 6, 5, 4, 3, 2, 1];\n\n  for (let i = 0; i < consects.length; i++) {\n    fen = fen.replace(consects[i], consectLens[i].toString());\n  }\n\n  return fen;\n} // module.exports = getDigits;\n\n/** for node.js\nif (require.main === module) {\n    \n    // test 1\n    console.log('test 1')\n    console.log(getDigits('rnbqkbnr/pppppppp/########/########/########/########/PPPPPPPP/RNBQKBNR'))\n    console.log('\\n')\n\n    // test 2:\n    console.log('test 2')\n    console.log(getDigits('r###k##r/#P######/#####P##/p###n##p/###b#BpP/NBQb#q##/########/R###K##R'))\n    console.log('\\n')\n\n    // test 3:\n    console.log('test 3')\n    console.log(getDigits('###k###b/q##r##P#/###P#P##/########/q#QK#QBr/##NP####/###R#R##/b##q##q#'))\n    console.log('\\n')\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/fenParser/getFen/getDigits.js"],"names":["getDigits","fen","consects","consectLens","i","length","replace","toString"],"mappings":"AAEA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AAC3B;AACA,MAAIC,QAAQ,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,EAAqC,QAArC,EAA+C,OAA/C,EAAwD,MAAxD,EAAgE,KAAhE,EAAuE,IAAvE,CAAf;AACA,MAAIC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCH,IAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAYJ,QAAQ,CAACE,CAAD,CAApB,EAAyBD,WAAW,CAACC,CAAD,CAAX,CAAeG,QAAf,EAAzB,CAAN;AACH;;AACD,SAAON,GAAP;AACH,C,CAED;;AAEA","sourcesContent":["\n\nexport function getDigits(fen) {\n    /*getFen TASK 5, replace consecutive '#' (empty squares) with the digit for how many**/\n    let consects = [/########/g, /#######/g, /######/g, /#####/g, /####/g, /###/g, /##/g, /#/g]\n    let consectLens = [8, 7, 6, 5, 4, 3, 2, 1]\n    for (let i = 0; i < consects.length; i++) {\n        fen = fen.replace(consects[i], consectLens[i].toString());\n    }\n    return fen;\n}\n\n// module.exports = getDigits;\n\n/** for node.js\nif (require.main === module) {\n    \n    // test 1\n    console.log('test 1')\n    console.log(getDigits('rnbqkbnr/pppppppp/########/########/########/########/PPPPPPPP/RNBQKBNR'))\n    console.log('\\n')\n\n    // test 2:\n    console.log('test 2')\n    console.log(getDigits('r###k##r/#P######/#####P##/p###n##p/###b#BpP/NBQb#q##/########/R###K##R'))\n    console.log('\\n')\n\n    // test 3:\n    console.log('test 3')\n    console.log(getDigits('###k###b/q##r##P#/###P#P##/########/q#QK#QBr/##NP####/###R#R##/b##q##q#'))\n    console.log('\\n')\n\n}\n*/\n"]},"metadata":{},"sourceType":"module"}