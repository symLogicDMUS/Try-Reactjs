{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PlayAs/PlayAs.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PlayAsOption } from \"./PlayAsOption\";\nimport { PlayAsButton } from \"./PlayAsButton\";\nimport { NavBar } from \"../../NavBar/NavBarRegular3\";\nimport { HelpComponent } from \"../../Help/HelpComponent\";\nimport { HelpText } from \"./HelpText\";\nimport { HelpModal } from \"../../Help/HelpModal\";\nimport \"./PlayAs.css\";\nexport class PlayAs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option: null,\n      bValue: true,\n      isHelpModal: false\n    };\n    this.navExpanded = true;\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = null;\n    this.update = this.update.bind(this);\n    this.accept = this.accept.bind(this);\n    this.togleNav = this.togleNav.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className = \"play-as-body\";\n  }\n\n  update(option) {\n    if (this.state.option === option) this.setState({\n      option: null\n    });else this.setState({\n      option: option\n    });\n  }\n\n  accept() {\n    this.props.setPlayer(this.state.option);\n    this.props.loadNew();\n    this.props.nextStep();\n  }\n\n  togleNav(boolVal) {\n    this.navExpanded = boolVal;\n    this.setState({\n      bValue: !this.state.bValue\n    });\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  render() {\n    if (this.state.accepted) {}\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/NewGame\",\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      navBarPos: \"relative\",\n      navBarPosTop: 0,\n      navBarPosLeft: \"22.2vw\",\n      expandColapseColor: \"000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"play-as-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/Images/play-as.svg\",\n      alt: \"title for picking to play as white, black, or test\",\n      style: {\n        position: \"absolute\",\n        height: 75,\n        width: 251\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"play-as-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlayAsOption, {\n      update: this.update,\n      optionName: \"test\",\n      top: 0,\n      selected: this.state.option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PlayAsOption, {\n      update: this.update,\n      optionName: \"W\",\n      top: 78,\n      selected: this.state.option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PlayAsOption, {\n      update: this.update,\n      optionName: \"B\",\n      top: 156,\n      selected: this.state.option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(PlayAsButton, {\n      selected: this.state.option,\n      accept: this.accept,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(HelpComponent, {\n      helpTitle: \"Choices for Playing the Game\",\n      helpText: HelpText,\n      hmChildName: \"none\",\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      highlighted: \"/Images/question-mark-000000.svg\",\n      normal: \"/Images/question-mark-000000.svg\",\n      style: {\n        width: 16,\n        height: 16,\n        left: 910,\n        top: 135\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      hmChildName: this.hmChildName,\n      extraModal: null,\n      togleHelpModal: this.togleHelpModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }));\n  }\n\n}\nexport let test = () => ReactDOM.render( /*#__PURE__*/React.createElement(PlayAs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 41\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PlayAs/PlayAs.jsx"],"names":["React","ReactDOM","PlayAsOption","PlayAsButton","NavBar","HelpComponent","HelpText","HelpModal","PlayAs","Component","constructor","props","state","option","bValue","isHelpModal","navExpanded","helpTitle","helpText","hmChildName","update","bind","accept","togleNav","setHelpText","togleHelpModal","componentDidMount","document","body","className","setState","setPlayer","loadNew","nextStep","boolVal","render","accepted","position","height","width","left","top","test","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {PlayAsOption} from \"./PlayAsOption\";\nimport { PlayAsButton } from \"./PlayAsButton\";\nimport {NavBar} from \"../../NavBar/NavBarRegular3\";\nimport {HelpComponent} from \"../../Help/HelpComponent\";\nimport {HelpText} from \"./HelpText\";\nimport {HelpModal} from \"../../Help/HelpModal\";\nimport \"./PlayAs.css\";\n\nexport class PlayAs extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {option: null, bValue: true, isHelpModal:false};\n        this.navExpanded = true;\n        this.helpTitle = null;\n        this.helpText = null;\n        this.hmChildName = null;\n        this.update = this.update.bind(this);\n        this.accept = this.accept.bind(this);\n        this.togleNav = this.togleNav.bind(this);\n        this.setHelpText = this.setHelpText.bind(this);\n        this.togleHelpModal = this.togleHelpModal.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.className=\"play-as-body\";\n    }\n\n    update(option) {\n        if (this.state.option === option)\n            this.setState({option: null})\n        else\n            this.setState({option: option})\n    }\n\n    accept() {\n        this.props.setPlayer(this.state.option);\n        this.props.loadNew()\n        this.props.nextStep();\n    }\n\n    togleNav(boolVal) {\n        this.navExpanded = boolVal;\n        this.setState({bValue: ! this.state.bValue});\n    }\n\n    togleHelpModal(boolVal) {\n        this.setState({isHelpModal: boolVal})\n    }\n\n    setHelpText(helpTitle, helpText, hmChildName) {\n        this.helpTitle = helpTitle;\n        this.helpText = helpText;\n        this.hmChildName = hmChildName;\n    }\n\n    render() {\n\n        if (this.state.accepted) {\n\n        }\n\n        return (\n            <>\n                <NavBar currentPage=\"/NewGame\" \n                        setHelpText={this.setHelpText} \n                        togleHelpModal={this.togleHelpModal} \n                        navBarPos=\"relative\" navBarPosTop={0} \n                        navBarPosLeft=\"22.2vw\" \n                        expandColapseColor=\"000000\" />\n                <div className=\"play-as-title\">\n                    <img src=\"/Images/play-as.svg\" alt=\"title for picking to play as white, black, or test\" style={{position:\"absolute\", height:75, width:251}} />\n                </div>\n                <div className=\"play-as-options\">\n                    <PlayAsOption update={this.update} optionName=\"test\"  top={0}   selected={this.state.option}/>\n                    <PlayAsOption update={this.update} optionName=\"W\" top={78}  selected={this.state.option}/>\n                    <PlayAsOption update={this.update} optionName=\"B\" top={156} selected={this.state.option}/>\n                </div>\n                <PlayAsButton selected={this.state.option} accept={this.accept} />\n                <HelpComponent helpTitle=\"Choices for Playing the Game\"\n                               helpText={HelpText}\n                               hmChildName=\"none\"\n                               setHelpText={this.setHelpText}\n                               togleHelpModal={this.togleHelpModal}\n                               highlighted=\"/Images/question-mark-000000.svg\"\n                               normal=\"/Images/question-mark-000000.svg\" \n                               style={{width:16, height:16, left:910, top:135}} \n                />\n                {this.state.isHelpModal && (<HelpModal helpTitle={this.helpTitle}\n                                                       helpText={this.helpText}\n                                                       hmChildName={this.hmChildName}\n                                                       extraModal={null}\n                                                       togleHelpModal={this.togleHelpModal}/>)}                                             \n            </>\n        )\n    }\n}\n\n\n\n\n\n\nexport let test = () => ReactDOM.render(<PlayAs />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}