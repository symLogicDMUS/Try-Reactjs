{"ast":null,"code":"import { printBoard } from \"../../printers/printBoard\";\nimport { getInitJumps } from \"../../ranges/jumps/getInitJumps\";\nimport { filterInitJumps } from \"../../ranges/jumps/filterInitJumps\";\nimport { sampleBoardDicts } from \"../../testObjects/sampleBoardDicts\";\nexport function getJumps(offsets, board, sqr, color) {\n  /*jumps are square that can be reached through a piece jumping**/\n  var jumps = getInitJumps(offsets, sqr);\n  jumps = filterInitJumps(jumps, board, color);\n  return jumps;\n} // module.exports = getJumps;\n\n/** for node.js\nif (require.main === module) {\n\n    import {mapListXyToRf} from \"../../coordType/mapListXyToRf\";\n\n    var offsets = [\n        [-1, -2],\n        [-1, 2],\n        [1, -2],\n        [1, 2],\n        [-2, -1],\n        [-2, 1],\n        [2, -1],\n        [2, 1],\n    ];\n    var board = sampleBoardDicts['ranges_test'];\n    var jumps;\n\n\n    jumps = getJumps(offsets, board, [2, 3], 'W')\n    printBoard(board, \"\\nwhite\", mapListXyToRf(jumps), [\"b3\"])\n\n    jumps = getJumps(offsets, board, [7, 3], 'W')\n    printBoard(board, \"\\nwhite\", mapListXyToRf(jumps), [\"g3\"])\n\n    jumps = getJumps(offsets, board, [2, 5], 'B')\n    printBoard(board, \"\\nblack\", mapListXyToRf(jumps), [\"b5\"])\n\n    jumps = getJumps(offsets, board, [7, 5], 'B')\n    printBoard(board, \"\\nblack\", mapListXyToRf(jumps), [\"g5\"])\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/jumps/getJumps.js"],"names":["printBoard","getInitJumps","filterInitJumps","sampleBoardDicts","getJumps","offsets","board","sqr","color","jumps"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,2BAAzB;AACA,SAAQC,YAAR,QAA2B,iCAA3B;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,SAAQC,gBAAR,QAA+B,oCAA/B;AAGA,OAAO,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AACjD;AACA,MAAIC,KAAK,GAAGR,YAAY,CAACI,OAAD,EAAUE,GAAV,CAAxB;AACAE,EAAAA,KAAK,GAAGP,eAAe,CAACO,KAAD,EAAQH,KAAR,EAAeE,KAAf,CAAvB;AACA,SAAOC,KAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {printBoard} from \"../../printers/printBoard\";\nimport {getInitJumps} from \"../../ranges/jumps/getInitJumps\";\nimport {filterInitJumps} from \"../../ranges/jumps/filterInitJumps\";\nimport {sampleBoardDicts} from \"../../testObjects/sampleBoardDicts\";\n\n\nexport function getJumps(offsets, board, sqr, color) {\n    /*jumps are square that can be reached through a piece jumping**/\n    var jumps = getInitJumps(offsets, sqr)\n    jumps = filterInitJumps(jumps, board, color)\n    return jumps\n}\n\n// module.exports = getJumps;\n\n/** for node.js\nif (require.main === module) {\n\n    import {mapListXyToRf} from \"../../coordType/mapListXyToRf\";\n\n    var offsets = [\n        [-1, -2],\n        [-1, 2],\n        [1, -2],\n        [1, 2],\n        [-2, -1],\n        [-2, 1],\n        [2, -1],\n        [2, 1],\n    ];\n    var board = sampleBoardDicts['ranges_test'];\n    var jumps;\n\n\n    jumps = getJumps(offsets, board, [2, 3], 'W')\n    printBoard(board, \"\\nwhite\", mapListXyToRf(jumps), [\"b3\"])\n\n    jumps = getJumps(offsets, board, [7, 3], 'W')\n    printBoard(board, \"\\nwhite\", mapListXyToRf(jumps), [\"g3\"])\n\n    jumps = getJumps(offsets, board, [2, 5], 'B')\n    printBoard(board, \"\\nblack\", mapListXyToRf(jumps), [\"b5\"])\n\n    jumps = getJumps(offsets, board, [7, 5], 'B')\n    printBoard(board, \"\\nblack\", mapListXyToRf(jumps), [\"g5\"])\n\n}\n*/"]},"metadata":{},"sourceType":"module"}