{"ast":null,"code":"import { idsForRent } from \"./idsForRent\";\nimport { shuffle } from \"../../Components/helpers/shuffleArray\";\nexport function rentIds(idDict, customNames, ignore) {\n  /**for custom pieces not for.includes(subbing) a standard (these are pawn promotion options), pick id from the 20 alphabet\n     characters not used by a standard piece.\n  */\n  var id;\n  var ids = JSON.parse(JSON.stringify(idsForRent));\n  ids = shuffle(ids);\n\n  for (var name of customNames) {\n    if (ignore && ignore.includes(name)) {\n      continue;\n    }\n\n    id = ids.shift();\n    idDict[id] = name;\n  }\n\n  return idDict;\n} // module.exports = rentIds;\n\n/** for node.js\nif (require.main === module) {\n    console.log(rentIds({'b': 'Duke', 'q': 'Jester'}, ['Joker', 'Morty']))\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/apiHelpers/idAssign/rentIds.js"],"names":["idsForRent","shuffle","rentIds","idDict","customNames","ignore","id","ids","JSON","parse","stringify","name","includes","shift"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,cAAzB;AACA,SAAQC,OAAR,QAAsB,uCAAtB;AAGA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,WAAzB,EAAsCC,MAAtC,EAA8C;AACjD;;;AAGA,MAAIC,EAAJ;AACA,MAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,UAAf,CAAX,CAAV;AACAO,EAAAA,GAAG,GAAGN,OAAO,CAACM,GAAD,CAAb;;AACA,OAAK,IAAII,IAAT,IAAiBP,WAAjB,EAA8B;AAC1B,QAAIC,MAAM,IAAIA,MAAM,CAACO,QAAP,CAAgBD,IAAhB,CAAd,EAAqC;AACjC;AACH;;AACDL,IAAAA,EAAE,GAAGC,GAAG,CAACM,KAAJ,EAAL;AACAV,IAAAA,MAAM,CAACG,EAAD,CAAN,GAAaK,IAAb;AACH;;AACD,SAAOR,MAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {idsForRent} from \"./idsForRent\";\nimport {shuffle} from \"../../Components/helpers/shuffleArray\";\n\n\nexport function rentIds(idDict, customNames, ignore) {\n    /**for custom pieces not for.includes(subbing) a standard (these are pawn promotion options), pick id from the 20 alphabet\n       characters not used by a standard piece.\n    */\n    var id;\n    var ids = JSON.parse(JSON.stringify(idsForRent))\n    ids = shuffle(ids)\n    for (var name of customNames) {\n        if (ignore && ignore.includes(name)) {\n            continue\n        }\n        id = ids.shift();\n        idDict[id] = name;\n    }\n    return idDict;\n}\n\n// module.exports = rentIds;\n\n/** for node.js\nif (require.main === module) {\n    console.log(rentIds({'b': 'Duke', 'q': 'Jester'}, ['Joker', 'Morty']))\n\n}\n*/"]},"metadata":{},"sourceType":"module"}