{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/Board.jsx\";\nimport React from \"react\";\nimport Backend from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { Square } from \"./Square\";\nimport { Piece } from \"./Piece\";\nimport { rankfiles } from \"../../helpers/rankfiles\";\nimport { sqrClasses } from \"../../helpers/sqrClasses\";\nimport { sqrColors } from \"../gameRootHelpers/sqrColors\";\nimport { getPosPx } from \"../gameRootHelpers/getPosPx\";\nimport { getPieceImg } from \"../../MyPieces/getPieceImg\";\nimport \"../css/interactiveSqr.css\";\nimport \"../css/displaySqr.css\";\nimport \"../css/piece.css\";\nimport \"../css/Board.css\";\nexport class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displaySqrs = [];\n\n    for (var rf of rankfiles) {\n      this.displaySqrs.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: sqrColors[rf],\n        style: getPosPx(rf),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 35\n        }\n      }));\n    }\n  }\n\n  getInteractiveBoard() {\n    let squares = [];\n    let pieceImgBase64Str = null;\n\n    for (var rf of rankfiles) {\n      if (this.props.gameroot.board[rf] === '#') {\n        squares.push( /*#__PURE__*/React.createElement(Square, {\n          rf: rf,\n          sqr_color: sqrClasses[rf],\n          pos: rf,\n          gameroot: this.props.gameroot,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }\n        }, null));\n      } else {\n        pieceImgBase64Str = getPieceImg(this.props.gameroot.board[rf], this.props.gameroot.idDict, this.props.gameroot.pieceDefs);\n        squares.push( /*#__PURE__*/React.createElement(Square, {\n          sqr_color: sqrClasses[rf],\n          pos: rf,\n          gameroot: this.props.gameroot,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Piece, {\n          pos: rf,\n          id_: this.props.gameroot.board[rf],\n          pieceImgBase64Str: pieceImgBase64Str,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    return squares;\n  }\n\n  getDisplayBoard() {\n    return this.displaySqrs;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interactive-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, this.getInteractiveBoard())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.getDisplayBoard()));\n  }\n\n}\nexport default Board;","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/Board.jsx"],"names":["React","Backend","DndProvider","Square","Piece","rankfiles","sqrClasses","sqrColors","getPosPx","getPieceImg","Board","Component","constructor","props","displaySqrs","rf","push","getInteractiveBoard","squares","pieceImgBase64Str","gameroot","board","idDict","pieceDefs","getDisplayBoard","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Backend from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport {Square} from \"./Square\";\nimport {Piece} from \"./Piece\";\nimport {rankfiles} from \"../../helpers/rankfiles\"\nimport {sqrClasses} from \"../../helpers/sqrClasses\";\nimport {sqrColors} from \"../gameRootHelpers/sqrColors\";\nimport {getPosPx} from \"../gameRootHelpers/getPosPx\";\nimport { getPieceImg } from \"../../MyPieces/getPieceImg\";\nimport \"../css/interactiveSqr.css\";\nimport \"../css/displaySqr.css\";\nimport \"../css/piece.css\";\nimport \"../css/Board.css\";\n\nexport class Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.displaySqrs = [];\n        for (var rf of rankfiles) {\n            this.displaySqrs.push(<div className={sqrColors[rf]} style={getPosPx(rf)}></div>);\n        }\n    }\n\n    getInteractiveBoard() {\n\n        let squares = [];\n        let pieceImgBase64Str = null;\n        for (var rf of rankfiles) {\n\n            if (this.props.gameroot.board[rf] === '#') {\n                squares.push(\n                    <Square rf={rf} sqr_color={sqrClasses[rf]} pos={rf} gameroot={this.props.gameroot} >\n                        {null}\n                    </Square>\n                );    \n            }\n\n            else {\n                pieceImgBase64Str = getPieceImg(this.props.gameroot.board[rf], this.props.gameroot.idDict, this.props.gameroot.pieceDefs);\n                squares.push(\n                    <Square sqr_color={sqrClasses[rf]} pos={rf} gameroot={this.props.gameroot} >\n                        <Piece pos={rf} id_={this.props.gameroot.board[rf]} pieceImgBase64Str={pieceImgBase64Str} />\n                    </Square>\n                );\n            }\n        }\n\n        return squares;\n    }\n\n    getDisplayBoard() {\n        return this.displaySqrs;\n    }\n\n    render() {\n        return (\n            <>\n                <DndProvider backend={Backend}>\n                    <div className=\"interactive-board\">\n                        {this.getInteractiveBoard()}\n                    </div>\n                </DndProvider>\n                <div className=\"display-board\">\n                    {this.getDisplayBoard()}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}