{"ast":null,"code":"import { mapListXyToRf } from \"../../coordType/mapListXyToRf\";\nimport { step_1sqr45d, step_1sqr135d, step_1sqr315d, step_1sqr225d } from \"../../helpers/stepFuncs\";\nexport function getPotentialCaptures(sqr, color) {\n  /*get the squares that the pawn of given color at sqr could potentially move to capture a piece**/\n  var potentialPawnCaptures = [];\n\n  if (color === 'W') {\n    potentialPawnCaptures.push(step_1sqr45d(...sqr));\n    potentialPawnCaptures.push(step_1sqr135d(...sqr));\n  } else if (color === 'B') {\n    potentialPawnCaptures.push(step_1sqr225d(...sqr));\n    potentialPawnCaptures.push(step_1sqr315d(...sqr));\n  } else {\n    console.log('error: invalid color!');\n  }\n\n  return potentialPawnCaptures;\n} // module.exports = getPotentialCaptures;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../../testObjects/sampleBoardDicts\";\n    import {printBoard} from \"../../printers/printBoard\";\n\n    let board = sampleBoardDicts[\"pawn_range\"]\n    \n     // test 1, b4 pawn:\n    console.log('test 1: b4 pawn')\n    potentialPawnCaptures = getPotentialCaptures([2, 4], 'W')\n    //console.log(potentialPawnCaptures)\n    printBoard(board, null, mapListXyToRf(potentialPawnCaptures), null, [\"b4\"])\n    console.log('\\n')\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/pawn/getPotentialCaptures.js"],"names":["mapListXyToRf","step_1sqr45d","step_1sqr135d","step_1sqr315d","step_1sqr225d","getPotentialCaptures","sqr","color","potentialPawnCaptures","push","console","log"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,+BAA5B;AACA,SAAQC,YAAR,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,aAApD,QAAwE,yBAAxE;AAGA,OAAO,SAASC,oBAAT,CAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAC7C;AACA,MAAIC,qBAAqB,GAAG,EAA5B;;AACA,MAAID,KAAK,KAAK,GAAd,EAAmB;AACfC,IAAAA,qBAAqB,CAACC,IAAtB,CAA2BR,YAAY,CAAC,GAAGK,GAAJ,CAAvC;AACAE,IAAAA,qBAAqB,CAACC,IAAtB,CAA2BP,aAAa,CAAC,GAAGI,GAAJ,CAAxC;AACH,GAHD,MAIK,IAAIC,KAAK,KAAK,GAAd,EAAmB;AACpBC,IAAAA,qBAAqB,CAACC,IAAtB,CAA2BL,aAAa,CAAC,GAAGE,GAAJ,CAAxC;AACAE,IAAAA,qBAAqB,CAACC,IAAtB,CAA2BN,aAAa,CAAC,GAAGG,GAAJ,CAAxC;AACH,GAHI,MAIA;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AACD,SAAOH,qBAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {mapListXyToRf} from \"../../coordType/mapListXyToRf\";\nimport {step_1sqr45d, step_1sqr135d, step_1sqr315d, step_1sqr225d} from \"../../helpers/stepFuncs\";\n\n\nexport function getPotentialCaptures(sqr, color) {\n    /*get the squares that the pawn of given color at sqr could potentially move to capture a piece**/\n    var potentialPawnCaptures = []\n    if (color === 'W') {\n        potentialPawnCaptures.push(step_1sqr45d(...sqr))\n        potentialPawnCaptures.push(step_1sqr135d(...sqr))\n    }\n    else if (color === 'B') {\n        potentialPawnCaptures.push(step_1sqr225d(...sqr))\n        potentialPawnCaptures.push(step_1sqr315d(...sqr))\n    }\n    else {\n        console.log('error: invalid color!')\n    }\n    return potentialPawnCaptures\n}\n\n// module.exports = getPotentialCaptures;\n\n/** for node.js\nif (require.main === module) {\n    \n    import {sampleBoardDicts} from \"../../testObjects/sampleBoardDicts\";\n    import {printBoard} from \"../../printers/printBoard\";\n\n    let board = sampleBoardDicts[\"pawn_range\"]\n    \n     // test 1, b4 pawn:\n    console.log('test 1: b4 pawn')\n    potentialPawnCaptures = getPotentialCaptures([2, 4], 'W')\n    //console.log(potentialPawnCaptures)\n    printBoard(board, null, mapListXyToRf(potentialPawnCaptures), null, [\"b4\"])\n    console.log('\\n')\n\n}\n*/"]},"metadata":{},"sourceType":"module"}