{"ast":null,"code":"import { mapListXyToRf } from \"./mapListXyToRf\";\nexport function mapDictListXyToRf(dict) {\n  /**rfDict not rf yet, but will make it be. */\n  var rfDict = JSON.parse(JSON.stringify(dict));\n\n  for (var k of Object.keys(rfDict)) {\n    rfDict[k] = mapListXyToRf(rfDict[k]);\n  }\n\n  return rfDict;\n} // module.exports = mapDictListXyToRf;\n\n/** for node.js\nif (require.main === module) {\n    let ranges = {\n        WB1: [],\n        WR1: [],\n        WB2: [],\n        WR2: [],\n        WK1: [],\n        WQ1: [],\n        WP1: [ [ 1, 3 ], [ 1, 4 ] ],\n        WP2: [ [ 2, 3 ], [ 2, 4 ] ],\n        WP3: [ [ 3, 3 ], [ 3, 4 ] ],\n        WP4: [ [ 4, 3 ], [ 4, 4 ] ],\n        WP5: [ [ 5, 3 ], [ 5, 4 ] ],\n        WP6: [ [ 6, 3 ], [ 6, 4 ] ],\n        WP7: [ [ 7, 3 ], [ 7, 4 ] ],\n        WP8: [ [ 8, 3 ], [ 8, 4 ] ],\n        WN1: [ [ 1, 3 ], [ 3, 3 ] ],\n        WN2: [ [ 6, 3 ], [ 8, 3 ] ]\n    }\n    console.log(mapDictListXyToRf(ranges))\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/coordType/mapDictListXyToRf.js"],"names":["mapListXyToRf","mapDictListXyToRf","dict","rfDict","JSON","parse","stringify","k","Object","keys"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,iBAA5B;AAGA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AACpC;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAb;;AACA,OAAK,IAAIK,CAAT,IAAcC,MAAM,CAACC,IAAP,CAAYN,MAAZ,CAAd,EAAmC;AAC/BA,IAAAA,MAAM,CAACI,CAAD,CAAN,GAAYP,aAAa,CAACG,MAAM,CAACI,CAAD,CAAP,CAAzB;AACH;;AACD,SAAOJ,MAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {mapListXyToRf} from \"./mapListXyToRf\";\n\n\nexport function mapDictListXyToRf(dict) {\n    /**rfDict not rf yet, but will make it be. */\n    var rfDict = JSON.parse(JSON.stringify(dict))\n    for (var k of Object.keys(rfDict)) {\n        rfDict[k] = mapListXyToRf(rfDict[k])\n    }\n    return rfDict;\n}\n\n// module.exports = mapDictListXyToRf;\n\n/** for node.js\nif (require.main === module) {\n    let ranges = {\n        WB1: [],\n        WR1: [],\n        WB2: [],\n        WR2: [],\n        WK1: [],\n        WQ1: [],\n        WP1: [ [ 1, 3 ], [ 1, 4 ] ],\n        WP2: [ [ 2, 3 ], [ 2, 4 ] ],\n        WP3: [ [ 3, 3 ], [ 3, 4 ] ],\n        WP4: [ [ 4, 3 ], [ 4, 4 ] ],\n        WP5: [ [ 5, 3 ], [ 5, 4 ] ],\n        WP6: [ [ 6, 3 ], [ 6, 4 ] ],\n        WP7: [ [ 7, 3 ], [ 7, 4 ] ],\n        WP8: [ [ 8, 3 ], [ 8, 4 ] ],\n        WN1: [ [ 1, 3 ], [ 3, 3 ] ],\n        WN2: [ [ 6, 3 ], [ 8, 3 ] ]\n    }\n    console.log(mapDictListXyToRf(ranges))\n\n}\n*/"]},"metadata":{},"sourceType":"module"}