{"ast":null,"code":"import { outOfBounds } from \"../sqrCase/oob\";\nimport { sampleBoardDicts } from \"../testObjects/sampleBoardDicts\";\nimport { getPieceMatchesPath } from \"./getPieceMatchesPath\";\nimport { xyToRf } from \"../coordType/crdCnvrt\";\nimport { step_1sqr90d, step_1sqr45d, step_1sqr0d, step_1sqr315d, step_1sqr270d, step_1sqr225d, step_1sqr180d, step_1sqr135d } from \"../helpers/stepFuncs\";\nexport function getPiecesOnPath(board, x, y, takeStep) {\n  /**\n  travel a path starting at location (x, y) until step out of bounds. add each\n  piece id encountered to list\n  */\n  [x, y] = takeStep(x, y);\n  let pieceList = [];\n\n  while (!outOfBounds(x, y)) {\n    if (board[xyToRf(x, y)] != \"#\") {\n      pieceList.push(board[xyToRf(x, y)]);\n    }\n\n    [x, y] = takeStep(x, y);\n  }\n\n  return pieceList;\n} // module.exports = getPiecesOnPath;\n\n/** for node.js\nif (require.main === module) {\n\n    import {printBoard} from \"../printers/printBoard\";\n    import {getRfsFromIds} from \"../helpers/getRfsFromIds\";\n\n    let board = sampleBoardDicts[\"check_example3\"];\n    var pieceList, pieceLocs;\n\n\n    // test 1, 90 degrees\n    console.log(\"test 1:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr90d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"90\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 2, 45 degrees\n    console.log(\"test 2:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr45d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"45\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 3, 0 degrees\n    console.log(\"test 3:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr0d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"0\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 4, 315 degrees\n    console.log(\"test 4:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr315d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"315\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 5, 270 degrees\n    console.log(\"test 5:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr270d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"270\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 6, 225 degrees\n    console.log(\"test 6:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr225d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"225\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 7, 180 degrees\n    console.log(\"test 7:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr180d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"180\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 8, 135 degrees\n    console.log(\"test 8:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr135d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"135\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/pathsInfo/getPiecesOnPath.js"],"names":["outOfBounds","sampleBoardDicts","getPieceMatchesPath","xyToRf","step_1sqr90d","step_1sqr45d","step_1sqr0d","step_1sqr315d","step_1sqr270d","step_1sqr225d","step_1sqr180d","step_1sqr135d","getPiecesOnPath","board","x","y","takeStep","pieceList","push"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,SAAQC,mBAAR,QAAkC,uBAAlC;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,aAPJ,EAQIC,aARJ,QASO,sBATP;AAWA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,CAAhC,EAAmCC,CAAnC,EAAsCC,QAAtC,EAAgD;AACnD;;;;AAIA,GAACF,CAAD,EAAIC,CAAJ,IAASC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAjB;AACA,MAAIE,SAAS,GAAG,EAAhB;;AACA,SAAO,CAACjB,WAAW,CAACc,CAAD,EAAIC,CAAJ,CAAnB,EAA2B;AACvB,QAAIF,KAAK,CAACV,MAAM,CAACW,CAAD,EAAIC,CAAJ,CAAP,CAAL,IAAuB,GAA3B,EAAgC;AAC5BE,MAAAA,SAAS,CAACC,IAAV,CAAeL,KAAK,CAACV,MAAM,CAACW,CAAD,EAAIC,CAAJ,CAAP,CAApB;AACH;;AACD,KAACD,CAAD,EAAIC,CAAJ,IAASC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAjB;AACH;;AACD,SAAOE,SAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {outOfBounds} from \"../sqrCase/oob\";\nimport {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\nimport {getPieceMatchesPath} from \"./getPieceMatchesPath\";\nimport {xyToRf} from \"../coordType/crdCnvrt\";\nimport {\n    step_1sqr90d,\n    step_1sqr45d,\n    step_1sqr0d,\n    step_1sqr315d,\n    step_1sqr270d,\n    step_1sqr225d,\n    step_1sqr180d,\n    step_1sqr135d,\n} from \"../helpers/stepFuncs\";\n\nexport function getPiecesOnPath(board, x, y, takeStep) {\n    /**\n    travel a path starting at location (x, y) until step out of bounds. add each\n    piece id encountered to list\n    */\n    [x, y] = takeStep(x, y);\n    let pieceList = [];\n    while (!outOfBounds(x, y)) {\n        if (board[xyToRf(x, y)] != \"#\") {\n            pieceList.push(board[xyToRf(x, y)]);\n        }\n        [x, y] = takeStep(x, y);\n    }\n    return pieceList;\n}\n\n// module.exports = getPiecesOnPath;\n\n/** for node.js\nif (require.main === module) {\n\n    import {printBoard} from \"../printers/printBoard\";\n    import {getRfsFromIds} from \"../helpers/getRfsFromIds\";\n\n    let board = sampleBoardDicts[\"check_example3\"];\n    var pieceList, pieceLocs;\n\n\n    // test 1, 90 degrees\n    console.log(\"test 1:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr90d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"90\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 2, 45 degrees\n    console.log(\"test 2:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr45d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"45\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 3, 0 degrees\n    console.log(\"test 3:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr0d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"0\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 4, 315 degrees\n    console.log(\"test 4:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr315d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"315\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 5, 270 degrees\n    console.log(\"test 5:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr270d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"270\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 6, 225 degrees\n    console.log(\"test 6:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr225d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"225\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 7, 180 degrees\n    console.log(\"test 7:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr180d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"180\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n    // test 8, 135 degrees\n    console.log(\"test 8:\");\n    pieceList = getPiecesOnPath(board, 4, 4, step_1sqr135d);\n    pieceLocs = getRfsFromIds(board, pieceList) \n    printBoard(board, \"135\", pieceLocs, [\"d4\"]);\n    console.log(\"\\n\");\n\n}\n*/\n"]},"metadata":{},"sourceType":"module"}