{"ast":null,"code":"import { pawnRange } from \"../testObjects/sampleBoardDicts\";\nimport { sampleBoardDicts } from \"../testObjects/sampleBoardDicts\";\nexport function replaceRankfileWithPawnId(board, pawnHist) {\n  var id;\n  var newPawnHist = {};\n\n  for (var rf of Object.keys(pawnHist)) {\n    id = board[rf];\n    newPawnHist[id] = pawnHist[rf];\n  }\n\n  return newPawnHist;\n} // module.exports = replaceRankfileWithPawnId;\n\n/** for node.js\nif (require.main === module) {\n\n    import {dataDict} from \"../testObjects/dataDicts/dd1\"\n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\"\n    import {printBoard} from \"../printers/printBoard\";\n\n    var pawnHist = dataDict[\"pawn_range\"][\"json\"][\"pawn_histories\"]\n    var board = sampleBoardDicts[\"pawn_range\"]\n    pawnHist = replaceRankfileWithPawnId(board, pawnHist)\n    var oldLocs = []\n    var currentLocs = []\n    for (var hist of Object.values(pawnHist)) {\n        for (let i = 0; i < hist.length - 1; i++) {\n            oldLocs.push(hist[i])\n        }\n        currentLocs.push(hist[hist.length - 1])\n    }\n    console.log(pawnHist)\n    printBoard(board, null, currentLocs, null, null, oldLocs)\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/JsonRecords/replaceRankfileWithPawnId.js"],"names":["pawnRange","sampleBoardDicts","replaceRankfileWithPawnId","board","pawnHist","id","newPawnHist","rf","Object","keys"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,iCAAxB;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AAGA,OAAO,SAASC,yBAAT,CAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AACvD,MAAIC,EAAJ;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAT,IAAeC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAf,EAAsC;AAClCC,IAAAA,EAAE,GAAGF,KAAK,CAACI,EAAD,CAAV;AACAD,IAAAA,WAAW,CAACD,EAAD,CAAX,GAAkBD,QAAQ,CAACG,EAAD,CAA1B;AACH;;AACD,SAAOD,WAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {pawnRange} from \"../testObjects/sampleBoardDicts\";\nimport {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\";\n\n\nexport function replaceRankfileWithPawnId(board, pawnHist) {\n    var id;\n    var newPawnHist = {}\n    for (var rf of Object.keys(pawnHist)) {\n        id = board[rf]\n        newPawnHist[id] = pawnHist[rf]\n    }\n    return newPawnHist;\n}\n\n// module.exports = replaceRankfileWithPawnId;\n\n/** for node.js\nif (require.main === module) {\n\n    import {dataDict} from \"../testObjects/dataDicts/dd1\"\n    import {sampleBoardDicts} from \"../testObjects/sampleBoardDicts\"\n    import {printBoard} from \"../printers/printBoard\";\n\n    var pawnHist = dataDict[\"pawn_range\"][\"json\"][\"pawn_histories\"]\n    var board = sampleBoardDicts[\"pawn_range\"]\n    pawnHist = replaceRankfileWithPawnId(board, pawnHist)\n    var oldLocs = []\n    var currentLocs = []\n    for (var hist of Object.values(pawnHist)) {\n        for (let i = 0; i < hist.length - 1; i++) {\n            oldLocs.push(hist[i])\n        }\n        currentLocs.push(hist[hist.length - 1])\n    }\n    console.log(pawnHist)\n    printBoard(board, null, currentLocs, null, null, oldLocs)\n\n}\n*/"]},"metadata":{},"sourceType":"module"}