{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PickType/PickType.jsx\";\nimport React from \"react\";\nimport { Standard } from \"./IconComponents/Standard\";\nimport { Council } from \"./IconComponents/Council\";\nimport { Custom } from \"./IconComponents/Custom\";\nimport { Title } from \"./IconComponents/Title\";\nimport { NavBar } from \"../../NavBar/NavBarRegular3\";\nimport { StaticHelpComponent } from \"../../Help/StaticHelpComponent\";\nimport { HelpText } from \"./HelpText\";\nimport { HelpModal } from \"../../Help/HelpModal\";\nimport \"./PickType.css\";\nexport class PickType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bValue: true,\n      isHelpModal: false\n    };\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = null; //Dictionary of Extra windows to display for help modals. More may be added.\n\n    this.hmChildren = {\n      \"none\": null\n    };\n    this.setType = this.setType.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className = \"pick-type-body\";\n  }\n\n  setType(gameType) {\n    this.props.setType(gameType);\n    this.props.nextStep();\n  }\n\n  togleNav(boolVal) {\n    this.navExpanded = boolVal;\n    this.setState({\n      bValue: !this.state.bValue\n    });\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/NewGame\",\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      navBarPos: \"relative\",\n      navBarPosTop: 0,\n      navBarPosLeft: \"22.2vw\",\n      expandColapseColor: \"000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 1920 1080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      width: 1920,\n      height: 1080,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"g\", {\n      id: \"a\",\n      className: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Custom, {\n      setType: this.setType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Standard, {\n      setType: this.setType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Council, {\n      setType: this.setType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(StaticHelpComponent, {\n      helpTitle: \"Explaining Game Types\",\n      helpText: HelpText,\n      hmChildName: \"none\",\n      setHelpText: this.setHelpText,\n      togleHelpModal: this.togleHelpModal,\n      normal: \"/Images/static-question-mark-000000.svg\",\n      highlighted: \"/Images/static-question-mark-ffffff.svg\",\n      width: \"3vw\",\n      left: \"64vw\",\n      top: \"43.5vh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      hmChildName: this.hmChildName,\n      extraModal: null,\n      togleHelpModal: this.togleHelpModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/NewGame/PickType/PickType.jsx"],"names":["React","Standard","Council","Custom","Title","NavBar","StaticHelpComponent","HelpText","HelpModal","PickType","Component","constructor","props","state","bValue","isHelpModal","helpTitle","helpText","hmChildName","hmChildren","setType","bind","setHelpText","togleHelpModal","componentDidMount","document","body","className","gameType","nextStep","togleNav","boolVal","navExpanded","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Standard } from \"./IconComponents/Standard\";\nimport { Council } from \"./IconComponents/Council\";\nimport { Custom } from \"./IconComponents/Custom\";\nimport { Title } from \"./IconComponents/Title\";\nimport {NavBar} from \"../../NavBar/NavBarRegular3\";\nimport {StaticHelpComponent} from \"../../Help/StaticHelpComponent\";\nimport {HelpText} from \"./HelpText\";\nimport {HelpModal} from \"../../Help/HelpModal\";\nimport \"./PickType.css\";\n\nexport class PickType extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {bValue: true, isHelpModal: false};\n        this.helpTitle = null;\n        this.helpText = null;\n        this.hmChildName = null;\n        //Dictionary of Extra windows to display for help modals. More may be added.\n        this.hmChildren = {\"none\":null} \n        this.setType = this.setType.bind(this);\n        this.setHelpText = this.setHelpText.bind(this);\n        this.togleHelpModal = this.togleHelpModal.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.className=\"pick-type-body\";\n    }\n\n    setType(gameType) {\n        this.props.setType(gameType);\n        this.props.nextStep();\n    }\n\n    togleNav(boolVal) {\n        this.navExpanded = boolVal;\n        this.setState({bValue: ! this.state.bValue});\n    }\n\n    togleHelpModal(boolVal) {\n        this.setState({isHelpModal: boolVal})\n    }\n\n    setHelpText(helpTitle, helpText, hmChildName) {\n        this.helpTitle = helpTitle;\n        this.helpText = helpText;\n        this.hmChildName = hmChildName;\n    }\n\n    render() {\n        return(\n            <>\n                <NavBar currentPage=\"/NewGame\" \n                        setHelpText={this.setHelpText} \n                        togleHelpModal={this.togleHelpModal} \n                        navBarPos=\"relative\" navBarPosTop={0} \n                        navBarPosLeft=\"22.2vw\" \n                        expandColapseColor=\"000000\" />\n                <svg viewBox=\"0 0 1920 1080\">\n                    <defs>\n                        <clipPath id=\"b\">\n                            <rect width={1920} height={1080} />\n                        </clipPath>\n                    </defs>\n                    <g id=\"a\" className=\"a\">\n                            <Custom setType={this.setType} />\n                            <Standard setType={this.setType} />\n                            <Council setType={this.setType} />\n                            <Title />\n                    </g>\n                </svg>\n                <StaticHelpComponent helpTitle=\"Explaining Game Types\"\n                                     helpText={HelpText}\n                                     hmChildName=\"none\"\n                                     setHelpText={this.setHelpText}\n                                     togleHelpModal={this.togleHelpModal}\n                                     normal=\"/Images/static-question-mark-000000.svg\"\n                                     highlighted=\"/Images/static-question-mark-ffffff.svg\"\n                                     width=\"3vw\" left=\"64vw\" top=\"43.5vh\"\n                />\n                {this.state.isHelpModal && (<HelpModal helpTitle={this.helpTitle}\n                                                       helpText={this.helpText}\n                                                       hmChildName={this.hmChildName}\n                                                       extraModal={null}\n                                                       togleHelpModal={this.togleHelpModal}/>)}\n            </>\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}