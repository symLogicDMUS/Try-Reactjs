{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/RangeBoard.jsx\";\nimport React from \"react\";\nimport { rankfiles } from \"../../helpers/rankfiles\";\nimport { RangePiece } from \"./RangePiece\";\nimport { sqrClasses } from \"../../helpers/sqrClasses\";\nimport { getPieceImg } from \"../../MyPieces/getPieceImg\";\nimport { getRangeDispPosPx } from \"../../helpers/getRangeDispPosPx\";\nimport \"../css/RangeBoard.css\";\nexport class RangeBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieceId: null\n    };\n    this.updatePrh = this.updatePrh.bind(this);\n  }\n\n  updatePrh(id) {\n    if (this.state.pieceId === id) this.setState({\n      pieceId: null\n    });else this.setState({\n      pieceId: id\n    });\n    return;\n  }\n\n  isHighlight(rf) {\n    if (this.state.pieceId === null) return false;\n    if (!Object.keys(this.props.allRanges).includes(this.state.pieceId)) return false;\n    if (this.props.allRanges[this.state.pieceId].includes(rf)) return true;\n    if (this.props.board[rf] === this.props.pieceId) return true;\n  }\n\n  getHighlightClass(rf) {\n    let defaultClass = sqrClasses[rf];\n    let highlightClass = null;\n\n    switch (defaultClass) {\n      case \"sqr1\":\n        highlightClass = \"sqr-highlight1\";\n        break;\n\n      case \"sqr2\":\n        highlightClass = \"sqr-highlight2\";\n        break;\n\n      default:\n        console.log(\"ERROR: class type of square not recognized\");\n        break;\n    }\n\n    return highlightClass;\n  }\n\n  getSqrClass(rf) {\n    if (this.isHighlight(rf)) return this.getHighlightClass(rf);else return sqrClasses[rf];\n  }\n\n  getBoard() {\n    let squares = [];\n    let imgName = null;\n\n    for (var rf of rankfiles) {\n      if (this.props.board[rf] === '#') {\n        squares.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: this.getSqrClass(rf),\n          style: getRangeDispPosPx(rf),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }, null));\n      } else {\n        imgName = getPieceImg(this.props.board[rf], this.props.idDict, this.props.pieceDefs);\n        squares.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: this.getSqrClass(rf),\n          style: getRangeDispPosPx(rf),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(RangePiece, {\n          id_: this.props.board[rf],\n          imgName: imgName,\n          updatePrh: this.updatePrh,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    return squares;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"range-display-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.getBoard());\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/RangeBoard.jsx"],"names":["React","rankfiles","RangePiece","sqrClasses","getPieceImg","getRangeDispPosPx","RangeBoard","Component","constructor","props","state","pieceId","updatePrh","bind","id","setState","isHighlight","rf","Object","keys","allRanges","includes","board","getHighlightClass","defaultClass","highlightClass","console","log","getSqrClass","getBoard","squares","imgName","push","idDict","pieceDefs","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {rankfiles} from \"../../helpers/rankfiles\";\nimport {RangePiece} from \"./RangePiece\";\nimport { sqrClasses } from \"../../helpers/sqrClasses\";\nimport { getPieceImg } from \"../../MyPieces/getPieceImg\";\nimport {getRangeDispPosPx} from \"../../helpers/getRangeDispPosPx\";\nimport \"../css/RangeBoard.css\";\n\nexport class RangeBoard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {pieceId: null};\n        this.updatePrh = this.updatePrh.bind(this);\n    }\n\n    updatePrh(id) {\n        if (this.state.pieceId === id)\n            this.setState({pieceId: null});\n        else\n            this.setState({pieceId: id})\n        return;\n    }\n\n    isHighlight(rf) {\n\n        if (this.state.pieceId === null)\n            return false\n\n        if (! Object.keys(this.props.allRanges).includes(this.state.pieceId)) \n            return false\n\n        if (this.props.allRanges[this.state.pieceId].includes(rf))\n            return true;\n\n        if (this.props.board[rf] === this.props.pieceId)\n            return true;\n    }\n\n    getHighlightClass(rf) {\n        let defaultClass = sqrClasses[rf];\n        let highlightClass = null;\n        switch (defaultClass) { \n            case \"sqr1\":\n                highlightClass = \"sqr-highlight1\";\n                break;\n            case \"sqr2\":\n                highlightClass = \"sqr-highlight2\";\n                break;\n            default:\n                console.log(\"ERROR: class type of square not recognized\");\n                break;\n        }\n        return highlightClass;\n    }\n\n    getSqrClass(rf) {\n        if (this.isHighlight(rf))\n            return this.getHighlightClass(rf)\n        else\n            return sqrClasses[rf]\n    }\n\n    getBoard() {\n        let squares = [];\n        let imgName = null;\n        for (var rf of rankfiles) {\n\n            if (this.props.board[rf] === '#') {\n                squares.push(\n                    <div className={this.getSqrClass(rf)} style={getRangeDispPosPx(rf)} >\n                        {null}\n                    </div>\n                )\n            }\n\n            else {\n                imgName = getPieceImg(this.props.board[rf], this.props.idDict, this.props.pieceDefs);\n                squares.push(\n                    <div className={this.getSqrClass(rf)} style={getRangeDispPosPx(rf)}>\n                        <RangePiece id_={this.props.board[rf]} imgName={imgName} updatePrh={this.updatePrh} />\n                    </div>\n                )\n            }\n        }\n\n        return squares;\n    }\n\n    render() {\n        return(\n            <div className=\"range-display-board\">\n                {this.getBoard()}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}