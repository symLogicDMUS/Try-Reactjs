{"ast":null,"code":"import { isalpha } from \"../../helpers/isalpha\";\nimport { isupper } from \"../../helpers/isupper\";\nexport function convertId(fenId) {\n  /* fenParser task 4, convert fen id to a game id**/\n  if (isupper(fenId)) {\n    return 'W' + fenId;\n  } else {\n    return 'B' + fenId.toUpperCase();\n  }\n}\nexport function convertIds(posList) {\n  /*convert each the.includes(fenId) posList to a game id**/\n  for (let i = 0; i < posList.length; i++) {\n    if (posList[i].length === 1 && isalpha(posList[i])) {\n      posList[i] = convertId(posList[i]);\n    }\n  }\n\n  return posList;\n} // module.exports = convertIds;\n\n/** for node.js\nif (require.main === module) {\n    // test 1:\n    console.log('test 1:')\n    let posList = convertIds( ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R', 'P', 'P', 'P', \n                             'P', 'P', 'P', 'P', 'P', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', 'p', 'p', 'p', 'p', 'p', 'p', 'p', \n                             'p', 'r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'])\n    console.log(posList)\n    console.log(\"\\n\")\n\n    // test 2\n    console.log('test 2')\n    posList = convertIds( ['#', 'R', 'L', 'T', 'K', '#', '#', '#', '#', '#', '#',\n                             '#', '#', '#', '#', '#', 'R', 'N', 'B', 'Q', '#', 'B', \n                             'N', 'R', '#', '#', '#', '#', '#', '#', '#', '#', 'r', \n                             'n', 'b', 'q', '#', 'b', 'n', 'r', '#', '#', '#', 'k', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#'])\n    console.log(posList)\n    console.log(\"\\n\")\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/fenParser/getBoard/convertId.js"],"names":["isalpha","isupper","convertId","fenId","toUpperCase","convertIds","posList","i","length"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,uBAAtB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AAGA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B;AACA,MAAIF,OAAO,CAACE,KAAD,CAAX,EAAoB;AAChB,WAAO,MAAMA,KAAb;AACH,GAFD,MAGK;AACD,WAAO,MAAMA,KAAK,CAACC,WAAN,EAAb;AACH;AACJ;AAGD,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAChC;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,QAAID,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAX,KAAsB,CAAtB,IAA2BR,OAAO,CAACM,OAAO,CAACC,CAAD,CAAR,CAAtC,EAAoD;AAChDD,MAAAA,OAAO,CAACC,CAAD,CAAP,GAAaL,SAAS,CAACI,OAAO,CAACC,CAAD,CAAR,CAAtB;AACH;AACJ;;AACD,SAAOD,OAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {isalpha} from \"../../helpers/isalpha\";\nimport {isupper} from \"../../helpers/isupper\";\n\n\nexport function convertId(fenId) {\n    /* fenParser task 4, convert fen id to a game id**/\n    if (isupper(fenId)) {\n        return 'W' + fenId\n    }\n    else {\n        return 'B' + fenId.toUpperCase()\n    }\n}\n\n\nexport function convertIds(posList) {\n    /*convert each the.includes(fenId) posList to a game id**/\n    for (let i = 0; i < posList.length; i++) {\n        if (posList[i].length === 1 && isalpha(posList[i])) {\n            posList[i] = convertId(posList[i])\n        }\n    }\n    return posList\n}\n\n// module.exports = convertIds;\n\n/** for node.js\nif (require.main === module) {\n    // test 1:\n    console.log('test 1:')\n    let posList = convertIds( ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R', 'P', 'P', 'P', \n                             'P', 'P', 'P', 'P', 'P', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', 'p', 'p', 'p', 'p', 'p', 'p', 'p', \n                             'p', 'r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'])\n    console.log(posList)\n    console.log(\"\\n\")\n\n    // test 2\n    console.log('test 2')\n    posList = convertIds( ['#', 'R', 'L', 'T', 'K', '#', '#', '#', '#', '#', '#',\n                             '#', '#', '#', '#', '#', 'R', 'N', 'B', 'Q', '#', 'B', \n                             'N', 'R', '#', '#', '#', '#', '#', '#', '#', '#', 'r', \n                             'n', 'b', 'q', '#', 'b', 'n', 'r', '#', '#', '#', 'k', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', \n                             '#', '#', '#', '#', '#', '#', '#', '#', '#'])\n    console.log(posList)\n    console.log(\"\\n\")\n\n}\n*/"]},"metadata":{},"sourceType":"module"}