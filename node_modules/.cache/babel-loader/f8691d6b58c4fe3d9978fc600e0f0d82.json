{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Options/LoadDef/Modals/CreatePieceProfileWB/CreatePieceDisplayBoard/CreatePieceDisplayBoard.jsx\";\nimport React from \"react\";\nimport { rankfiles } from \"../../../../../../helpers/rankfiles\";\nimport { sqrClasses } from \"../../../../../../helpers/sqrClasses\";\nimport { CreatePieceDisplaySquare as Square } from \"./CreatePieceDisplaySquare\";\nimport { CreatePieceDisplayPiece as Piece } from \"./CreatePieceDisplayPiece\";\nimport { getPosPx } from \"../../../../../../helpers/getPosPx\";\nimport { stepFuncDict } from \"../../../../../../helpers/stepFuncs\";\nimport { outOfBounds } from \"../../../../../../helpers/oob\";\nimport { rfToXy, xyToRf } from \"../../../../../../helpers/crdCnvrt\";\nimport { getAngle } from \"../../../../../../helpers/getAngle\";\nimport \"./CreatePieceDisplayBoard.css\";\nexport class CreatePieceDisplayBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.spanDisplays = {\n      'a1': false,\n      'a2': false,\n      'a3': false,\n      'a4': false,\n      'a5': false,\n      'a6': false,\n      'a7': false,\n      'a8': false,\n      'b1': false,\n      'b2': false,\n      'b3': false,\n      'b4': false,\n      'b5': false,\n      'b6': false,\n      'b7': false,\n      'b8': false,\n      'c1': false,\n      'c2': false,\n      'c3': false,\n      'c4': false,\n      'c5': false,\n      'c6': false,\n      'c7': false,\n      'c8': false,\n      'd1': false,\n      'd2': false,\n      'd3': false,\n      'd4': false,\n      'd5': false,\n      'd6': false,\n      'd7': false,\n      'd8': false,\n      'e1': false,\n      'e2': false,\n      'e3': false,\n      'e4': false,\n      'e5': false,\n      'e6': false,\n      'e7': false,\n      'e8': false,\n      'f1': false,\n      'f2': false,\n      'f3': false,\n      'f4': false,\n      'f5': false,\n      'f6': false,\n      'f7': false,\n      'f8': false,\n      'g1': false,\n      'g2': false,\n      'g3': false,\n      'g4': false,\n      'g5': false,\n      'g6': false,\n      'g7': false,\n      'g8': false,\n      'h1': false,\n      'h2': false,\n      'h3': false,\n      'h4': false,\n      'h5': false,\n      'h6': false,\n      'h7': false,\n      'h8': false\n    }; //true values rendered highlight color (currently dark red) and calculate jump offsets\n\n    this.jumpDisplays = {\n      'a1': false,\n      'a2': false,\n      'a3': false,\n      'a4': false,\n      'a5': false,\n      'a6': false,\n      'a7': false,\n      'a8': false,\n      'b1': false,\n      'b2': false,\n      'b3': false,\n      'b4': false,\n      'b5': false,\n      'b6': false,\n      'b7': false,\n      'b8': false,\n      'c1': false,\n      'c2': false,\n      'c3': false,\n      'c4': false,\n      'c5': false,\n      'c6': false,\n      'c7': false,\n      'c8': false,\n      'd1': false,\n      'd2': false,\n      'd3': false,\n      'd4': false,\n      'd5': false,\n      'd6': false,\n      'd7': false,\n      'd8': false,\n      'e1': false,\n      'e2': false,\n      'e3': false,\n      'e4': false,\n      'e5': false,\n      'e6': false,\n      'e7': false,\n      'e8': false,\n      'f1': false,\n      'f2': false,\n      'f3': false,\n      'f4': false,\n      'f5': false,\n      'f6': false,\n      'f7': false,\n      'f8': false,\n      'g1': false,\n      'g2': false,\n      'g3': false,\n      'g4': false,\n      'g5': false,\n      'g6': false,\n      'g7': false,\n      'g8': false,\n      'h1': false,\n      'h2': false,\n      'h3': false,\n      'h4': false,\n      'h5': false,\n      'h6': false,\n      'h7': false,\n      'h8': false\n    };\n    this.angles = this.props.def['spans'].map(stepFuncName => getAngle(stepFuncName));\n  }\n\n  reset() {\n    Object.keys(this.jumpDisplays).forEach(rf => {\n      this.jumpDisplays[rf] = false;\n    });\n    Object.keys(this.spanDisplays).forEach(rf => {\n      this.spanDisplays[rf] = false;\n    });\n    this.angles = this.props.def['spans'].map(stepFuncName => getAngle(stepFuncName));\n  }\n\n  setSpan(stepFunc) {\n    let span = [];\n    let rf = this.props.location;\n    rf = stepFunc(rf);\n\n    while (!outOfBounds(rf)) {\n      this.spanDisplays[rf] = true;\n      rf = stepFunc(rf);\n    }\n  }\n\n  setSpans() {\n    let stepFunc = null;\n\n    for (var angle of this.angles) {\n      stepFunc = stepFuncDict[angle];\n      this.setSpan(stepFunc);\n    }\n  }\n\n  setOffsets() {\n    let [x1, y1] = rfToXy(this.props.location);\n    let [dx, dy] = [-1, -1];\n    this.props.def['offsets'].forEach(xy => {\n      dx = x1 + xy[0];\n      dy = y1 + xy[1];\n      this.jumpDisplays[xyToRf(dx, dy)] = true;\n    });\n  }\n\n  getSqrClass(rf) {\n    let sqrClass = null;\n\n    if (this.props.rangeType === \"offsets\") {\n      if (this.jumpDisplays[rf]) {\n        sqrClass = \"create-piece-display-board-offset-sqr\";\n      } else {\n        sqrClass = \"create-piece-display-board-\" + sqrClasses[rf];\n      }\n    } else {\n      if (this.spanDisplays[rf]) {\n        sqrClass = \"create-piece-display-board-span-sqr\";\n      } else {\n        sqrClass = \"create-piece-display-board-\" + sqrClasses[rf];\n      }\n    }\n\n    return sqrClass;\n  }\n\n  getBoard() {\n    let squares = [];\n\n    for (var rf of rankfiles) {\n      if (rf === this.props.location) {\n        squares.push( /*#__PURE__*/React.createElement(Square, {\n          class_: this.getSqrClass(rf),\n          pxPos: getPosPx(rf, 40, 320),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Piece, {\n          pieceImgBase64Str: this.props.def['img'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        })));\n      } else {\n        squares.push( /*#__PURE__*/React.createElement(Square, {\n          class_: this.getSqrClass(rf),\n          pxPos: getPosPx(rf, 40, 320),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        }, null));\n      }\n    }\n\n    return squares;\n  }\n\n  render() {\n    if (this.props.rangeType === \"offsets\") this.setOffsets();else if (this.props.rangeType === \"spans\") this.setSpans();else return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#EC2525\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }\n    }, \"ERROR: invalid rangeType\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-piece-display-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, this.getBoard());\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Options/LoadDef/Modals/CreatePieceProfileWB/CreatePieceDisplayBoard/CreatePieceDisplayBoard.jsx"],"names":["React","rankfiles","sqrClasses","CreatePieceDisplaySquare","Square","CreatePieceDisplayPiece","Piece","getPosPx","stepFuncDict","outOfBounds","rfToXy","xyToRf","getAngle","CreatePieceDisplayBoard","Component","constructor","props","spanDisplays","jumpDisplays","angles","def","map","stepFuncName","reset","Object","keys","forEach","rf","setSpan","stepFunc","span","location","setSpans","angle","setOffsets","x1","y1","dx","dy","xy","getSqrClass","sqrClass","rangeType","getBoard","squares","push","render","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {rankfiles} from \"../../../../../../helpers/rankfiles\";\nimport {sqrClasses} from  \"../../../../../../helpers/sqrClasses\";\nimport {CreatePieceDisplaySquare as Square} from \"./CreatePieceDisplaySquare\";\nimport {CreatePieceDisplayPiece as Piece} from \"./CreatePieceDisplayPiece\";\nimport {getPosPx} from \"../../../../../../helpers/getPosPx\";\nimport {stepFuncDict} from \"../../../../../../helpers/stepFuncs\";\nimport { outOfBounds } from \"../../../../../../helpers/oob\";\nimport {rfToXy, xyToRf} from \"../../../../../../helpers/crdCnvrt\";\nimport { getAngle } from \"../../../../../../helpers/getAngle\";\nimport \"./CreatePieceDisplayBoard.css\";\n\nexport class CreatePieceDisplayBoard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.spanDisplays = { \n            'a1': false, 'a2': false, 'a3': false, 'a4': false, 'a5': false, 'a6': false, 'a7': false, 'a8': false,\n            'b1': false, 'b2': false, 'b3': false, 'b4': false, 'b5': false, 'b6': false, 'b7': false, 'b8': false,\n            'c1': false, 'c2': false, 'c3': false, 'c4': false, 'c5': false, 'c6': false, 'c7': false, 'c8': false,\n            'd1': false, 'd2': false, 'd3': false, 'd4': false, 'd5': false, 'd6': false, 'd7': false, 'd8': false, \n            'e1': false, 'e2': false, 'e3': false, 'e4': false, 'e5': false, 'e6': false, 'e7': false, 'e8': false, \n            'f1': false, 'f2': false, 'f3': false, 'f4': false, 'f5': false, 'f6': false, 'f7': false, 'f8': false,\n            'g1': false, 'g2': false, 'g3': false, 'g4': false, 'g5': false, 'g6': false, 'g7': false, 'g8': false, \n            'h1': false, 'h2': false, 'h3': false, 'h4': false, 'h5': false, 'h6': false, 'h7': false, 'h8': false\n        };\n\n\n        //true values rendered highlight color (currently dark red) and calculate jump offsets\n        this.jumpDisplays = { \n            'a1': false, 'a2': false, 'a3': false, 'a4': false, 'a5': false, 'a6': false, 'a7': false, 'a8': false,\n            'b1': false, 'b2': false, 'b3': false, 'b4': false, 'b5': false, 'b6': false, 'b7': false, 'b8': false,\n            'c1': false, 'c2': false, 'c3': false, 'c4': false, 'c5': false, 'c6': false, 'c7': false, 'c8': false,\n            'd1': false, 'd2': false, 'd3': false, 'd4': false, 'd5': false, 'd6': false, 'd7': false, 'd8': false, \n            'e1': false, 'e2': false, 'e3': false, 'e4': false, 'e5': false, 'e6': false, 'e7': false, 'e8': false, \n            'f1': false, 'f2': false, 'f3': false, 'f4': false, 'f5': false, 'f6': false, 'f7': false, 'f8': false,\n            'g1': false, 'g2': false, 'g3': false, 'g4': false, 'g5': false, 'g6': false, 'g7': false, 'g8': false, \n            'h1': false, 'h2': false, 'h3': false, 'h4': false, 'h5': false, 'h6': false, 'h7': false, 'h8': false\n        };\n\n        this.angles = this.props.def['spans'].map(stepFuncName => getAngle(stepFuncName));\n\n    }\n\n    reset() {\n\n        Object.keys(this.jumpDisplays).forEach(rf => {\n            this.jumpDisplays[rf] = false;\n        })\n        Object.keys(this.spanDisplays).forEach(rf => {\n            this.spanDisplays[rf] = false;\n        })\n\n        this.angles = this.props.def['spans'].map(stepFuncName => getAngle(stepFuncName))\n\n    }\n\n    setSpan(stepFunc) {\n        let span = [];\n        let rf = this.props.location;\n        rf = stepFunc(rf);\n        while (! outOfBounds(rf) ) {\n            this.spanDisplays[rf] = true;\n            rf = stepFunc(rf);\n        }\n    }\n\n    setSpans() {\n        let stepFunc = null;\n        for (var angle of this.angles) {\n            stepFunc = stepFuncDict[angle];\n            this.setSpan(stepFunc);\n        }\n    }\n\n    setOffsets() {\n        let [x1, y1] = rfToXy(this.props.location)\n        let [dx, dy] = [-1, -1]\n        this.props.def['offsets'].forEach(xy => {\n            dx = x1 + xy[0]\n            dy = y1 + xy[1]\n            this.jumpDisplays[xyToRf(dx, dy)] = true;\n        })\n    }\n\n    getSqrClass(rf) {\n\n        let sqrClass = null;\n\n        if (this.props.rangeType === \"offsets\") {\n            if (this.jumpDisplays[rf]) {\n                sqrClass = \"create-piece-display-board-offset-sqr\"\n            }\n            else {\n                sqrClass = \"create-piece-display-board-\" + sqrClasses[rf]\n            }\n        }\n\n        else {\n            if (this.spanDisplays[rf]) {\n                sqrClass = \"create-piece-display-board-span-sqr\"\n            }\n            else {\n                sqrClass = \"create-piece-display-board-\" + sqrClasses[rf]\n            }\n        }\n\n        return sqrClass;\n\n    }\n\n    getBoard() {\n\n        let squares = [];\n        for (var rf of rankfiles) {\n\n            if (rf === this.props.location) {\n                squares.push (\n                    <Square class_={this.getSqrClass(rf)} pxPos={getPosPx(rf, 40, 320)}>\n                        <Piece pieceImgBase64Str={this.props.def['img']} />\n                    </Square>\n                )\n            }\n            else {\n                squares.push (\n                    <Square class_={this.getSqrClass(rf)} pxPos={getPosPx(rf, 40, 320)}>\n                        {null}\n                    </Square> \n                )\n            }\n\n        }\n\n        return squares;\n\n    }\n    \n    render() {\n\n        if (this.props.rangeType === \"offsets\")\n            this.setOffsets()\n        else if (this.props.rangeType === \"spans\")\n            this.setSpans()\n        else\n            return <div style={{color: \"#EC2525\"}}>ERROR: invalid rangeType</div>\n\n        return (\n            <div className=\"create-piece-display-board\">\n                {this.getBoard()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}