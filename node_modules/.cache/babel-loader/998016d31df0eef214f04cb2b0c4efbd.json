{"ast":null,"code":"import { getRotation } from \"../helpers/getRotation\";\nimport { getStandardPieceDefs } from \"../testObjects/getStandardPieceDefs\";\nimport { stepFuncDict } from \"../helpers/stepFuncs\";\nexport function getPieceMatchesPath(stepFuncName, pieceDefs, pieceName, color) {\n  /*if the type of piece matches the type of path, then the piece can attack on that type of path**/\n  if (!Object.keys(pieceDefs).includes(pieceName)) {\n    return false;\n  }\n\n  stepFuncName = getRotation(stepFuncName, 180);\n\n  if (!pieceDefs[pieceName][color][\"spans\"].includes(stepFuncName)) {\n    return false;\n  }\n\n  return true;\n} // module.exports = getPieceMatchesPath;\n\n/** for node.js\nif (require.main === module) {\n    let pieceDefs = getStandardPieceDefs();\n    for (var pieceName of Object.keys(pieceDefs)) {\n        for (stepFunc of [\n            step_1sqr0d,\n            step_1sqr90d,\n            step_1sqr180d,\n            step_1sqr270d,\n            step_1sqr45d,\n            step_1sqr135d,\n            step_1sqr225d,\n            step_1sqr315d,\n        ]) {\n            // W:\n            let matchesPath = getPieceMatchesPath(stepFunc, pieceDefs, pieceName, \"W\");\n            if (matchesPath) {\n                console.log(`piece type:${pieceName} path type:${stepFunc.name}\\n`);\n            }\n            // B:\n            matchesPath = getPieceMatchesPath(stepFunc, pieceDefs, pieceName, \"B\");\n            if (matchesPath) {\n                console.log(`piece type:${pieceName} path type:${stepFunc.name}\\n`);\n            }\n        }\n    }\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/pathsInfo/getPieceMatchesPath.js"],"names":["getRotation","getStandardPieceDefs","stepFuncDict","getPieceMatchesPath","stepFuncName","pieceDefs","pieceName","color","Object","keys","includes"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,wBAA1B;AACA,SAAQC,oBAAR,QAAmC,qCAAnC;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAGA,OAAO,SAASC,mBAAT,CAA6BC,YAA7B,EAA2CC,SAA3C,EAAsDC,SAAtD,EAAiEC,KAAjE,EAAwE;AAC3E;AAEA,MAAI,CAAEC,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,QAAvB,CAAgCJ,SAAhC,CAAN,EAAkD;AAC9C,WAAO,KAAP;AACH;;AACDF,EAAAA,YAAY,GAAGJ,WAAW,CAACI,YAAD,EAAe,GAAf,CAA1B;;AACA,MAAI,CAAEC,SAAS,CAACC,SAAD,CAAT,CAAqBC,KAArB,EAA4B,OAA5B,EAAqCG,QAArC,CAA8CN,YAA9C,CAAN,EAAmE;AAC/D,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {getRotation} from \"../helpers/getRotation\";\nimport {getStandardPieceDefs} from \"../testObjects/getStandardPieceDefs\";\nimport {stepFuncDict} from \"../helpers/stepFuncs\"\n\n\nexport function getPieceMatchesPath(stepFuncName, pieceDefs, pieceName, color) {\n    /*if the type of piece matches the type of path, then the piece can attack on that type of path**/\n\n    if (! Object.keys(pieceDefs).includes(pieceName)) {\n        return false;\n    }\n    stepFuncName = getRotation(stepFuncName, 180);\n    if (! pieceDefs[pieceName][color][\"spans\"].includes(stepFuncName)) {\n        return false;\n    }\n    return true;\n}\n\n// module.exports = getPieceMatchesPath;\n\n/** for node.js\nif (require.main === module) {\n    let pieceDefs = getStandardPieceDefs();\n    for (var pieceName of Object.keys(pieceDefs)) {\n        for (stepFunc of [\n            step_1sqr0d,\n            step_1sqr90d,\n            step_1sqr180d,\n            step_1sqr270d,\n            step_1sqr45d,\n            step_1sqr135d,\n            step_1sqr225d,\n            step_1sqr315d,\n        ]) {\n            // W:\n            let matchesPath = getPieceMatchesPath(stepFunc, pieceDefs, pieceName, \"W\");\n            if (matchesPath) {\n                console.log(`piece type:${pieceName} path type:${stepFunc.name}\\n`);\n            }\n            // B:\n            matchesPath = getPieceMatchesPath(stepFunc, pieceDefs, pieceName, \"B\");\n            if (matchesPath) {\n                console.log(`piece type:${pieceName} path type:${stepFunc.name}\\n`);\n            }\n        }\n    }\n\n}\n*/\n"]},"metadata":{},"sourceType":"module"}