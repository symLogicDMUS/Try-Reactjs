{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/GameRootHeader.jsx\";\nimport React from \"react\";\nimport { getColorName } from \"../../helpers/getColorName\";\nimport { getOppositeColorName } from \"../../helpers/getOppositeColorName\";\nimport \"../css/GameRootHeader.css\";\nexport class GameRootHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.style = {\n      color: \"red\"\n    };\n  }\n\n  exclaimMark() {\n    if (this.props.condition === 'checkmate' || this.props.condition === \"stalemate\") return '!';else return null;\n  }\n\n  getTurn() {\n    let text = null;\n\n    switch (this.props.condition) {\n      case \"checkmate\":\n        text = `${getColorName(this.props.winner)} wins!`;\n        break;\n\n      case \"stalemate\":\n        text = \"Tie game!\";\n        break;\n\n      case \"check\":\n        text = `${getColorName(this.props.turn)}'s turn.`;\n        break;\n\n      case \"resigned\":\n        text = `${getOppositeColorName(this.props.turn)} wins. ${getColorName(this.props.turn)}`;\n        break;\n\n      case \"\":\n        text = `${getColorName(this.props.turn)}'s turn.`;\n        break;\n\n      default:\n        text = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        }, \"ERROR: condition not check, checkmate, stalemate or none.\");\n        break;\n    }\n\n    return text;\n  }\n\n  getHeader() {\n    if (this.props.condition === '') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board-header-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, this.getTurn());\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board-header-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"turn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, this.getTurn()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"condition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, this.props.condition, this.exclaimMark()));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getHeader());\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/GameRoot/Components/GameRootHeader.jsx"],"names":["React","getColorName","getOppositeColorName","GameRootHeader","Component","constructor","props","style","color","exclaimMark","condition","getTurn","text","winner","turn","getHeader","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,OAAO,2BAAP;AAEA,OAAO,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKH,KAAL,CAAWI,SAAX,KAAyB,WAAzB,IAAwC,KAAKJ,KAAL,CAAWI,SAAX,KAAyB,WAArE,EACI,OAAO,GAAP,CADJ,KAGI,OAAO,IAAP;AACP;;AAEDC,EAAAA,OAAO,GAAG;AAEN,QAAIC,IAAI,GAAG,IAAX;;AAEA,YAAQ,KAAKN,KAAL,CAAWI,SAAnB;AACI,WAAK,WAAL;AACIE,QAAAA,IAAI,GAAI,GAAEX,YAAY,CAAC,KAAKK,KAAL,CAAWO,MAAZ,CAAoB,QAA1C;AACA;;AACJ,WAAK,WAAL;AACID,QAAAA,IAAI,GAAG,WAAP;AACA;;AACJ,WAAK,OAAL;AACIA,QAAAA,IAAI,GAAI,GAAEX,YAAY,CAAC,KAAKK,KAAL,CAAWQ,IAAZ,CAAkB,UAAxC;AACA;;AACJ,WAAK,UAAL;AACIF,QAAAA,IAAI,GAAI,GAAEV,oBAAoB,CAAC,KAAKI,KAAL,CAAWQ,IAAZ,CAAkB,UAASb,YAAY,CAAC,KAAKK,KAAL,CAAWQ,IAAZ,CAAkB,EAAvF;AACA;;AACJ,WAAK,EAAL;AACIF,QAAAA,IAAI,GAAI,GAAEX,YAAY,CAAC,KAAKK,KAAL,CAAWQ,IAAZ,CAAkB,UAAxC;AACA;;AACJ;AACIF,QAAAA,IAAI,gBAAG;AAAK,UAAA,KAAK,EAAE;AAACJ,YAAAA,KAAK,EAAC;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAP;AACA;AAlBR;;AAqBA,WAAOI,IAAP;AACH;;AAEDG,EAAAA,SAAS,GAAG;AAER,QAAI,KAAKT,KAAL,CAAWI,SAAX,KAAyB,EAA7B,EAAiC;AAC7B,0BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,OAAL,EADL,CADJ;AAKH,KAND,MAQK;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,EADL,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWI,SADhB,EAC2B,KAAKD,WAAL,EAD3B,CAJJ,CADJ;AAUH;AAEJ;;AAGDO,EAAAA,MAAM,GAAG;AACL,wBACI,0CACK,KAAKD,SAAL,EADL,CADJ;AAKH;;AA1E+C","sourcesContent":["import React from \"react\";\nimport {getColorName} from \"../../helpers/getColorName\";\nimport { getOppositeColorName } from \"../../helpers/getOppositeColorName\";\nimport \"../css/GameRootHeader.css\";\n\nexport class GameRootHeader extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.style = {color:\"red\"}\n    }\n\n    exclaimMark() {\n        if (this.props.condition === 'checkmate' || this.props.condition === \"stalemate\")\n            return '!'\n        else\n            return null;\n    }\n\n    getTurn() {\n\n        let text = null;\n\n        switch (this.props.condition) {\n            case \"checkmate\":\n                text = `${getColorName(this.props.winner)} wins!`;   \n                break;\n            case \"stalemate\":\n                text = \"Tie game!\";\n                break;\n            case \"check\":\n                text = `${getColorName(this.props.turn)}'s turn.`;\n                break;\n            case \"resigned\":\n                text = `${getOppositeColorName(this.props.turn)} wins. ${getColorName(this.props.turn)}`;\n                break;\n            case \"\":\n                text = `${getColorName(this.props.turn)}'s turn.`;\n                break;\n            default:\n                text = <div style={{color:\"red\"}}>ERROR: condition not check, checkmate, stalemate or none.</div>;\n                break;\n        }\n\n        return text;\n    }\n\n    getHeader() {\n\n        if (this.props.condition === '') {\n            return (\n                <div className=\"board-header-label\">\n                    {this.getTurn()}\n                </div>\n            );\n        }\n\n        else {\n            return (\n                <div className=\"board-header-grid\">\n                    <div className=\"turn\">\n                        {this.getTurn()}\n                    </div>\n                    <div className=\"condition\">\n                        {this.props.condition}{this.exclaimMark()}\n                    </div>\n                </div>\n            );\n        }\n\n    }\n\n\n    render() {\n        return (\n            <>\n                {this.getHeader()}\n            </>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}