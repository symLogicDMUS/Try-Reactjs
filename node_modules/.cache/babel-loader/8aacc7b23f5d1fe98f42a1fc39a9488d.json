{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/MyPieces/MyPieces.jsx\";\nimport React from \"react\";\nimport { offsetToText } from \"../helpers/offsetToText\";\nimport { spanToText } from \"../helpers/spanToText\";\nimport { MyPieceProfile } from \"./MyPieceProfile\";\nimport { MyPieceConfirmDelete } from \"./MyPieceConfirmDelete\";\nimport { MyPiecesDisplayBoardModal } from \"./MyPiecesDisplayBoardModal\";\nimport { CreatePiece } from \"../CreatePiece/CreatePiece\";\nimport { HelpText } from \"./HelpText\";\nimport { HelpModal } from \"../Help/HelpModal\";\nimport { HelpComponent } from \"../Help/HelpComponent\";\nimport { SearchBar } from \"./SearchBar\";\nimport { NavBar } from \"../NavBar/NavBarRegular2\";\nimport { NavExpand } from \"../NavBar/NavExpand2\";\nimport { NavColapse } from \"../NavBar/NavColapse2\";\nimport { getDefs } from \"../../API/getDefs\";\nimport { deleteDef } from \"../../API/deleteDef\";\nimport \"./MyPieces.css\";\nexport class MyPieces extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      binaryValue: true,\n      selectedPiece: null,\n      redirect: false,\n      isHelpModal: false\n    };\n    this.deleteModal = false;\n    this.displayBoard = null;\n    this.pieceName = null;\n    this.color = null;\n    this.rangeType = null;\n    this.navExpanded = true;\n    this.defs = {};\n    this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n    this.searchText = \"\";\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = \"none\";\n    this.hmChildren = {\n      \"none\": null\n    };\n    this.update = this.update.bind(this);\n    this.load = this.load.bind(this);\n    this.delete = this.delete.bind(this);\n    this.setPiece = this.setPiece.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togleNav = this.togleNav.bind(this);\n    this.togleConfirmDeleteModal = this.togleConfirmDeleteModal.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.updateSearch = this.updateSearch.bind(this);\n    this.applySearchFilter = this.applySearchFilter.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.className = \"my-pieces-body\";\n    getDefs().then(([defs]) => {\n      if (defs) {\n        this.defs = defs;\n\n        for (var pieceName of this.standards) {\n          if (Object.keys(this.defs).includes(pieceName)) delete this.defs[pieceName];\n        }\n      } else {\n        this.defs = {};\n      }\n\n      this.displayDefs = JSON.parse(JSON.stringify(this.defs));\n      Object.keys(this.displayDefs).forEach(pieceName => {\n        this.displayDefs[pieceName][\"W\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"W\"]);\n        this.displayDefs[pieceName][\"W\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"W\"]);\n        this.displayDefs[pieceName][\"B\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"B\"]);\n        this.displayDefs[pieceName][\"B\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"B\"]);\n      });\n      this.setState({\n        binaryValue: !this.state.binaryValue\n      });\n    });\n  }\n\n  update() {\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  togleNav(boolVal) {\n    this.navExpanded = boolVal;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  setPiece(pieceName) {\n    this.setState({\n      selectedPiece: pieceName\n    });\n  }\n\n  load(pieceName) {\n    this.setState({\n      selectedPiece: pieceName,\n      redirect: true\n    });\n  }\n\n  togleConfirmDeleteModal(boolVal) {\n    this.deleteModal = boolVal;\n  }\n\n  delete(pieceName) {\n    delete this.defs[pieceName];\n    deleteDef(pieceName).then(([response]) => {\n      this.update();\n    });\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  getHelpModalChild() {\n    return this.hmChildren[this.hmChildName];\n  }\n\n  expand(piece, color, rangeType) {\n    this.pieceName = piece;\n    this.color = color;\n    this.rangeType = rangeType;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  getSpans(def) {\n    if (def.spans.length === 0) {\n      return Array(0);\n    }\n\n    let spanStrings = [];\n\n    for (var span of def.spans) {\n      spanStrings.push(spanToText(span));\n    }\n\n    return spanStrings;\n  }\n\n  getOffsets(def) {\n    if (def.offsets.length === 0) {\n      return Array(0);\n    }\n\n    let offsetStrings = [];\n    def.offsets.forEach(offset => {\n      offsetStrings.push(offsetToText(offset));\n    });\n    return offsetStrings;\n  }\n\n  getDisplayBoard() {\n    if (this.pieceName != null && this.color != null && this.rangeType != null) return /*#__PURE__*/React.createElement(MyPiecesDisplayBoardModal, {\n      def: this.defs[this.pieceName][this.color],\n      rangeType: this.rangeType,\n      color: this.color,\n      pieceName: this.pieceName,\n      expand: this.expand,\n      location: \"d4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 20\n      }\n    });else return null;\n  }\n\n  updateSearch(searchText) {\n    this.searchText = searchText;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  applySearchFilter() {\n    if (this.searchText !== \"\") return Object.keys(this.defs).filter(pieceName => pieceName.toLowerCase().startsWith(this.searchText));else return Object.keys(this.defs);\n  }\n\n  getProfiles() {\n    let profiles = [];\n    let pieceNames = this.applySearchFilter();\n\n    for (var pieceName of pieceNames) {\n      profiles.push( /*#__PURE__*/React.createElement(MyPieceProfile, {\n        load: this.load,\n        expand: this.expand,\n        setPiece: this.setPiece,\n        pieceName: pieceName,\n        displayDefs: this.displayDefs,\n        togleConfirmDeleteModal: this.togleConfirmDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return profiles;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(CreatePiece, {\n        defaultPiece: this.state.selectedPiece,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-pieces\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"My Pieces\"), /*#__PURE__*/React.createElement(HelpComponent, {\n      helpTitle: \"My Pieces Page\",\n      helpText: HelpText,\n      hmChildName: \"none\",\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      normal: \"/Images/question-mark-a9a9a9.svg\",\n      highlighted: \"/Images/question-mark-72e2ff.svg\",\n      color: \"#72e2ff\",\n      style: {\n        position: \"absolute\",\n        top: 25,\n        left: 202,\n        width: 16,\n        height: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      updateSearch: this.updateSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profiles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, this.getProfiles())), this.deleteModal && /*#__PURE__*/React.createElement(MyPieceConfirmDelete, {\n      delete: this.delete,\n      setPiece: this.setPiece,\n      pieceName: this.state.selectedPiece,\n      togleConfirmDeleteModal: this.togleConfirmDeleteModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }), this.getDisplayBoard(), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      togleHelpModal: this.togleHelpModal,\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }, this.getHelpModalChild()), this.navExpanded && /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/NewGame\",\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      navBarPosTop: 0,\n      navBarPosLeft: 258,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      backgroundColorSelected: \"#3d3d3d\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 39\n      }\n    }), this.navExpanded && /*#__PURE__*/React.createElement(NavColapse, {\n      left: 1276,\n      top: 0,\n      togleNav: this.togleNav,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 39\n      }\n    }), !this.navExpanded && /*#__PURE__*/React.createElement(NavExpand, {\n      left: 1276,\n      top: 0,\n      togleNav: this.togleNav,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 41\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/MyPieces/MyPieces.jsx"],"names":["React","offsetToText","spanToText","MyPieceProfile","MyPieceConfirmDelete","MyPiecesDisplayBoardModal","CreatePiece","HelpText","HelpModal","HelpComponent","SearchBar","NavBar","NavExpand","NavColapse","getDefs","deleteDef","MyPieces","Component","constructor","props","state","binaryValue","selectedPiece","redirect","isHelpModal","deleteModal","displayBoard","pieceName","color","rangeType","navExpanded","defs","standards","searchText","helpTitle","helpText","hmChildName","hmChildren","update","bind","load","delete","setPiece","expand","togleNav","togleConfirmDeleteModal","togleHelpModal","setHelpText","updateSearch","applySearchFilter","componentDidMount","document","body","className","then","Object","keys","includes","displayDefs","JSON","parse","stringify","forEach","getSpans","getOffsets","setState","boolVal","response","getHelpModalChild","piece","def","spans","length","Array","spanStrings","span","push","offsets","offsetStrings","offset","getDisplayBoard","filter","toLowerCase","startsWith","getProfiles","profiles","pieceNames","render","position","top","left","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {offsetToText} from \"../helpers/offsetToText\";\nimport {spanToText} from \"../helpers/spanToText\";\nimport {MyPieceProfile} from \"./MyPieceProfile\";\nimport {MyPieceConfirmDelete} from \"./MyPieceConfirmDelete\";\nimport { MyPiecesDisplayBoardModal } from \"./MyPiecesDisplayBoardModal\";\nimport { CreatePiece } from \"../CreatePiece/CreatePiece\";\nimport {HelpText} from \"./HelpText\";\nimport {HelpModal} from \"../Help/HelpModal\";\nimport {HelpComponent} from \"../Help/HelpComponent\";\nimport {SearchBar} from \"./SearchBar\";\nimport {NavBar} from \"../NavBar/NavBarRegular2\";\nimport {NavExpand} from \"../NavBar/NavExpand2\";\nimport {NavColapse} from \"../NavBar/NavColapse2\";\nimport {getDefs} from \"../../API/getDefs\";\nimport {deleteDef} from \"../../API/deleteDef\";\nimport \"./MyPieces.css\";\n\n\nexport class MyPieces extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {binaryValue: true, selectedPiece: null, redirect: false, isHelpModal:false};\n        this.deleteModal = false;\n        this.displayBoard = null;\n        this.pieceName = null;\n        this.color = null;\n        this.rangeType = null;\n        this.navExpanded = true;\n        this.defs = {};\n        this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n        this.searchText = \"\";\n        this.helpTitle = null;\n        this.helpText = null;\n        this.hmChildName = \"none\";\n        this.hmChildren = {\"none\":null}; \n        this.update = this.update.bind(this);\n        this.load = this.load.bind(this);\n        this.delete = this.delete.bind(this);\n        this.setPiece = this.setPiece.bind(this);\n        this.expand = this.expand.bind(this);\n        this.togleNav = this.togleNav.bind(this);\n        this.togleConfirmDeleteModal = this.togleConfirmDeleteModal.bind(this);\n        this.togleHelpModal = this.togleHelpModal.bind(this);\n        this.setHelpText = this.setHelpText.bind(this);\n        this.updateSearch = this.updateSearch.bind(this)\n        this.applySearchFilter = this.applySearchFilter.bind(this);\n    }\n\n    componentDidMount() {\n\n        document.body.className=\"my-pieces-body\";\n\n        getDefs().then( ([defs]) => {\n\n            if (defs) {\n                this.defs = defs;\n                for (var pieceName of this.standards) {\n                    if (Object.keys(this.defs).includes(pieceName))\n                        delete this.defs[pieceName];\n                }        \n            }\n            else {\n                this.defs = {}\n            }\n\n            this.displayDefs = JSON.parse(JSON.stringify(this.defs));\n            Object.keys(this.displayDefs).forEach(pieceName => {\n                this.displayDefs[pieceName][\"W\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"W\"])\n                this.displayDefs[pieceName][\"W\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"W\"])\n                this.displayDefs[pieceName][\"B\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"B\"])\n                this.displayDefs[pieceName][\"B\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"B\"])\n            });\n            this.setState({binaryValue: ! this.state.binaryValue});\n        });\n        \n    }\n\n\n    update() {\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    togleNav(boolVal) {\n        this.navExpanded = boolVal;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    setPiece(pieceName) {\n        this.setState({selectedPiece: pieceName})\n    }\n \n    load(pieceName) {\n        this.setState({selectedPiece: pieceName, redirect: true});\n    }\n\n    togleConfirmDeleteModal(boolVal) {\n        this.deleteModal = boolVal;\n    }\n\n    delete(pieceName) {\n        delete this.defs[pieceName];\n        deleteDef(pieceName).then( ([response]) => {\n            this.update();\n        });\n    }\n\n    togleHelpModal(boolVal) {\n        this.setState({isHelpModal: boolVal})\n    }\n\n    setHelpText(helpTitle, helpText, hmChildName) {\n        this.helpTitle = helpTitle;\n        this.helpText = helpText;\n        this.hmChildName = hmChildName;\n    }\n\n    getHelpModalChild() {\n        return this.hmChildren[this.hmChildName]\n    }\n\n    expand(piece, color, rangeType) {\n        this.pieceName = piece;\n        this.color = color;\n        this.rangeType = rangeType;\n        this.setState({binaryValue: ! this.state.binaryValue});\n    }\n\n    getSpans(def) {\n\n        if (def.spans.length === 0) {\n            return Array(0);\n        }\n\n        let spanStrings = [];\n        for (var span of def.spans) {\n            spanStrings.push(spanToText(span))\n        }\n        return spanStrings;\n    }\n        \n    getOffsets(def) {\n\n        if (def.offsets.length === 0) {\n            return Array(0);\n        }\n\n        let offsetStrings = []\n        def.offsets.forEach(offset => {\n            offsetStrings.push(offsetToText(offset));\n        })\n        return offsetStrings;\n    }\n\n    getDisplayBoard() {\n\n        if (this.pieceName != null && this.color != null && this.rangeType != null) \n            return <MyPiecesDisplayBoardModal def={this.defs[this.pieceName][this.color]} \n                                                    rangeType={this.rangeType} \n                                                    color={this.color} \n                                                    pieceName={this.pieceName} \n                                                    expand={this.expand}\n                                                    location=\"d4\"\n                    />\n        else    \n            return null;\n    }\n\n    updateSearch(searchText) {\n        this.searchText = searchText;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    applySearchFilter() {\n        if (this.searchText !== \"\")\n            return Object.keys(this.defs).filter(pieceName => pieceName.toLowerCase().startsWith(this.searchText));\n        else\n            return Object.keys(this.defs);\n    }\n\n    getProfiles() {\n\n        let profiles = [];\n        let pieceNames = this.applySearchFilter();\n        for (var pieceName of pieceNames) {\n            profiles.push(\n                <MyPieceProfile \n                load={this.load}\n                expand={this.expand}\n                setPiece={this.setPiece}\n                pieceName={pieceName}\n                displayDefs={this.displayDefs}\n                togleConfirmDeleteModal={this.togleConfirmDeleteModal}\n                />\n            );\n        }\n        return profiles;\n\n    }\n\n    render() {\n        \n        if (this.state.redirect) {\n            return (<CreatePiece defaultPiece={this.state.selectedPiece} />)\n        }\n        \n        return (\n            <>\n                <div className=\"my-pieces\">\n                    <div className=\"top-bar\">\n                        <div className=\"title\">\n                            My Pieces\n                        </div>\n                        <HelpComponent helpTitle=\"My Pieces Page\"\n                                       helpText={HelpText} \n                                       hmChildName=\"none\"\n                                       togleHelpModal={this.togleHelpModal}\n                                       setHelpText={this.setHelpText}\n                                       normal=\"/Images/question-mark-a9a9a9.svg\"\n                                       highlighted=\"/Images/question-mark-72e2ff.svg\"\n                                       color=\"#72e2ff\"                                       \n                                       style={{position: \"absolute\",\n                                               top: 25,\n                                               left: 202,\n                                               width: 16,\n                                               height: 16\n                                            }}\n                        />\n                        <SearchBar updateSearch={this.updateSearch} />\n                    </div>\n                    <div className=\"profiles\">\n                      {this.getProfiles()}\n                    </div>\n                </div>\n                {this.deleteModal && (\n                <MyPieceConfirmDelete \n                  delete={this.delete} \n                  setPiece={this.setPiece}\n                  pieceName={this.state.selectedPiece}\n                  togleConfirmDeleteModal={this.togleConfirmDeleteModal} \n                />)}\n                {this.getDisplayBoard()}\n                {this.state.isHelpModal && (<HelpModal togleHelpModal={this.togleHelpModal} \n                                                       helpTitle={this.helpTitle}\n                                                       helpText={this.helpText}>\n                    {this.getHelpModalChild()}\n                </HelpModal>)}\n                {this.navExpanded && (<NavBar currentPage=\"/NewGame\" togleHelpModal={this.togleHelpModal} setHelpText={this.setHelpText} \n                                              navBarPosTop={0} navBarPosLeft={258} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" backgroundColorSelected=\"#3d3d3d\" border=\"1px solid #707070\" />)}\n                {this.navExpanded && (<NavColapse  left={1276}  top={0} togleNav={this.togleNav} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" border=\"1px solid #707070\" />)}\n                {! this.navExpanded && (<NavExpand left={1276}  top={0} togleNav={this.togleNav} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" border=\"1px solid #707070\" />)}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}