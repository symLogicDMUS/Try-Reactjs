{"ast":null,"code":"import { allXy } from \"../helpers/allxy\";\nexport function restriction(coordList) {\n  /**get a restriction set from the coordList (threatArea || pins)\n  if coordList was empty, then no restriction was found so return set of all_Xy else convert coordList to\n  a set &&  return\n  */\n  if (coordList.length === 0) {\n    return allXy;\n  } else {\n    return new Set(coordList);\n  }\n} // module.exports = restriction;\n\n/** for node.js\nif (require.main === module) {\n    \n    var restrictionResult = null;\n\n    var pins = {\n        WP1: [ [ 3, 4 ], [ 2, 3 ], [ 1, 2 ] ],\n        WB1: [ [ 4, 4 ], [ 4, 3 ], [ 4, 2 ], [ 4, 1 ] ],\n        WN1: [ [ 5, 4 ], [ 6, 3 ], [ 7, 2 ], [ 8, 1 ] ],\n        WP2: [ [ 3, 5 ], [ 2, 5 ], [ 1, 5 ] ],\n        WK1: [],\n        WR1: [ [ 5, 5 ], [ 6, 5 ], [ 7, 5 ], [ 8, 5 ] ],\n        WN2: [ [ 3, 6 ], [ 2, 7 ], [ 1, 8 ] ],\n        WB2: [ [ 4, 6 ], [ 4, 7 ], [ 4, 8 ] ],\n        WQ1: [ [ 5, 6 ], [ 6, 7 ], [ 7, 8 ] ]\n    }\n    for (var id of Object.keys(pins)) {\n        restrictionResult = restriction(pins[id])\n        console.log(`${id}`, restrictionResult)\n    }\n\n    \n\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/restriction/restriction.js"],"names":["allXy","restriction","coordList","length","Set"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,kBAApB;AAGA,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgC;AACnC;;;;AAIA,MAAIA,SAAS,CAACC,MAAV,KAAmB,CAAvB,EAA0B;AACtB,WAAOH,KAAP;AACH,GAFD,MAGK;AACD,WAAO,IAAII,GAAJ,CAAQF,SAAR,CAAP;AACH;AACJ,C,CAED;;AAEA","sourcesContent":["import {allXy} from \"../helpers/allxy\";\n\n\nexport function restriction(coordList) {\n    /**get a restriction set from the coordList (threatArea || pins)\n    if coordList was empty, then no restriction was found so return set of all_Xy else convert coordList to\n    a set &&  return\n    */\n    if (coordList.length===0) {\n        return allXy;\n    }\n    else {\n        return new Set(coordList);\n    }\n}\n\n// module.exports = restriction;\n\n/** for node.js\nif (require.main === module) {\n    \n    var restrictionResult = null;\n\n    var pins = {\n        WP1: [ [ 3, 4 ], [ 2, 3 ], [ 1, 2 ] ],\n        WB1: [ [ 4, 4 ], [ 4, 3 ], [ 4, 2 ], [ 4, 1 ] ],\n        WN1: [ [ 5, 4 ], [ 6, 3 ], [ 7, 2 ], [ 8, 1 ] ],\n        WP2: [ [ 3, 5 ], [ 2, 5 ], [ 1, 5 ] ],\n        WK1: [],\n        WR1: [ [ 5, 5 ], [ 6, 5 ], [ 7, 5 ], [ 8, 5 ] ],\n        WN2: [ [ 3, 6 ], [ 2, 7 ], [ 1, 8 ] ],\n        WB2: [ [ 4, 6 ], [ 4, 7 ], [ 4, 8 ] ],\n        WQ1: [ [ 5, 6 ], [ 6, 7 ], [ 7, 8 ] ]\n    }\n    for (var id of Object.keys(pins)) {\n        restrictionResult = restriction(pins[id])\n        console.log(`${id}`, restrictionResult)\n    }\n\n    \n\n\n}\n*/"]},"metadata":{},"sourceType":"module"}