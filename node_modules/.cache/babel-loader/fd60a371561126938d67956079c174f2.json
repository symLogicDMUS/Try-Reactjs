{"ast":null,"code":"export function dist(sqr1, sqr2) {\n  /* calculate the distance between sqr1 &&  sqr2 &&  return **/\n  var res = Math.sqrt((sqr2[0] - sqr1[0]) ** 2 + (sqr2[1] - sqr1[1]) ** 2);\n  return res;\n}\nexport function slope(sqr1, sqr2) {\n  /*return the slope of line defined by (x1, x2), (y1, y2) **/\n  let s = (sqr2[1] - sqr1[1]) / (sqr2[0] - sqr1[0]);\n  return s;\n} // // module.exports = {dist, slope}\n\n/** for node.js\nif (require.main === module) {\n    // test 1, slope divide by 0:\n    console.log('test 1, divide by 0:')\n    console.log(slope([3, 3], [3, 5]) === Infinity)\n    console.log('\\n')\n    // test 2, slope:\n    console.log('test 2:')\n    console.log(slope([3, 3], [5, 5]) === 1)\n    console.log('\\n')\n    // test 3, dist:\n    console.log('test 3:')\n    console.log(dist([3, 3], [4, 4]) === Math.sqrt(2))\n    console.log('\\n')\n    // test 5, dist:\n    console.log('test 4:')\n    console.log(dist([3, 3], [1, 4]) === Math.sqrt(5))\n    console.log('\\n')\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/helpers/formulas.js"],"names":["dist","sqr1","sqr2","res","Math","sqrt","slope","s"],"mappings":"AACA,OAAO,SAASA,IAAT,CAAcC,IAAd,EAAoBC,IAApB,EAA0B;AAC7B;AACA,MAAIC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACH,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAf,KAAuB,CAAvB,GAA2B,CAACC,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAf,KAAuB,CAA5D,CAAV;AACA,SAAOE,GAAP;AACH;AAED,OAAO,SAASG,KAAT,CAAeL,IAAf,EAAqBC,IAArB,EAA2B;AAC9B;AACA,MAAIK,CAAC,GAAG,CAACL,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAf,KAAuBC,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAArC,CAAR;AACA,SAAOM,CAAP;AACH,C,CAED;;AAEA","sourcesContent":["\nexport function dist(sqr1, sqr2) {\n    /* calculate the distance between sqr1 &&  sqr2 &&  return **/\n    var res = Math.sqrt((sqr2[0] - sqr1[0]) ** 2 + (sqr2[1] - sqr1[1]) ** 2)\n    return res;\n}\n\nexport function slope(sqr1, sqr2) {\n    /*return the slope of line defined by (x1, x2), (y1, y2) **/\n    let s = (sqr2[1] - sqr1[1]) / (sqr2[0] - sqr1[0])\n    return s;\n}\n\n// // module.exports = {dist, slope}\n\n/** for node.js\nif (require.main === module) {\n    // test 1, slope divide by 0:\n    console.log('test 1, divide by 0:')\n    console.log(slope([3, 3], [3, 5]) === Infinity)\n    console.log('\\n')\n    // test 2, slope:\n    console.log('test 2:')\n    console.log(slope([3, 3], [5, 5]) === 1)\n    console.log('\\n')\n    // test 3, dist:\n    console.log('test 3:')\n    console.log(dist([3, 3], [4, 4]) === Math.sqrt(2))\n    console.log('\\n')\n    // test 5, dist:\n    console.log('test 4:')\n    console.log(dist([3, 3], [1, 4]) === Math.sqrt(5))\n    console.log('\\n')\n\n}\n*/"]},"metadata":{},"sourceType":"module"}