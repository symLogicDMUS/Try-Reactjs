{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Options/SaveDef/Modals/InvalidName/InvalidName.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./InvalidName.css\";\nexport class InvalidName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.class_ = \"invalid-name-modal visible\";\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.class_ === \"invalid-name-modal visible\") {\n      this.class_ = \"invalid-name-modal invisible\";\n    } else {\n      this.class_ = \"invalid-name-modal visible\";\n    }\n\n    this.props.setSaveStatus(\"none\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.class_,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-name-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-name-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, this.props.header), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"invalid-name-button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"Ok\")));\n  }\n\n}\nexport let test = () => ReactDOM.render( /*#__PURE__*/React.createElement(InvalidName, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 41\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/CreatePiece/Options/SaveDef/Modals/InvalidName/InvalidName.jsx"],"names":["React","ReactDOM","InvalidName","Component","constructor","props","class_","handleClick","bind","setSaveStatus","render","header","test","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,mBAAP;AAEA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,4BAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKD,MAAL,KAAgB,4BAApB,EAAkD;AAC9C,WAAKA,MAAL,GAAc,8BAAd;AACH,KAFD,MAGK;AACD,WAAKA,MAAL,GAAc,4BAAd;AACH;;AACD,SAAKD,KAAL,CAAWI,aAAX,CAAyB,MAAzB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKJ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKD,KAAL,CAAWM,MAAlD,CADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAE,KAAKJ,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,CADJ;AAUH;;AA7B4C;AAgCjD,OAAO,IAAIK,IAAI,GAAG,MAAMX,QAAQ,CAACS,MAAT,eAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAiCG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjC,CAAjB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./InvalidName.css\";\n\nexport class InvalidName extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.class_ = \"invalid-name-modal visible\";\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.class_ === \"invalid-name-modal visible\") {\n            this.class_ = \"invalid-name-modal invisible\";\n        }\n        else {\n            this.class_ = \"invalid-name-modal visible\";\n        }\n        this.props.setSaveStatus(\"none\")\n    }\n\n    render() {\n        return (\n            <div className={this.class_}>\n                <div className=\"invalid-name-window\">\n                    <div className=\"invalid-name-heading\">{this.props.header}</div>\n                    <button className=\"invalid-name-button\" onClick={this.handleClick}>\n                        Ok\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport let test = () => ReactDOM.render(<InvalidName />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}