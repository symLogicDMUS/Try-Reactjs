{"ast":null,"code":"import { getTurnData } from \"./getTurnData\";\nimport { getAiColor } from \"../game_logic/color/getAiColor\";\nimport { getNextColor as getEnemyColor } from \"../game_logic/color/getNextColor\";\nexport function updateCouncil(board, jsonRecords, color, pt, pieceDefs, idDict) {\n  /**\n   * The King's Council extention of game has not yet been updated. This method is currently the same as update() from update.js\n   */\n  var turnData = getTurnData(board, color, getAiColor(pt), jsonRecords, pieceDefs, idDict);\n  var enemyTurnData = getTurnData(board, getEnemyColor(color), getAiColor(pt), jsonRecords, pieceDefs.idDict);\n  turnData['enemyRanges'] = enemyTurnData['ranges'];\n  return turnData;\n}","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/apiHelpers/updateCouncil.js"],"names":["getTurnData","getAiColor","getNextColor","getEnemyColor","updateCouncil","board","jsonRecords","color","pt","pieceDefs","idDict","turnData","enemyTurnData"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,eAA1B;AACA,SAAQC,UAAR,QAAyB,gCAAzB;AACA,SAAQC,YAAY,IAAIC,aAAxB,QAA4C,kCAA5C;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,WAA9B,EAA2CC,KAA3C,EAAkDC,EAAlD,EAAsDC,SAAtD,EAAiEC,MAAjE,EAAyE;AAC5E;;;AAGA,MAAIC,QAAQ,GAAGX,WAAW,CAACK,KAAD,EAAQE,KAAR,EAAeN,UAAU,CAACO,EAAD,CAAzB,EAA+BF,WAA/B,EAA4CG,SAA5C,EAAuDC,MAAvD,CAA1B;AACA,MAAIE,aAAa,GAAGZ,WAAW,CAACK,KAAD,EAAQF,aAAa,CAACI,KAAD,CAArB,EAA8BN,UAAU,CAACO,EAAD,CAAxC,EAA8CF,WAA9C,EAA2DG,SAAS,CAAEC,MAAtE,CAA/B;AACAC,EAAAA,QAAQ,CAAC,aAAD,CAAR,GAA0BC,aAAa,CAAC,QAAD,CAAvC;AACA,SAAOD,QAAP;AACH","sourcesContent":["import {getTurnData} from \"./getTurnData\";\nimport {getAiColor} from \"../game_logic/color/getAiColor\";\nimport {getNextColor as getEnemyColor} from \"../game_logic/color/getNextColor\"\n\n\nexport function updateCouncil(board, jsonRecords, color, pt, pieceDefs, idDict) {\n    /**\n     * The King's Council extention of game has not yet been updated. This method is currently the same as update() from update.js\n     */\n    var turnData = getTurnData(board, color, getAiColor(pt), jsonRecords, pieceDefs, idDict)\n    var enemyTurnData = getTurnData(board, getEnemyColor(color), getAiColor(pt), jsonRecords, pieceDefs. idDict)\n    turnData['enemyRanges'] = enemyTurnData['ranges']\n    return turnData;\n}"]},"metadata":{},"sourceType":"module"}