{"ast":null,"code":"export function joinToRow(row) {\n  /*getFen TASK 3.1, join the squares from a row on the board**/\n  return row.join(\"\");\n} // module.exports = joinToRow;\n\n/** for node.js\nif (require.main === module) {\n    // test 1:\n    console.log(joinToRow(['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']))\n    console.log(joinToRow(['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P']))\n    console.log(joinToRow(['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']))\n    // test 2:\n    console.log(joinToRow(['r', '#', '#', '#', 'k', '#', '#', 'r']))\n    console.log(joinToRow(['#', 'P', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', 'P', '#', '#']))\n    console.log(joinToRow(['p', '#', '#', '#', 'n', '#', '#', 'p']))\n    console.log(joinToRow(['#', '#', '#', 'b', '#', 'B', 'p', 'P']))\n    console.log(joinToRow(['N', 'B', 'Q', 'b', '#', 'q', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['R', '#', '#', '#', 'K', '#', '#', 'R']))\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/fenParser/getFen/joinToRow.js"],"names":["joinToRow","row","join"],"mappings":"AAEA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AAC3B;AACA,SAAOA,GAAG,CAACC,IAAJ,CAAS,EAAT,CAAP;AACH,C,CAED;;AAEA","sourcesContent":["\n\nexport function joinToRow(row) {\n    /*getFen TASK 3.1, join the squares from a row on the board**/\n    return row.join(\"\")\n}\n\n// module.exports = joinToRow;\n\n/** for node.js\nif (require.main === module) {\n    // test 1:\n    console.log(joinToRow(['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']))\n    console.log(joinToRow(['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P']))\n    console.log(joinToRow(['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']))\n    // test 2:\n    console.log(joinToRow(['r', '#', '#', '#', 'k', '#', '#', 'r']))\n    console.log(joinToRow(['#', 'P', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', 'P', '#', '#']))\n    console.log(joinToRow(['p', '#', '#', '#', 'n', '#', '#', 'p']))\n    console.log(joinToRow(['#', '#', '#', 'b', '#', 'B', 'p', 'P']))\n    console.log(joinToRow(['N', 'B', 'Q', 'b', '#', 'q', '#', '#']))\n    console.log(joinToRow(['#', '#', '#', '#', '#', '#', '#', '#']))\n    console.log(joinToRow(['R', '#', '#', '#', 'K', '#', '#', 'R']))\n}\n*/\n\n"]},"metadata":{},"sourceType":"module"}