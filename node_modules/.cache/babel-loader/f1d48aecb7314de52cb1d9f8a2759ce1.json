{"ast":null,"code":"var _jsxFileName = \"/home/brian/ChessKingsCouncil/app/src/Components/NewGame/Customize/Customize.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Profile } from \"./Profile/Profile\";\nimport { defs } from \"./tests/testDefs1\";\nimport { ExpandModal } from \"./Profile/ProfileWB/ExpandModal\";\nimport { NameTooltip } from \"./Profile/NameTooltip\";\nimport { PromoList } from \"./Bottom/PromoList\";\nimport { SubList } from \"./Bottom/SubList\";\nimport { PromoAll } from \"./PromoAll\";\nimport { spanToText } from \"../../helpers/spanToText\";\nimport { offsetToText } from \"../../helpers/offsetToText\";\nimport { HelpComponent } from \"../../Help/HelpComponent\";\nimport { HelpModal } from \"../../Help/HelpModal\";\nimport { HelpText } from \"./HelpText\";\nimport { NewGamePlayerType as PlayerType } from \"./NewGamePlayerType\";\nimport { SearchBar } from \"./SearchBar\";\nimport { NavBar } from \"../../NavBar/NavBarRegular2\";\nimport { NavExpand } from \"../../NavBar/NavExpand2\";\nimport { NavColapse } from \"../../NavBar/NavColapse2\";\nimport { getDefs } from \"../../../API/getDefs\";\nimport { standardIds } from \"../../../apiHelpers/idAssign/standardIds\";\nimport { initStandardDefs } from \"../../../apiHelpers/initS\";\nimport { idAssign } from \"../../../apiHelpers/idAssign/top/idAssign\";\nimport { Ok } from \"./Bottom/CustomiseOk\";\nimport \"./Customize.css\";\nexport class Customize extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      binaryValue: true,\n      isHelpModal: false\n    };\n    this.defs = {};\n    this.displayDefs = {};\n    this.promos = [];\n    this.aboveView = [];\n    this.inView = [];\n    this.belowView = [];\n    this.promoListUpdate = false;\n    this.expandModals = [];\n    this.playerType = \"test\";\n    this.pieceName = null;\n    this.rangeType = null;\n    this.color = null;\n    this.newReplacement = null;\n    this.newReplaced = null;\n    this.show = true;\n    this.helpTitle = null;\n    this.helpText = null;\n    this.hmChildName = \"none\";\n    this.hmChildren = {\n      \"none\": null\n    };\n    this.searchText = \"\";\n    this.isTooltip = false;\n    this.nameDisp = null;\n    this.navExpanded = true;\n    this.clientX = 0;\n    this.clientY = 0;\n    this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n    this.subs = {\n      \"Rook\": null,\n      \"Bishop\": null,\n      \"Queen\": null,\n      \"Knight\": null\n    };\n    this.accept = this.accept.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togleNav = this.togleNav.bind(this);\n    this.togleSub = this.togleSub.bind(this);\n    this.toglePromo = this.toglePromo.bind(this);\n    this.toglePromoAll = this.toglePromoAll.bind(this);\n    this.loadNewCustom = this.loadIdDict.bind(this);\n    this.nameTooltip = this.nameTooltip.bind(this);\n    this.togleHelpModal = this.togleHelpModal.bind(this);\n    this.setHelpText = this.setHelpText.bind(this);\n    this.updateSearch = this.updateSearch.bind(this);\n    this.setPlayerType = this.setPlayerType.bind(this);\n  }\n\n  componentDidMount() {\n    getDefs().then(([defs]) => {\n      if (!defs) defs = {};\n      this.defs = initStandardDefs(defs);\n      this.displayDefs = JSON.parse(JSON.stringify(this.defs));\n      Object.keys(this.defs).forEach(pieceName => {\n        if (this.standards.includes(pieceName)) {\n          delete this.displayDefs[pieceName];\n        } else {\n          this.displayDefs[pieceName][\"W\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"W\"]);\n          this.displayDefs[pieceName][\"W\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"W\"]);\n          this.displayDefs[pieceName][\"B\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"B\"]);\n          this.displayDefs[pieceName][\"B\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"B\"]);\n        }\n      });\n      this.setState({\n        binaryValue: !this.state.binaryValue\n      });\n    });\n  }\n\n  getSpans(def) {\n    if (def.spans.length === 0) {\n      return Array(0);\n    }\n\n    let spanStrings = [];\n\n    for (var span of def.spans) {\n      spanStrings.push(spanToText(span));\n    }\n\n    return spanStrings;\n  }\n\n  getOffsets(def) {\n    if (def.offsets.length === 0) {\n      return Array(0);\n    }\n\n    let offsetStrings = [];\n    def.offsets.forEach(offset => {\n      offsetStrings.push(offsetToText(offset));\n    });\n    return offsetStrings;\n  }\n\n  nameTooltip(e, isTooltip, name) {\n    this.clientX = e.clientX;\n    this.clientY = e.clientY;\n    this.isTooltip = isTooltip;\n    if (this.isTooltip) this.nameDisp = name;else this.nameDisp = null;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  prepareForSubAssign() {\n    //names will be a list of names of all pieces.\n    var names = []; // subs is this.subs with key:value pairs reversed. \n    //frontend uses standard:sub dict, and backend uses\n    //sub:standard dict:\n\n    var subs = {};\n    Object.entries(this.subs).forEach(([standard, sub]) => {\n      if (sub != null) subs[sub] = standard;\n    });\n\n    if (this.promos.length > 20) {\n      for (let i = 0; i < 20; i++) names.push(this.promos[i]);\n    } else {\n      for (var p of this.promos) names.push(p);\n    }\n\n    for (var s of Object.keys(subs)) {\n      if (!names.includes(s)) names.push(s);\n    }\n\n    return [names, subs];\n  }\n\n  setStandardPromos(idDict) {\n    for (var [name1, id1] of Object.entries(standardIds)) {\n      for (var [id2, name2] of Object.entries(idDict)) {\n        if (name1 === name2 && id1 === id2 && id1 !== \"p\" && id1 !== \"k\") {\n          this.promos.push(name1);\n        }\n      }\n    }\n  }\n\n  loadIdDict() {\n    var [names, subs] = this.prepareForSubAssign();\n    var idDict = idAssign(names, subs);\n    return idDict;\n  }\n\n  accept() {\n    var idDict = this.loadIdDict();\n    this.setStandardPromos(idDict);\n    this.props.loadNewCustom(idDict, this.defs, this.promos);\n    this.class_ = this.show ? \"customize-window display-on\" : \"customize-window display-off\";\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  expand(pieceName, color, rangeType) {\n    this.pieceName = pieceName;\n    this.rangeType = rangeType;\n    this.color = color;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  getModals() {\n    if (this.pieceName != null && this.rangeType != null && this.color != null) {\n      return /*#__PURE__*/React.createElement(ExpandModal, {\n        def: this.defs[this.pieceName][this.color],\n        pieceName: this.pieceName,\n        rangeType: this.rangeType,\n        color: this.color,\n        expand: this.expand,\n        location: \"d4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 24\n        }\n      });\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 20\n      }\n    }, null);\n  }\n\n  togleSub(sub, standardPiece) {\n    this.subs[standardPiece] = sub;\n    Object.keys(this.subs).forEach(pieceName => {\n      if (pieceName !== standardPiece && this.subs[pieceName] === sub) this.subs[pieceName] = null;\n    });\n    this.newReplacement = sub;\n    this.newReplaced = standardPiece;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  toglePromo(pieceName) {\n    if (this.promos.includes(pieceName)) {\n      const index = this.promos.indexOf(pieceName);\n      if (index > -1) this.promos.splice(index, 1);\n    } else this.promos.push(pieceName);\n\n    this.promoListUpdate = true;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  toglePromoAll(promoAll) {\n    if (promoAll) {\n      for (var pieceName of Object.keys(this.displayDefs)) {\n        //this.defs to this.displayDefs\n        if (!this.promos.includes(pieceName)) {\n          this.promos.push(pieceName);\n        }\n      }\n    } else {\n      this.promos = [];\n    }\n\n    this.promoListUpdate = true;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  togleNav(boolVal) {\n    this.navExpanded = boolVal;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  divideList() {\n    this.aboveView = [];\n    this.inView = [];\n    this.belowView = [];\n    let remaining = 0;\n\n    if (this.promos.length > 5) {\n      remaining = this.promos.length - 5;\n      let lenTop = Math.floor(remaining / 2);\n\n      for (let i = 0; i < lenTop; i++) {\n        this.aboveView.push(this.promos[i]);\n      }\n\n      let current = lenTop;\n\n      for (let i = 0; i < 5; i++) {\n        this.inView.push(this.promos[current]);\n        current++;\n      }\n\n      for (let i = current; i < this.promos.length; i++) {\n        this.belowView.push(this.promos[i]);\n      }\n    } else this.inView = this.promos;\n\n    this.promoListUpdate = false;\n  }\n\n  getHelpModalChild() {\n    return this.hmChildren[this.hmChildName];\n  }\n\n  togleHelpModal(boolVal) {\n    this.setState({\n      isHelpModal: boolVal\n    });\n  }\n\n  setHelpText(helpTitle, helpText, hmChildName) {\n    this.helpTitle = helpTitle;\n    this.helpText = helpText;\n    this.hmChildName = hmChildName;\n  }\n\n  updateSearch(searchText) {\n    this.searchText = searchText;\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  applySearchFilter() {\n    if (this.searchText !== \"\") return Object.keys(this.displayDefs).filter(pieceName => pieceName.toLowerCase().startsWith(this.searchText));else return Object.keys(this.displayDefs);\n  }\n\n  setPlayerType(playerType) {\n    this.props.setPlayer(playerType);\n    this.setState({\n      binaryValue: !this.state.binaryValue\n    });\n  }\n\n  getProfiles() {\n    let pieceNames = this.applySearchFilter();\n    let profiles = [];\n\n    for (var pieceName of pieceNames) {\n      profiles.push( /*#__PURE__*/React.createElement(Profile, {\n        newReplacement: this.newReplacement,\n        newReplaced: this.newReplaced,\n        nameTooltip: this.nameTooltip,\n        togleSub: this.togleSub,\n        toglePromo: this.toglePromo,\n        expand: this.expand,\n        pieceName: pieceName,\n        promos: this.promos,\n        displayDefs: this.displayDefs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return profiles;\n  }\n\n  render() {\n    if (this.promoListUpdate) this.divideList();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-customize-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-customize-top-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-customize-top-bar-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, \"Customize\"), /*#__PURE__*/React.createElement(HelpComponent, {\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      helpTitle: \"Customizing a New Game\",\n      helpText: HelpText,\n      hmChildName: \"none\",\n      style: {\n        position: \"absolute\",\n        height: 15,\n        width: 15,\n        left: 200,\n        top: 18\n      },\n      normal: \"/Images/question-mark-a9a9a9.svg\",\n      highlighted: \"/Images/question-mark-72e2ff.svg\",\n      color: \"#72e2ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PlayerType, {\n      setPlayerType: this.setPlayerType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      updateSearch: this.updateSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PromoAll, {\n      toglePromoAll: this.toglePromoAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-piece-profiles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, this.getProfiles()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-bottom-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SubList, {\n      subs: this.subs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-promo-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, \"Pawn Promotions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-game-promo-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PromoList, {\n      promos: this.promos,\n      aboveView: this.aboveView,\n      inView: this.inView,\n      belowView: this.belowView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    })))), this.isTooltip && /*#__PURE__*/React.createElement(NameTooltip, {\n      clientX: this.clientX,\n      clientY: this.clientY,\n      name: this.nameDisp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 37\n      }\n    }), this.getModals(), this.state.isHelpModal && /*#__PURE__*/React.createElement(HelpModal, {\n      helpTitle: this.helpTitle,\n      helpText: this.helpText,\n      togleHelpModal: this.togleHelpModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, this.getHelpModalChild()), this.navExpanded && /*#__PURE__*/React.createElement(NavBar, {\n      currentPage: \"/NewGame\",\n      togleHelpModal: this.togleHelpModal,\n      setHelpText: this.setHelpText,\n      navBarPosTop: 0,\n      navBarPosLeft: 258,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      backgroundColorSelected: \"#3d3d3d\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 39\n      }\n    }), this.navExpanded && /*#__PURE__*/React.createElement(NavColapse, {\n      left: 1276,\n      top: 0,\n      togleNav: this.togleNav,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 39\n      }\n    }), !this.navExpanded && /*#__PURE__*/React.createElement(NavExpand, {\n      left: 1276,\n      top: 0,\n      togleNav: this.togleNav,\n      backgroundColor: \"#515151\",\n      iconColor: \"b6b6b6\",\n      border: \"1px solid #707070\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Ok, {\n      accept: this.accept,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport let test = () => ReactDOM.render( /*#__PURE__*/React.createElement(Customize, {\n  defs: defs,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 41\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/Components/NewGame/Customize/Customize.jsx"],"names":["React","ReactDOM","Profile","defs","ExpandModal","NameTooltip","PromoList","SubList","PromoAll","spanToText","offsetToText","HelpComponent","HelpModal","HelpText","NewGamePlayerType","PlayerType","SearchBar","NavBar","NavExpand","NavColapse","getDefs","standardIds","initStandardDefs","idAssign","Ok","Customize","Component","constructor","props","state","binaryValue","isHelpModal","displayDefs","promos","aboveView","inView","belowView","promoListUpdate","expandModals","playerType","pieceName","rangeType","color","newReplacement","newReplaced","show","helpTitle","helpText","hmChildName","hmChildren","searchText","isTooltip","nameDisp","navExpanded","clientX","clientY","standards","subs","accept","bind","expand","togleNav","togleSub","toglePromo","toglePromoAll","loadNewCustom","loadIdDict","nameTooltip","togleHelpModal","setHelpText","updateSearch","setPlayerType","componentDidMount","then","JSON","parse","stringify","Object","keys","forEach","includes","getSpans","getOffsets","setState","def","spans","length","Array","spanStrings","span","push","offsets","offsetStrings","offset","e","name","prepareForSubAssign","names","entries","standard","sub","i","p","s","setStandardPromos","idDict","name1","id1","id2","name2","class_","getModals","standardPiece","index","indexOf","splice","promoAll","boolVal","divideList","remaining","lenTop","Math","floor","current","getHelpModalChild","applySearchFilter","filter","toLowerCase","startsWith","setPlayer","getProfiles","pieceNames","profiles","render","position","height","width","left","top","test","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Profile } from \"./Profile/Profile\";\nimport {defs} from \"./tests/testDefs1\";\nimport { ExpandModal } from \"./Profile/ProfileWB/ExpandModal\";\nimport {NameTooltip} from \"./Profile/NameTooltip\";\nimport {PromoList} from \"./Bottom/PromoList\";\nimport {SubList} from \"./Bottom/SubList\";\nimport {PromoAll} from \"./PromoAll\";\nimport {spanToText} from \"../../helpers/spanToText\";\nimport {offsetToText} from \"../../helpers/offsetToText\";\nimport {HelpComponent} from \"../../Help/HelpComponent\";\nimport {HelpModal} from \"../../Help/HelpModal\";\nimport {HelpText} from \"./HelpText\";\nimport {NewGamePlayerType as PlayerType} from \"./NewGamePlayerType\";\nimport { SearchBar } from \"./SearchBar\";\nimport {NavBar} from \"../../NavBar/NavBarRegular2\";\nimport {NavExpand} from \"../../NavBar/NavExpand2\";\nimport {NavColapse} from \"../../NavBar/NavColapse2\";\nimport {getDefs} from \"../../../API/getDefs\";\nimport {standardIds} from \"../../../apiHelpers/idAssign/standardIds\";\nimport {initStandardDefs} from \"../../../apiHelpers/initS\";\nimport { idAssign } from \"../../../apiHelpers/idAssign/top/idAssign\";\nimport {Ok} from \"./Bottom/CustomiseOk\";\nimport \"./Customize.css\";\n\n\nexport class Customize extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {binaryValue: true, isHelpModal: false};\n        this.defs = {};\n        this.displayDefs = {};\n        this.promos = [];\n        this.aboveView = [];\n        this.inView = [];\n        this.belowView = [];\n        this.promoListUpdate = false;\n        this.expandModals = [];\n        this.playerType = \"test\";\n        this.pieceName = null; \n        this.rangeType = null;\n        this.color = null;\n        this.newReplacement = null;\n        this.newReplaced = null;\n        this.show = true;\n        this.helpTitle = null;\n        this.helpText = null;\n        this.hmChildName = \"none\";\n        this.hmChildren = {\"none\":null};\n        this.searchText = \"\";\n        this.isTooltip = false;\n        this.nameDisp = null;\n        this.navExpanded = true;\n        this.clientX = 0;\n        this.clientY = 0;\n        this.standards = [\"Rook\", \"Bishop\", \"Queen\", \"Knight\", \"Pawn\", \"King\"];\n        \n        this.subs = {\n            \"Rook\":null,\n            \"Bishop\":null,\n            \"Queen\":null,\n            \"Knight\":null\n        }\n        this.accept = this.accept.bind(this);\n        this.expand = this.expand.bind(this);\n        this.togleNav = this.togleNav.bind(this);\n        this.togleSub = this.togleSub.bind(this);\n        this.toglePromo = this.toglePromo.bind(this);\n        this.toglePromoAll = this.toglePromoAll.bind(this);\n        this.loadNewCustom = this.loadIdDict.bind(this);\n        this.nameTooltip = this.nameTooltip.bind(this);\n        this.togleHelpModal = this.togleHelpModal.bind(this);\n        this.setHelpText = this.setHelpText.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.setPlayerType = this.setPlayerType.bind(this);\n    }\n\n    componentDidMount() {\n        \n        getDefs().then( ([defs]) => {\n\n            if (! defs)\n                defs = {};\n\n            this.defs = initStandardDefs(defs)\n\n            this.displayDefs = JSON.parse(JSON.stringify(this.defs))\n            \n            Object.keys(this.defs).forEach(pieceName => {\n                if (this.standards.includes(pieceName)) {\n                    delete this.displayDefs[pieceName]\n                }\n                else {\n                    this.displayDefs[pieceName][\"W\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"W\"])\n                    this.displayDefs[pieceName][\"W\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"W\"])\n                    this.displayDefs[pieceName][\"B\"][\"spans\"] = this.getSpans(this.displayDefs[pieceName][\"B\"])\n                    this.displayDefs[pieceName][\"B\"][\"offsets\"] = this.getOffsets(this.displayDefs[pieceName][\"B\"])                    \n                }\n            });\n            this.setState({binaryValue: ! this.state.binaryValue});\n        });\n    }\n\n    getSpans(def) {\n\n        if (def.spans.length === 0) {\n            return Array(0);\n        }\n\n        let spanStrings = [];\n        for (var span of def.spans) {\n            spanStrings.push(spanToText(span))\n        }\n        return spanStrings;\n    }\n        \n    getOffsets(def) {\n\n        if (def.offsets.length === 0) {\n            return Array(0);\n        }\n\n        let offsetStrings = []\n        def.offsets.forEach(offset => {\n            offsetStrings.push(offsetToText(offset));\n        })\n        return offsetStrings;\n    }\n\n    nameTooltip(e, isTooltip, name) {\n        this.clientX = e.clientX;\n        this.clientY = e.clientY;\n        this.isTooltip = isTooltip;\n        if (this.isTooltip)\n            this.nameDisp = name;\n        else\n            this.nameDisp = null;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    prepareForSubAssign() {\n        //names will be a list of names of all pieces.\n        var names = [];\n        // subs is this.subs with key:value pairs reversed. \n        //frontend uses standard:sub dict, and backend uses\n        //sub:standard dict:\n        var subs = {};\n        Object.entries(this.subs).forEach( ([standard, sub]) => {\n            if (sub != null)\n                subs[sub] = standard;\n        });\n        if (this.promos.length > 20) { \n            for (let i = 0; i < 20; i++)\n                names.push(this.promos[i])\n        }\n        else {\n            for (var p of this.promos) \n                names.push(p)\n        }\n        for (var s of Object.keys(subs)) {\n            if (! names.includes(s)) \n                names.push(s)\n        }\n        return [names, subs];\n    }\n\n    setStandardPromos(idDict) {\n        for (var [name1, id1] of Object.entries(standardIds)) {\n            for (var [id2, name2] of Object.entries(idDict)) {\n                if (name1 === name2 && id1 === id2 && id1 !== \"p\" && id1 !== \"k\") {\n                    this.promos.push(name1)\n                }\n            }\n        }\n    }\n\n    loadIdDict() {\n        var [names, subs] = this.prepareForSubAssign();\n        var idDict = idAssign(names, subs);\n        return idDict;\n    }\n\n    accept() {\n        var idDict = this.loadIdDict()\n        this.setStandardPromos(idDict)\n        this.props.loadNewCustom(idDict, this.defs, this.promos);\n        this.class_ = this.show ? \"customize-window display-on\" : \"customize-window display-off\";\n        this.setState({binaryValue: ! this.state.binaryValue});\n    }\n\n    expand(pieceName, color, rangeType) {\n        this.pieceName = pieceName;\n        this.rangeType = rangeType;\n        this.color = color;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    getModals() {\n        if (this.pieceName != null && this.rangeType != null && this.color != null) {\n                return <ExpandModal def={this.defs[this.pieceName][this.color]}\n                                    pieceName={this.pieceName} \n                                    rangeType={this.rangeType} \n                                    color={this.color} \n                                    expand={this.expand} \n                                    location=\"d4\"\n                                    />\n        }\n        else\n            return <div>{null}</div>\n    }\n\n    togleSub(sub, standardPiece) {\n        this.subs[standardPiece] = sub;\n        Object.keys(this.subs).forEach( pieceName => {\n\n            if (pieceName !== standardPiece && this.subs[pieceName] === sub)\n                this.subs[pieceName] = null;\n\n        });\n        this.newReplacement = sub;\n        this.newReplaced = standardPiece; \n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n    \n    toglePromo(pieceName) {\n        if (this.promos.includes(pieceName)) {\n            const index = this.promos.indexOf(pieceName);\n            if (index > -1)\n                this.promos.splice(index, 1)\n        }\n        else\n            this.promos.push(pieceName);\n        this.promoListUpdate = true;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    toglePromoAll(promoAll) {\n\n        if (promoAll) {\n            for (var pieceName of Object.keys(this.displayDefs)) { //this.defs to this.displayDefs\n                if (! this.promos.includes(pieceName)) {\n                    this.promos.push(pieceName);\n                }\n            }\n        }\n\n        else {\n            this.promos = [];\n        }\n        this.promoListUpdate = true;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n    \n    togleNav(boolVal) {\n        this.navExpanded = boolVal;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    divideList() {\n        this.aboveView = [];\n        this.inView = [];\n        this.belowView = [];\n        let remaining = 0;\n        if (this.promos.length > 5) {\n            remaining = this.promos.length - 5;\n            let lenTop = Math.floor(remaining / 2);\n            for (let i = 0; i < lenTop; i++) {\n                this.aboveView.push(this.promos[i])\n            }\n            let current = lenTop;\n            for (let i = 0; i < 5; i++) {\n                this.inView.push(this.promos[current]);\n                current++;\n            }\n            for (let i = current; i < this.promos.length; i++) {\n                this.belowView.push(this.promos[i]);       \n            }\n        }\n        else \n            this.inView = this.promos;\n\n        this.promoListUpdate = false; \n\n    }\n    \n    getHelpModalChild() {\n        return this.hmChildren[this.hmChildName];\n    }\n\n    togleHelpModal(boolVal) {\n        this.setState({isHelpModal: boolVal})\n    }\n\n    setHelpText(helpTitle, helpText, hmChildName) {\n        this.helpTitle = helpTitle;\n        this.helpText = helpText;\n        this.hmChildName = hmChildName;        \n    }\n\n    updateSearch(searchText) {\n        this.searchText = searchText;\n        this.setState({binaryValue: ! this.state.binaryValue})\n    }\n\n    applySearchFilter() {\n        if (this.searchText !== \"\")\n            return Object.keys(this.displayDefs).filter(pieceName => pieceName.toLowerCase().startsWith(this.searchText));\n        else\n            return Object.keys(this.displayDefs);\n    }\n\n     setPlayerType(playerType) {\n        this.props.setPlayer(playerType);\n        this.setState({binaryValue: ! this.state.binaryValue});\n    }\n\n    getProfiles() {\n        let pieceNames = this.applySearchFilter();\n        let profiles = [];\n        for (var pieceName of pieceNames) {\n            profiles.push(\n                <Profile \n                  newReplacement={this.newReplacement} \n                  newReplaced={this.newReplaced}\n                  nameTooltip={this.nameTooltip}\n                  togleSub={this.togleSub} \n                  toglePromo={this.toglePromo} \n                  expand={this.expand}\n                  pieceName={pieceName}\n                  promos={this.promos}\n                  displayDefs={this.displayDefs}\n                />\n            );\n        }\n        return profiles;\n    }\n\n    render() {\n\n        if (this.promoListUpdate)\n            this.divideList();\n\n        return(\n            <>  \n                <div className=\"new-game-customize-window\">\n                    <div className=\"new-game-customize-top-bar\">\n                        <div className=\"new-game-customize-top-bar-title\">\n                            Customize\n                        </div>\n                        <HelpComponent togleHelpModal={this.togleHelpModal} \n                                       setHelpText={this.setHelpText}\n                                       helpTitle=\"Customizing a New Game\" \n                                       helpText={HelpText}\n                                       hmChildName=\"none\"\n                                       style={{ position:\"absolute\",\n                                                height:15,\n                                                width:15,\n                                                left:200,\n                                                top:18\n                                       }}\n                                       normal=\"/Images/question-mark-a9a9a9.svg\"\n                                       highlighted=\"/Images/question-mark-72e2ff.svg\"\n                                       color=\"#72e2ff\"                        \n                        />\n                        <PlayerType setPlayerType={this.setPlayerType} />\n                        <SearchBar updateSearch={this.updateSearch} />\n                        <PromoAll toglePromoAll={this.toglePromoAll} />\n                    </div>\n                    <div className=\"new-game-piece-profiles\">\n                        {this.getProfiles()}\n                    </div>\n                    <div className=\"new-game-bottom-bar\">\n                        <SubList subs={this.subs} />\n                        <div className=\"new-game-promo-label\">Pawn Promotions</div>\n                        <div className=\"new-game-promo-list-container\">\n                            <PromoList promos={this.promos}\n                                       aboveView={this.aboveView} \n                                       inView={this.inView}\n                                       belowView={this.belowView}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {this.isTooltip && (<NameTooltip clientX={this.clientX} clientY={this.clientY} name={this.nameDisp} />) }\n                {this.getModals()}\n                {this.state.isHelpModal && (\n                    <HelpModal helpTitle={this.helpTitle} helpText={this.helpText} togleHelpModal={this.togleHelpModal}>\n                        {this.getHelpModalChild()}\n                    </HelpModal> \n                )}\n                \n                {this.navExpanded && (<NavBar currentPage=\"/NewGame\" togleHelpModal={this.togleHelpModal} setHelpText={this.setHelpText} \n                                              navBarPosTop={0} navBarPosLeft={258} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" backgroundColorSelected=\"#3d3d3d\" border=\"1px solid #707070\" />)}\n                {this.navExpanded && (<NavColapse  left={1276}  top={0} togleNav={this.togleNav} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" border=\"1px solid #707070\" />)}\n                {! this.navExpanded && (<NavExpand left={1276}  top={0} togleNav={this.togleNav} backgroundColor=\"#515151\" iconColor=\"b6b6b6\" border=\"1px solid #707070\" />)}\n                <Ok accept={this.accept} />\n            </>\n\n        )\n    }\n}\n\n\nexport let test = () => ReactDOM.render(<Customize defs={defs} />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}