{"ast":null,"code":"import { step_1sqr90d, step_1sqr270d } from \"../../helpers/stepFuncs\";\nexport function get2SqrJump(sqr, color) {\n  /*at this point it has been determined that there is a 2 square jump available so now get it**/\n  var x, y;\n\n  switch (color) {\n    case 'W':\n      [x, y] = step_1sqr90d(...sqr);\n      [x, y] = step_1sqr90d(x, y);\n      break;\n\n    case 'B':\n      [x, y] = step_1sqr270d(...sqr);\n      [x, y] = step_1sqr270d(x, y);\n      break;\n\n    default:\n      console.log('error: invalid color')[(x, y)] = [-1, -1];\n      break;\n  }\n\n  return [x, y];\n} // module.exports = get2SqrJump;\n\n/** for node.js\nif (require.main === module) {\n    console.log(get2SqrJump([1, 2], 'W'))\n    console.log(get2SqrJump([3, 7], 'B'));\n\n}\n*/","map":{"version":3,"sources":["/home/brian/ChessKingsCouncil/app/src/game_logic/ranges/pawn/get2SqrJump.js"],"names":["step_1sqr90d","step_1sqr270d","get2SqrJump","sqr","color","x","y","console","log"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,yBAA1C;AAEA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AACpC;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AACA,UAAOF,KAAP;AACI,SAAK,GAAL;AACI,OAACC,CAAD,EAAIC,CAAJ,IAASN,YAAY,CAAC,GAAGG,GAAJ,CAArB;AACA,OAACE,CAAD,EAAIC,CAAJ,IAASN,YAAY,CAACK,CAAD,EAAIC,CAAJ,CAArB;AACA;;AACJ,SAAK,GAAL;AACI,OAACD,CAAD,EAAIC,CAAJ,IAASL,aAAa,CAAC,GAAGE,GAAJ,CAAtB;AACA,OAACE,CAAD,EAAIC,CAAJ,IAASL,aAAa,CAACI,CAAD,EAAIC,CAAJ,CAAtB;AACA;;AACJ;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,GACCH,CAAC,EAAEC,CADJ,KACS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CADT;AAEA;AAZR;;AAeA,SAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;AACH,C,CAED;;AAEA","sourcesContent":["import {step_1sqr90d, step_1sqr270d} from \"../../helpers/stepFuncs\";\n\nexport function get2SqrJump(sqr, color) {\n    /*at this point it has been determined that there is a 2 square jump available so now get it**/\n    var x, y;\n    switch(color) {\n        case 'W':\n            [x, y] = step_1sqr90d(...sqr);\n            [x, y] = step_1sqr90d(x, y);\n            break;\n        case 'B':\n            [x, y] = step_1sqr270d(...sqr);\n            [x, y] = step_1sqr270d(x, y);\n            break;\n        default:\n            console.log('error: invalid color')\n            [x, y] = [-1, -1]\n            break;\n    }\n\n    return [x, y];\n}\n\n// module.exports = get2SqrJump;\n\n/** for node.js\nif (require.main === module) {\n    console.log(get2SqrJump([1, 2], 'W'))\n    console.log(get2SqrJump([3, 7], 'B'));\n\n}\n*/"]},"metadata":{},"sourceType":"module"}